---
openapi: 3.0.3
info:
  title: OpenAPI specification for Network Applications
  description: |
    OpenAPI specification for Catalyst Center - Appx Network Applications
  termsOfService: https://www.cisco.com/c/en/us/about/legal/cloud-and-software/end_user_license_agreement.html
  contact:
    name: Cisco TAC World Wide
    url: https://www.cisco.com/c/en/us/support/web/tsd-cisco-worldwide-contacts.html
    email: tac@cisco.com
  license:
    name: Cisco Catalyst Center License
    url: https://www.cisco.com/c/en/us/products/collateral/software/dna-software-ebook-cte.html
  version: 1.0.0
externalDocs:
  description: Catalyst Center Developer API resources
  url: https://developer.cisco.com/dnacenter/
servers:
- url: https://developer.cisco.com/dna/data/api/v1
tags:
- name: networkApplications
  description: Operations related to Catalyst Center - Appx Network Applications
  externalDocs:
    description: Catalyst Center Assurance user guide
    url: https://www.cisco.com/c/en/us/support/cloud-systems-management/dna-center/products-user-guide-list.html
paths:
  /dna/data/api/v1/networkApplications:
    get:
      tags:
      - networkApplications
      summary: Retrieves the list of network applications along with experience and health metrics
      description: "Retrieves the list of network applications along with experience and health metrics. If startTime and endTime are not provided, the API defaults to the last 24 hours."
      operationId: readNetworkApplications
      parameters:
      - name: startTime
        in: query
        description: |
          Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        schema:
          type: integer
          format: int64
        example: 1705348800000
      - name: endTime
        in: query
        description: |
          End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        required: false
        schema:
          type: integer
          format: int64
        example: 1705435200000
      - name: limit
        in: query
        description: Maximum number of records to return
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 100
      - name: offset
        in: query
        description: Specifies the starting point within all records returned by the API. It's one based offset. The starting value is 1.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: sortBy
        in: query
        description: A field within the response to sort by.
        schema:
          type: string
      - name: order
        in: query
        description: The sort order of the field ascending or descending.
        schema:
          type: string
          default: asc
          enum:
          - asc
          - desc
      - name: siteId
        in: query
        description: |-
          The site UUID without the top level hierarchy. (Ex."buildingUuid") Examples:
          `siteId=buildingUuid` (single siteId requested)
          `siteId=buildingUuid1&siteId=buildingUuid2` (multiple siteId requested)
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ssid
        in: query
        description: |
          In the context of a network application, SSID refers to the name of the wireless network to which the client connects.

          Examples:

          `ssid=Alpha` (single ssid requested)

          `ssid=Alpha&ssid=Guest` (multiple ssid requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: applicationName
        in: query
        description: |
          Name of the application for which the experience data is intended.

          Examples:

          `applicationName=webex` (single applicationName requested)

          `applicationName=webex&applicationName=teams` (multiple applicationName requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: businessRelevance
        in: query
        description: |
          The application can be chosen to be categorized as business-relevant, irrelevant, or default (neutral). By doing so, the assurance application prioritizes the monitoring and analysis of business-relevant data, ensuring critical insights are captured. Applications marked as irrelevant or default are selectively excluded from certain data sets, streamlining focus on what's most important for business outcomes.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - BUSINESS_RELEVANT
          - BUSINESS_IRRELEVANT
          - DEFAULT
        example: BUSINESS_RELEVANT
      - name: attribute
        in: query
        description: |-
          List of attributes related to resource that can be requested to only be part of the response along with the required attributes. Supported attributes are applicationName, siteId, exporterIpAddress, exporterNetworkDeviceId, healthScore, businessRelevance, usage, throughput, packetLossPercent, networkLatency, applicationServerLatency, clientNetworkLatency, serverNetworkLatency, trafficClass, jitter, ssid Examples:
          `attribute=healthScore` (single attribute requested)
          `attribute=healthScore&attribute=ssid&attribute=jitter` (multiple attribute requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      responses:
        "200":
          description: Collection of application experience Response model on success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkApplicationsResponseModel'
              examples:
                networkApplicationsResponse:
                  $ref: '#/components/examples/networkApplicationsResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppxErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppxErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /dna/data/api/v1/networkApplications/count:
    get:
      tags:
      - networkApplications
      summary: Retrieves the total count of network applications by applying basic filtering
      description: "Retrieves the number of network applications by applying basic filtering. If startTime and endTime are not provided, the API defaults to the last 24 hours."
      operationId: readNetworkApplicationsCount
      parameters:
      - name: startTime
        in: query
        description: |
          Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        schema:
          type: integer
          format: int64
        example: 1705348800000
      - name: endTime
        in: query
        description: |
          End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        required: false
        schema:
          type: integer
          format: int64
        example: 1705435200000
      - name: siteId
        in: query
        description: |-
          The site UUID without the top level hierarchy. (Ex."buildingUuid") Examples:
          `siteId=buildingUuid` (single siteId requested)
          `siteId=buildingUuid1&siteId=buildingUuid2` (multiple siteId requested)
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ssid
        in: query
        description: |
          In the context of a network application, SSID refers to the name of the wireless network to which the client connects.

          Examples:

          `ssid=Alpha` (single ssid requested)

          `ssid=Alpha&ssid=Guest` (multiple ssid requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: applicationName
        in: query
        description: |
          Name of the application for which the experience data is intended.

          Examples:

          `applicationName=webex` (single applicationName requested)

          `applicationName=webex&applicationName=teams` (multiple applicationName requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: businessRelevance
        in: query
        description: |
          The application can be chosen to be categorized as business-relevant, irrelevant, or default (neutral). By doing so, the assurance application prioritizes the monitoring and analysis of business-relevant data, ensuring critical insights are captured. Applications marked as irrelevant or default are selectively excluded from certain data sets, streamlining focus on what's most important for business outcomes.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - BUSINESS_RELEVANT
          - BUSINESS_IRRELEVANT
          - DEFAULT
        example: BUSINESS_RELEVANT
      - name: attribute
        in: query
        description: |-
          List of attributes related to resource that can be requested to only be part of the response along with the required attributes. Supported attributes are applicationName, siteId, exporterIpAddress, exporterNetworkDeviceId, healthScore, businessRelevance, usage, throughput, packetLossPercent, networkLatency, applicationServerLatency, clientNetworkLatency, serverNetworkLatency, trafficClass, jitter, ssid Examples:
          `attribute=healthScore` (single attribute requested)
          `attribute=healthScore&attribute=ssid&attribute=jitter` (multiple attribute requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      responses:
        "200":
          description: Reponse object containing total count of the records after applying requested filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkApplicationCountIntegerResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppxErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppxErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /dna/data/api/v1/networkApplications/trendAnalytics:
    post:
      tags:
      - networkApplications
      summary: Retrieves the Trend analytics data related to network applications.
      description: |-
        Retrieves the trend analytics of applications experience data for the specified time range. The data will be grouped based on the given trend time interval. This API facilitates obtaining consolidated insights into the performance and status of the network applications over the specified start and end time. If startTime and endTime are not provided, the API defaults to the last 24 hours.

        **The input payload contains the following fields,**
        |Field Name | Description |
        | --- | --- |
        | `startTime` | The start time indicates when the API begins retrieving data related to the resource. It must be specified in the UNIX epoch time format, measured in milliseconds. This value is inclusive, and if left unspecified, the default is 1 day before the  endTime.|
        | `endTime` | The end time indicates the upper limit until which the API retrieves data related to the resource. It must be defined in the UNIX epoch time format, measured in milliseconds. This value is inclusive, and if left unspecified, the default is the latest available data. |
        | `siteIds` |  The list of Building UUID  |
        | `trendInterval` |  The time window for aggregating metrics. This is a mandatory request field. Possible values include *5 minutes, 10 minutes, 1 hour or 3 hour. |
        | `groupBy` | Specifies the attributes for grouping the data. Refer to `NetworkApplicationGroupByField` model for the supported grouping attributes|
        | `attributes` | A list of attributes associated with the resource, which can be requested to be included in the response alongside the required attributes. Refer to `NetworkApplicationTrendAttribute` model for the supported attributes |
        | `aggregateAttributes` | This specifies the attribute name and the function to be applied during data querying. The aggregate function is then applied to data within the specified start and end times. Refer to `NetworkApplicationAggregateField` model for the supported aggregate attributes |
        |`filters`| This is used to specify one or more conditions for filtering the queried data. Refer to `NetworkApplicationFilterField` model for the supported filters |
        |`page`| It includes the **limit, cursor, and timeSortOrder** fields. *limit* denotes the number of records to process per page, *cursor* signifies the initial data position, and *timeSortOrder* is used sort the response based on the timestamp either in ascending or descending order. Default page limit is 100 and order is asc|
      operationId: queryNetworkApplicationsTrendAnalytics
      parameters:
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      requestBody:
        $ref: '#/components/requestBodies/NetworkApplicationTrendQueryRequest'
      responses:
        "200":
          description: Collection of trend responses with Network Applications Response model on success with aggregate attributes and groupBy
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/NetworkApplicationTrendResponse'
              examples:
                networkApplicationTrendResponseWithoutGroupBy:
                  $ref: '#/components/examples/networkApplicationTrendResponseWithoutGroupBy'
                networkApplicationTrendResponseWithGroupBy:
                  $ref: '#/components/examples/networkApplicationTrendResponseWithGroupBy'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppxErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppxErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
components:
  schemas:
    appStartTime:
      type: integer
      description: Start time from which the API queries the dataset related to the resource. It must be specified in terms of milliseconds since UNIX epoch. Value is inclusive.
      format: int64
      example: 1705348800000
    appEndTime:
      type: integer
      description: End time to which the API queries the dataset related to the resource. It must be specified in terms of milliseconds since UNIX epoch. Value is inclusive.
      format: int64
      example: 1705435200000
    NetworkApplicationGroupByField:
      type: string
      description: Supported groupBy attributes related to network applications
      enum:
      - applicationName
      - businessRelevance
      - exporterIpAddress
      - siteId
      - throughput
      - trafficClass
      - usage
    NetworkApplicationFilterField:
      type: string
      description: Supported filter attributes related to network applications
      enum:
      - applicationName
      - applicationServerLatency
      - businessRelevance
      - clientNetworkLatency
      - dscp
      - exporterIpAddress
      - exporterNetworkDeviceId
      - jitter
      - ssid
      - networkLatency
      - packetLossPercent
      - serverNetworkLatency
      - throughput
      - trafficClass
      - usage
    NetworkApplicationAggregateField:
      type: string
      description: |-
        Supported aggregated attributes related to network applications
        | Aggregate Function | Supported Aggregate Fields |
        | --- | --- |
        | 'latest'| applicationName, applicationServerLatency, businessRelevance, clientNetworkLatency, dscp, exporterIpAddress, exporterNetworkDeviceId, jitter, networkLatency, packetLossPercent, serverNetworkLatency, throughput, trafficClass, usage |
        | `min` | applicationServerLatency, clientNetworkLatency, jitter, networkLatency, packetLossPercent, serverNetworkLatency, throughput, usage |
        | `max` | applicationServerLatency, clientNetworkLatency, jitter, networkLatency, packetLossPercent, serverNetworkLatency, throughput, usage |
        | `avg` | applicationServerLatency, clientNetworkLatency, jitter, networkLatency, packetLossPercent, serverNetworkLatency, throughput, usage |
        | `sum` | usage |
        | `count` | applicationName, businessRelevance, dscp, exporterIpAddress, exporterNetworkDeviceId, trafficClass |
        | 'distinctCount' | applicationName, businessRelevance, dscp, exporterIpAddress, exporterNetworkDeviceId, trafficClass |
      enum:
      - applicationName
      - applicationServerLatency
      - businessRelevance
      - clientNetworkLatency
      - dscp
      - exporterIpAddress
      - exporterNetworkDeviceId
      - jitter
      - networkLatency
      - packetLossPercent
      - serverNetworkLatency
      - throughput
      - trafficClass
      - usage
    NetworkApplicationAggregateAttribute:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkApplicationAggregateField'
        function:
          $ref: '#/components/schemas/ApplicationFunction'
      description: |
        Field name and list of aggregate functions to be applied when
        querying the data.
    NetworkApplicationAggregateAttributes:
      type: array
      example:
      - name: usage
        function: min
      - name: appliactionName
        function: latest
      - name: usage
        function: sum
      items:
        $ref: '#/components/schemas/NetworkApplicationAggregateAttribute'
    NetworkApplicationGroupByAttributes:
      type: array
      example:
      - usage
      - applicationName
      items:
        $ref: '#/components/schemas/NetworkApplicationGroupByField'
    NetworkApplicationTrendQueryRequest:
      required:
      - siteIds
      - trendInterval
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/appStartTime'
        endTime:
          $ref: '#/components/schemas/appEndTime'
        siteIds:
          type: array
          description: The site building UUID. This API can be used to get building UUID. /data/api/v1/siteHealthSummaries?attribute=siteHierarchyId
          example: -364ff1bd-5125-4fa1-9ae3-55e7fb6ca592
          items:
            type: string
        trendInterval:
          $ref: '#/components/schemas/appTrendInterval'
        groupBy:
          $ref: '#/components/schemas/NetworkApplicationGroupByAttributes'
        attributes:
          $ref: '#/components/schemas/NetworkApplicationTrendAttributes'
        filters:
          $ref: '#/components/schemas/NetworkApplicationFilters'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkApplicationAggregateAttributes'
        page:
          $ref: '#/components/schemas/NetworkApplicationPaginationTrend'
      description: |
        Request payload used for complex trend query API. It contains |
        'trend' 'attributes' - To provide the list of fields that user is interested in the response. |
        'filters' - To provide list of complex filters with combination of AND filters and OR filters to be applied on the API resource |
        'aggregateAttributes' - To provide list of fields and corresponding aggregation functions to run.
    NetworkApplicationTrendAttributes:
      type: array
      example:
      - applicationName
      - jitter
      items:
        $ref: '#/components/schemas/NetworkApplicationTrendAttribute'
    NetworkApplicationTrendAttribute:
      type: string
      description: Attributes related to application experience that can be requested to only be part of the response along with the required attributes.
      enum:
      - applicationName
      - applicationServerLatency
      - businessRelevance
      - clientNetworkLatency
      - dscp
      - exporterIpAddress
      - exporterNetworkDeviceId
      - jitter
      - networkLatency
      - packetLossPercent
      - serverNetworkLatency
      - siteId
      - ssid
      - throughput
      - trafficClass
      - usage
    NetworkApplicationFilters:
      maxItems: 10
      type: array
      description: |
        List of filters to apply when querying the data


        Filtering on numerical fields (integer, number,etc.) will support the
        numerical operators:


        [eq, lt, gt, lte, gte]


        Filtering on text fields (string), will support the string operators:


        [eq, in, like]


        For the list of supported fields, please refer to the NetworkApplicationFilterField model
        model.
      example:
      - key: applicationName
        operator: eq
        value: webex-meeting
      - key: trafficClass
        operator: in
        value:
        - ops-admin-mgmt
        - network-control
      - logicalOperator: or
        filters:
        - key: networkLatency
          operator: gt
          value: 70
        - key: ssid
          operator: eq
          value: CiscoSensorProvisioning
      items:
        $ref: '#/components/schemas/NetworkApplicationFilterObj'
    NetworkApplicationFilterObj:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/NetworkApplicationFilterField'
        operator:
          $ref: '#/components/schemas/NetworkApplicationOperator'
        logicalOperator:
          $ref: '#/components/schemas/NetworkApplicationLogicalOperator'
        value:
          type: object
          description: |
            Field value(s) to filter the data set. Array of values is used for "in" or "out" operator. Values will be of whatever type the   specific field being filtered is defined with.

            For other operators, filter value is of whatever type the specific field being filtered is defined with.

            In the case of an "and" or "or" operator, this values array will be ignored, and the values arrays in each of the *nested filters*   will be used.
        filters:
          type: array
          description: |
            Nested array of filters in case of AND/OR based filters. Only one level of nesting will be supported.

            Structure of nested filter is the same as parent with all operators supported except AND or OR.
          items:
            $ref: '#/components/schemas/NetworkApplicationFilterObj'
    NetworkApplicationPaginationWithAggregate:
      type: object
      properties:
        limit:
          minimum: 1
          type: integer
          description: Number of records to fetch in a page
          example: 100
          default: 100
        offset:
          minimum: 1
          type: integer
          description: Starting offset of data to fetch and returned
          example: 5
          default: 1
        cursor:
          type: string
          description: "It's an opaque string field that indicates the next record in the requested collection. If no records remain, the API returns a response with a count of zero. The default value is an empty string, and the initial value must be an empty string. The cursor value is populated by the API in the response page block. If the user wants more records, the cursor in the subsequent request must be updated with the value from the previous response."
          example: "{apMac_terms=AA:BB:CC:DD:EE:FF, frequency_terms=5.0}"
        count:
          type: integer
          description: Total number of records related to the resource after applying applicable filtering. Field is ignored for request and updated by API in the response
          example: 100
        sortBy:
          type: array
          example:
          - name: overallScore
            order: asc
          - name: rssi
            function: min
            order: asc
          - name: usage
            function: sum
            order: desc
          items:
            $ref: '#/components/schemas/NetworkApplicationSortByObj'
    NetworkApplicationCountIntegerResponse:
      title: Count Integer Response
      type: object
      properties:
        response:
          $ref: '#/components/schemas/NetworkApplicationCountIntegerResponse_response'
        version:
          type: string
          description: The version of the response
          example: "1.0"
      description: Reports
    NetworkApplicationPaginationTrend:
      type: object
      properties:
        limit:
          minimum: 1
          type: integer
          description: Number of records to fetch in a page
          example: 100
          default: 100
        cursor:
          type: string
          description: "It's an opaque string field that indicates the next record in the requested collection. If no records remain, the API returns a response with a count of zero. The default value is an empty string, and the initial value must be an empty string. The cursor value is populated by the API in the response page block. If the user wants more records, the cursor in the subsequent request must be updated with the value from the previous response."
          example: "{~modificationtime_histo=1.7218008E12, applicationName_terms=914c/g}"
          default: ""
        count:
          type: integer
          description: Number of records returned after applying applicable filtering. Field is ignored for request and updated by API in the response
          example: 100
        timeSortOrder:
          type: string
          description: Sort order. 'asc' for ascending and 'desc' for descending
          enum:
          - asc
          - desc
    NetworkApplicationSortByObj:
      type: object
      properties:
        name:
          type: string
          description: Attributes related to network application resource that can be used to sort the response.
          enum:
          - applicationName
          - siteId
          - exporterIpAddress
          - exporterNetworkDeviceId
          - businessRelevance
          - usage
          - throughput
          - packetLossPercent
          - networkLatency
          - applicationServerLatency
          - clientNetworkLatency
          - serverNetworkLatency
          - trafficClass
          - jitter
          - ssid
        function:
          type: string
          description: Type of aggregate function to apply on the field when querying data
          enum:
          - min
          - max
          - avg
          - count
          - latest
          - sum
          - distinctCount
        order:
          type: string
          description: Sort order. 'asc' for ascending and 'desc' for descending
          enum:
          - asc
          - desc
      description: |
        This is a unified sortBy model for attributes and aggregate attributes request. If function is specified then API will sort the colllection on  aggregated attribute. If function is not specified API will sort the collection on attribute.
    NetworkApplicationAnalyticsAttributeResponse:
      type: object
      properties:
        name:
          type: string
          description: Name of the attribute requested for analytics API.
        value:
          type: object
          description: This is the value of the attribute requested for analytics API.
    NetworkApplicationAnalyticsAttributesResponse:
      type: array
      items:
        $ref: '#/components/schemas/NetworkApplicationAnalyticsAttributeResponse'
    NetworkApplicationTrendResponse:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/NetworkApplicationsTrendGroupsResponse'
        page:
          $ref: '#/components/schemas/NetworkApplicationPaginationTrend'
        version:
          type: string
          description: The version of the response
          example: "1.0"
    NetworkApplicationsTrendGroupsResponse:
      type: object
      properties:
        timestamp:
          type: integer
          description: For trend API timestamp is the default groupBy attribute.
          format: int64
        attributes:
          $ref: '#/components/schemas/NetworkApplicationAnalyticsAttributesResponse'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkApplicationAggregateAttributesResponse'
        groups:
          type: array
          description: |
            Additional groups and their respective attributes are included under each group. The attributes belonging to each group are appended to the attributes list.
          items:
            $ref: '#/components/schemas/NetworkApplicationsGroupResponse'
      description: |
        The aggregate trend response includes timestamp, attributes, aggregateAttributes, and group attributes. The attributes aggregateAttributes and groups are mutually exclusive. If a user requests trends without groupBy attributes, the response includes timestamp, attributes, and aggregateAttributes. However, if a user requests trends with groupBy attributes, the response includes timestamp, and the groups array contains attributes and aggregatedAttributes for each array element.
    NetworkApplicationsGroupResponse:
      type: object
      properties:
        id:
          type: string
          description: This is the group key. Unique value to identify the group. It is concatenation of groupBy attributes
        attributes:
          $ref: '#/components/schemas/NetworkApplicationAnalyticsAttributeResponse'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkApplicationAggregateAttributesResponse'
    NetworkApplicationAggregateAttributeResponse:
      type: object
      properties:
        name:
          type: string
          description: Name of the requested aggregate attribute
        function:
          type: string
          description: Aggregate function requested for the attribute
        value:
          type: object
          description: This is the aggregate value of the attribute after applying the function on the dataset
    NetworkApplicationAggregateAttributesResponse:
      type: array
      items:
        $ref: '#/components/schemas/NetworkApplicationAggregateAttributeResponse'
    appTrendInterval:
      type: string
      description: "The time window to aggregate the metrics. \nInterval can be 5 minutes or 10 minutes or 1 hour or 3 hours\n"
      example: 5MIN
      enum:
      - 5MIN
      - 10MIN
      - 1HR
      - 3HR
    ApplicationFunction:
      type: string
      description: Type of aggregate function to apply on the field when querying   data
      example: sum
      enum:
      - sum
      - min
      - max
      - avg
      - count
      - latest
      - distinctCount
    NetworkApplicationLogicalOperator:
      type: string
      description: |
        Operator to use when attempting to apply a logical conjunction of more than 1 filter

        Logical operations include: 'and', 'or'.
      enum:
      - and
      - or
    NetworkApplicationOperator:
      type: string
      description: Type of filter operator to use for querying data | in and out operator takes multiple values and applies the filters
      enum:
      - in
      - neq
      - lt
      - gt
      - lte
      - gte
      - eq
      - like
    NetworkApplicationsResponseModel:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/NetworkApplication'
        page:
          $ref: '#/components/schemas/NetworkApplicationPaginationWithAggregate'
        version:
          type: string
          description: The version of the response
          example: "1.0"
      description: Collection of application experience Response model
    NetworkApplication:
      type: object
      description: Application Experience details
      allOf:
      - $ref: '#/components/schemas/NetworkApplicationBasic'
      - $ref: '#/components/schemas/NetworkApplicationCommonDetail'
    NetworkApplicationBasic:
      type: object
      properties:
        id:
          type: string
          description: "Unique ID of the application, that is application name"
          example: webex-media
        applicationName:
          $ref: '#/components/schemas/ApplicationName'
        ssid:
          $ref: '#/components/schemas/ssid'
        siteId:
          type: string
          description: Unique ID of the exporter site.
          example: 22eacca4-5282-4e99-9edf-40fb860278a8
        exporterIpAddress:
          type: string
          description: IP Address of the exported device.
          example: 10.225.125.82
        exporterNetworkDeviceId:
          type: string
          description: Unique ID of the exported device.
          example: 865ab421-2c62-4ab7-bbb5-5091fd77f7be
        businessRelevance:
          type: string
          description: "The application can be chosen to be categorized as business-relevant, irrelevant, or default (neutral). By doing so, the assurance application prioritizes the monitoring and analysis of business-relevant data, ensuring critical insights are captured. Applications marked as irrelevant or default are selectively excluded from certain data sets, streamlining focus on what's most important for business outcomes."
          example: BUSINESS_RELEVANT
          enum:
          - BUSINESS_RELEVANT
          - BUSINESS_IRRELEVANT
          - DEFAULT
      description: Basic information about the network application
    NetworkApplicationCommonDetail:
      type: object
      properties:
        usage:
          type: integer
          description: The number of bytes transferred for the application.
          format: int64
          example: 3160585505
        throughput:
          type: number
          description: "The rate of application traffic per second between the client and server, measured in bits per second."
          example: 8035448.32
        healthScore:
          type: integer
          description: "The health score of the application, has value in the range of 1 to 10."
          example: 10
        packetLossPercent:
          type: number
          description: "The percentage of packet loss. This metric applies only to TCP-based and RTP-based applications. In TCP it is based on client retransmission, in RTP it is based on sequence number."
          example: 3.5
        networkLatency:
          type: number
          description: "The average network latency time, in milliseconds. This metric applies only to TCP-based applications."
          example: 9.5
        applicationServerLatency:
          type: number
          description: "The time it takes for the application server to respond to the first application request from the client, in milliseconds. This metric applies only to TCP-based applications."
          example: 18.6
        clientNetworkLatency:
          type: number
          description: "The client RTT (round trip time), in milliseconds. This metric applies only to TCP-based applications."
          example: 9.4
        serverNetworkLatency:
          type: number
          description: "The server RTT (round trip time), in milliseconds. This metric applies only to TCP-based applications."
          example: 3.5
        trafficClass:
          type: string
          description: Traffic Class of the application
          example: multimedia-conferencing
        jitter:
          type: number
          description: "The variance in time delay between data packets over your network, in milliseconds. This metric applies only to RTP-based applications."
          example: 9.5
        ssid:
          type: string
          description: "In the context of a network application, SSID refers to the name of the wireless network to which the client connects."
          example: main-ssid
      description: Network application experience information
    ssid:
      type: string
      description: "In the context of a network application, SSID refers to the name of the wireless network to which the client connects."
      example: alpha
    ApplicationName:
      type: string
      description: "Name of the application for which the experience data is intended.\n    "
    AppxErrorResponse:
      title: Error Response
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/AppxErrorObject'
        version:
          type: string
          description: The version of the response
          example: "1.0"
      description: Contains information explaining the error that occured   processing this request.
      externalDocs:
        description: Error Codes - Cisco DevNet
        url: https://developer.cisco.com/docs/dna-center/#!api-quick-start/error-codes
    AppxErrorObject:
      type: object
      properties:
        errorCode:
          type: integer
          description: Application specific error code returned by the server
        message:
          type: string
          description: Brief message about the error condition
        detail:
          type: string
          description: "A more detailed explanation of the error condition the parameter and its value, that caused the condition and why it   caused it."
    NetworkApplicationCountIntegerResponse_response:
      type: object
      properties:
        count:
          type: integer
          description: The total number of records related to the resource
          format: int64
          example: 1000
  responses:
    NetworkApplicationsResponseModel:
      description: Collection of application experience Response model on success
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/NetworkApplicationsResponseModel'
          examples:
            networkApplicationsResponse:
              $ref: '#/components/examples/networkApplicationsResponse'
    NetworkApplicationTrendResponse:
      description: Collection of trend responses with Network Applications Response model on success with aggregate attributes and groupBy
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/NetworkApplicationTrendResponse'
          examples:
            networkApplicationTrendResponseWithoutGroupBy:
              $ref: '#/components/examples/networkApplicationTrendResponseWithoutGroupBy'
            networkApplicationTrendResponseWithGroupBy:
              $ref: '#/components/examples/networkApplicationTrendResponseWithGroupBy'
    NetworkApplicationCountIntegerResponse:
      description: Reponse object containing total count of the records after applying requested filters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkApplicationCountIntegerResponse'
    NetworkApplication400:
      description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppxErrorResponse'
    NetworkApplication500:
      description: The server could not fulfill the request due to internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppxErrorResponse'
    "1XX":
      description: Informational Responses - The server received the request and sent an informational response.
    "2XX":
      description: "Successful Responses - The server received the client request, understood it, and accepted it."
    "3XX":
      description: Redirection Messages - The client must take additional action to complete the request.
    "4XX":
      description: Client Error Responses - The client request caused the error.
    "5XX":
      description: Server Error Responses - The server failed to fulfill the request.
    defaultError:
      description: Unexpected Error
  parameters:
    networkApplicationAttribute:
      name: attribute
      in: query
      description: |-
        List of attributes related to resource that can be requested to only be part of the response along with the required attributes. Supported attributes are applicationName, siteId, exporterIpAddress, exporterNetworkDeviceId, healthScore, businessRelevance, usage, throughput, packetLossPercent, networkLatency, applicationServerLatency, clientNetworkLatency, serverNetworkLatency, trafficClass, jitter, ssid Examples:
        `attribute=healthScore` (single attribute requested)
        `attribute=healthScore&attribute=ssid&attribute=jitter` (multiple attribute requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    siteId:
      name: siteId
      in: query
      description: |-
        The site UUID without the top level hierarchy. (Ex."buildingUuid") Examples:
        `siteId=buildingUuid` (single siteId requested)
        `siteId=buildingUuid1&siteId=buildingUuid2` (multiple siteId requested)
      required: true
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    ssid:
      name: ssid
      in: query
      description: |
        In the context of a network application, SSID refers to the name of the wireless network to which the client connects.

        Examples:

        `ssid=Alpha` (single ssid requested)

        `ssid=Alpha&ssid=Guest` (multiple ssid requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    applicationName:
      name: applicationName
      in: query
      description: |
        Name of the application for which the experience data is intended.

        Examples:

        `applicationName=webex` (single applicationName requested)

        `applicationName=webex&applicationName=teams` (multiple applicationName requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    businessRelevance:
      name: businessRelevance
      in: query
      description: |
        The application can be chosen to be categorized as business-relevant, irrelevant, or default (neutral). By doing so, the assurance application prioritizes the monitoring and analysis of business-relevant data, ensuring critical insights are captured. Applications marked as irrelevant or default are selectively excluded from certain data sets, streamlining focus on what's most important for business outcomes.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - BUSINESS_RELEVANT
        - BUSINESS_IRRELEVANT
        - DEFAULT
      example: BUSINESS_RELEVANT
    startTime:
      name: startTime
      in: query
      description: |
        Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
      schema:
        type: integer
        format: int64
      example: 1705348800000
    endTime:
      name: endTime
      in: query
      description: |
        End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
      required: false
      schema:
        type: integer
        format: int64
      example: 1705435200000
    limit_100:
      name: limit
      in: query
      description: Maximum number of records to return
      schema:
        maximum: 100
        minimum: 1
        type: integer
        default: 100
    offset:
      name: offset
      in: query
      description: Specifies the starting point within all records returned by the API. It's one based offset. The starting value is 1.
      schema:
        minimum: 1
        type: integer
        default: 1
    sortBy:
      name: sortBy
      in: query
      description: A field within the response to sort by.
      schema:
        type: string
    order:
      name: order
      in: query
      description: The sort order of the field ascending or descending.
      schema:
        type: string
        default: asc
        enum:
        - asc
        - desc
    callerId:
      name: X-CALLER-ID
      in: header
      description: |
        Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
      required: false
      schema:
        type: string
        default: unknown
      example: ui:client360
  examples:
    networkApplicationsResponse:
      summary: All Network Applications Response
      value:
        response:
        - id: webex-meeting
          applicationName: webex-meeting
          businessRelevance: BUSINESS_RELEVANT
          siteId: 0b9fc47b-577d-43fa-96ab-afceca55766c
          exporterIpAddress: 10.225.125.82
          exporterNetworkDeviceId: 5e7a7fcd-39a1-409c-9e7d-d054a8044bf0
          healthScore: 10
          usage: 29225903192
          throughput: 6.495
          packetLossPercent: 0.0
          networkLatency: 9.969
          applicationServerLatency: 3.435
          clientNetworkLatency: 15.902
          serverNetworkLatency: 4.036
          trafficClass: multimedia-conferencing
          jitter: 7482.857
          ssid: abhi-site3-vlan33
        page:
          limit: 100
          offset: 5
          count: 100
          sortBy:
          - name: applicationName
            order: asc
        version: "1.0"
    networkApplicationTrendRequestWithoutGroupBy:
      summary: Network Application Trend Request without GroupBy
      value:
        startTime: 1709110800000
        endTime: 1709197200000
        siteIds:
        - 364ff1bd-5125-4fa1-9ae3-55e7fb6ca592
        trendInterval: 5MIN
        attributes:
        - applicationName
        - trafficClass
        filters:
        - key: businessRelevance
          operator: eq
          value: business-relevant
        - key: ssid
          operator: in
          value:
          - alpha
          - hero
        - logicalOperator: or
          filters:
          - key: trafficClass
            operator: eq
            value: multimedia-conferencing
          - key: exporterIpAddress
            operator: in
            value:
            - 10.225.0.0
        aggregateAttributes:
        - name: throughput
          function: avg
        - name: usage
          function: sum
        page:
          limit: 100
          cursor: ""
          timeSortOrder: desc
    networkApplicationTrendRequestWithGroupBy:
      summary: Network Application Trend Request with GroupBy
      value:
        startTime: 1709110800000
        endTime: 1709197200000
        siteIds:
        - 364ff1bd-5125-4fa1-9ae3-55e7fb6ca592
        trendInterval: 5MIN
        groupBy:
        - applicationName
        attributes:
        - applicationName
        - trafficClass
        filters:
        - key: jitter
          operator: lt
          value: 8000
        - key: ssid
          operator: in
          value:
          - assur-br1
          - assur-br2
        - logicalOperator: or
          filters:
          - key: trafficClass
            operator: eq
            value: multimedia-conferencing
          - key: exporterIpAddress
            operator: in
            value:
            - 10.225.0.0
        aggregateAttributes:
        - name: throughput
          function: avg
        - name: usage
          function: sum
        page:
          limit: 100
          cursor: ""
          timeSortOrder: desc
    networkApplicationTrendResponseWithoutGroupBy:
      summary: Network Application Trend Response without GroupBy
      value:
        response:
        - timestamp: 1707759900000
          attributes:
          - name: applicationName
            value: webex-media
          - name: trafficClass
            value: multimedia-conferencing
          aggregateAttributes:
          - name: throughput
            function: max
            value: 3686712
          - name: usage
            function: max
            value: 63199
        - timestamp: 1707760200000
          attributes:
          - name: applicationName
            value: webex-media
          - name: trafficClass
            value: multimedia-conferencing
          aggregateAttributes:
          - name: throughput
            function: max
            value: 3676712
          - name: usage
            function: max
            value: 62199
        page:
          limit: 100
          cursor: ""
          count: 100
          timeSortOrder: desc
        version: "1.0"
    networkApplicationTrendResponseWithGroupBy:
      summary: Network Application Trend Response with GroupBy
      value:
        response:
        - timestamp: 1707759900000
          groups:
          - id: applicationName=webex-media
            attributes:
            - name: applicationName
              value: webex-media
            - name: trafficClass
              value: multimedia-conferencing
            aggregateAttributes:
            - name: throughput
              function: max
              value: 3676712
            - name: usage
              function: max
              value: 62199
          - id: applicationName=webex-video
            attributes:
            - name: applicationName
              value: webex-video
            - name: trafficClass
              value: multimedia-conferencing
            aggregateAttributes:
            - name: throughput
              function: max
              value: 3676712
            - name: usage
              function: max
              value: 62199
        - timestamp: 1707760200000
          groups:
          - id: applicationName=exporters-counters
            attributes:
            - name: applicationName
              value: bulk-data
            - name: trafficClass
              value: transactional-data
            aggregateAttributes:
            - name: throughput
              function: max
              value: 3676712
            - name: usage
              function: max
              value: 62199
          - id: applicationName=activesync
            attributes:
            - name: applicationName
              value: activesync
            - name: trafficClass
              value: multimedia-conferencing
            aggregateAttributes:
            - name: throughput
              function: max
              value: 3676712
            - name: usage
              function: max
              value: 62199
        page:
          limit: 100
          cursor: ""
          count: 100
          timeSortOrder: desc
        version: "1.0"
  requestBodies:
    NetworkApplicationTrendQueryRequest:
      description: Payload to query trend data for a network application
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/NetworkApplicationTrendQueryRequest'
          examples:
            networkApplicationTrendRequestWithoutGroupBy:
              $ref: '#/components/examples/networkApplicationTrendRequestWithoutGroupBy'
            clientTrendRequestWithGroupBy:
              $ref: '#/components/examples/networkApplicationTrendRequestWithGroupBy'
      required: true

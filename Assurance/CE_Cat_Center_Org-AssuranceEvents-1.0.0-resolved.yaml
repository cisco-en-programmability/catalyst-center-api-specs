---
openapi: 3.0.0
info:
  title: OpenAPI Spec for Assurance Events
  description: APIs related to assurance events.
  termsOfService: https://www.cisco.com/c/en/us/about/legal/cloud-and-software/end_user_license_agreement.html
  contact:
    name: Cisco TAC World Wide
    url: https://www.cisco.com/c/en/us/support/web/tsd-cisco-worldwide-contacts.html
    email: tac@cisco.com
  license:
    name: Cisco Catalyst Center License
    url: https://www.cisco.com/c/en/us/products/collateral/software/dna-software-ebook-cte.html
  version: 1.0.0
externalDocs:
  description: Catalyst Center Developer API resources
  url: https://developer.cisco.com/dnacenter/
servers:
- url: https://developer.cisco.com
tags:
- name: assuranceEvents
  description: APIs related to assurance events
paths:
  /dna/data/api/v1/assuranceEvents:
    get:
      tags:
      - assuranceEvents
      summary: Query assurance events
      description: |
        API to fetch the list of assurance events using basic filters. Use the `/assuranceEvents/query` API if you need complex filtering.

        Note that querying of data spanning more than 7 days is not allowed, so difference between `startTime` and `endTime` must not be more than that.
      operationId: readEvents
      parameters:
      - name: deviceFamily
        in: query
        description: |
          Device family. Please note that multiple families across network device type and client type is not allowed. For example, choosing `Routers` along with `Wireless Client` or `Unified AP` is not supported.
          Examples:

          `deviceFamily=Switches and Hubs` (single deviceFamily requested)

          `deviceFamily=Switches and Hubs&deviceFamily=Routers` (multiple deviceFamily requested)
        required: true
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - Switches and Hubs
            - Routers
            - Wireless Controller
            - Third Party Device
            - Unified AP
            - Wired Client
            - Wireless Client
        example:
        - Switches and Hubs
      - name: startTime
        in: query
        description: |
          Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.

          If `startTime` is not provided, API will default to current time minus 24 hours.
        schema:
          type: integer
          format: int64
        example: 1705348800000
      - name: endTime
        in: query
        description: |
          End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.

          If `endTime` is not provided, API will default to current time.
        schema:
          type: integer
          format: int64
        example: 1705435200000
      - name: messageType
        in: query
        description: |
          Message type for the event.

          Examples:

          `messageType=Syslog` (single messageType requested)

          `messageType=Trap&messageType=Syslog` (multiple messageType requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Syslog
            - Trap
            - Device
            - Device Controller
            - ISE
            - TDL
        example:
        - Syslog
      - name: severity
        in: query
        description: |
          Severity of the event between 0 and 6. This is applicable only for events related to network devices (other than AP) and `Wired Client` events.

          | Value | Severity    |
          | ----- | ----------- |
          | 0     | Emergency   |
          | 1     | Alert       |
          | 2     | Critical    |
          | 3     | Error       |
          | 4     | Warning     |
          | 5     | Notice      |
          | 6     | Info        |

          Examples:

          `severity=0` (single severity requested)

          `severity=0&severity=1` (multiple severity requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            maximum: 6
            minimum: 0
            type: integer
            format: int32
        example:
        - 2
      - name: siteId
        in: query
        description: |
          The UUID of the site. (Ex. `flooruuid`)

          Examples:

          `?siteId=id1` (single id requested)

          `?siteId=id1&siteId=id2&siteId=id3` (multiple ids requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: siteHierarchyId
        in: query
        description: |
          The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID. (Ex. `globalUuid/areaUuid/buildingUuid/floorUuid`)

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid `(single siteHierarchyId requested)

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid&siteHierarchyId=globalUuid/areaUuid2/buildingUuid2/floorUuid2` (multiple siteHierarchyIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: networkDeviceName
        in: query
        description: |
          Network device name. This parameter is applicable for network device related families.
          This field supports wildcard (`*`) character-based search. Ex: `*Branch*` or `Branch*` or `*Branch`
          Examples:

          `networkDeviceName=Branch-3-Gateway` (single networkDeviceName requested)

          `networkDeviceName=Branch-3-Gateway&networkDeviceName=Branch-3-Switch` (multiple networkDeviceName requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        example:
        - Branch-3-Switch
      - name: networkDeviceId
        in: query
        description: |
          The list of Network Device Uuids. (Ex. `6bef213c-19ca-4170-8375-b694e251101c`)

          Examples:

          `networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c` (single networkDeviceId requested)

          `networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c&networkDeviceId=32219612-819e-4b5e-a96b-cf22aca13dd9&networkDeviceId=2541e9a7-b80d-4955-8aa2-79b233318ba0` (multiple networkDeviceIds with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: apMac
        in: query
        description: |
          MAC address of the access point. This parameter is applicable for `Unified AP` and `Wireless Client` events.

          This field supports wildcard (`*`) character-based search. Ex: `*50:0F*` or `50:0F*` or `*50:0F`

          Examples:

          `apMac=50:0F:80:0F:F7:E0` (single apMac requested)

          `apMac=50:0F:80:0F:F7:E0&apMac=18:80:90:AB:7E:A0` (multiple apMac requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
        example:
        - F3:9B:C7:8A:0B:D0
      - name: clientMac
        in: query
        description: |
          MAC address of the client. This parameter is applicable for `Wired Client` and `Wireless Client` events.

          This field supports wildcard (`*`) character-based search. Ex: `*66:2B*` or `66:2B*` or `*66:2B`

          Examples:

          `clientMac=66:2B:B8:D2:01:56` (single clientMac requested)

          `clientMac=66:2B:B8:D2:01:56&clientMac=DC:A6:32:F5:5A:89` (multiple clientMac requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
        example:
        - 94:D4:69:F2:56:60
      - name: attribute
        in: query
        description: |
          The list of attributes that needs to be included in the response. If this parameter is not provided, then basic attributes (`id`, `name`, `timestamp`, `details`, `messageType`, `siteHierarchyId`, `siteHierarchy`, `deviceFamily`, `networkDeviceId`, `networkDeviceName`, `managementIpAddress`) would be part of the response.
           Examples:

          `attribute=name` (single attribute requested)

          `attribute=name&attribute=networkDeviceName` (multiple attribute requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - affectedClients
            - apMac
            - apRadioOperationState
            - apRole
            - apSwitchId
            - apSwitchName
            - assocRssi
            - assocSnr
            - auditSessionId
            - authServerIp
            - bssid
            - candidateAPs
            - childEvents
            - clientMac
            - connectedInterfaceName
            - currentRadioPowerLevel
            - details
            - deviceFamily
            - dhcpServerIp
            - duid
            - eventStatus
            - facility
            - failureCategory
            - failureIpAddress
            - frequency
            - id
            - identifier
            - invalidIeAPs
            - ipv4
            - ipv6
            - isPrivateMac
            - lastApDisconnectReason
            - lastApResetType
            - managementIpAddress
            - messageType
            - missingResponseAPs
            - mnemonic
            - name
            - networkDeviceId
            - networkDeviceName
            - newRadioChannelList
            - newRadioChannelWidth
            - oldRadioChannelList
            - oldRadioChannelWidth
            - previousRadioPowerLevel
            - radioChannelSlot
            - radioChannelUtilization
            - radioInterference
            - radioNoise
            - reasonDescription
            - replacedDeviceSerialNumber
            - replacingDeviceSerialNumber
            - resultStatus
            - roamType
            - severity
            - siteHierarchy
            - siteHierarchyId
            - ssid
            - subReasonDescription
            - switchNumber
            - timestamp
            - udnId
            - udnName
            - username
            - vlanId
            - wirelessClientEventEndTime
            - wirelessClientEventStartTime
            - wlcId
            - wlcName
      - name: view
        in: query
        description: |
          The list of events views. Please refer to `EventViews` for the supported list
           Examples:

          `view=network` (single view requested)

          `view=network&view=ap` (multiple view requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - basic
            - network
            - ap
            - wiredClient
            - wirelessClient
      - name: offset
        in: query
        description: Specifies the starting point within all records returned by the API. It's one based offset. The starting value is 1.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: limit
        in: query
        description: Maximum number of records to return
        schema:
          maximum: 20
          minimum: 1
          type: integer
          default: 10
      - name: sortBy
        in: query
        description: A field within the response to sort by.
        schema:
          type: string
          default: timestamp
      - name: order
        in: query
        description: The sort order of the field ascending or descending.
        schema:
          type: string
          default: desc
          enum:
          - asc
          - desc
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      responses:
        "200":
          description: List of events for the given filter criteria
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventListResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /dna/data/api/v1/assuranceEvents/count:
    get:
      tags:
      - assuranceEvents
      summary: Count the number of events
      description: |
        API to fetch the count of assurance events that match the filter criteria. Use the `/assuranceEvents/query/count` API if you need complex filtering.

        Note that querying of data spanning more than 7 days is not allowed, so difference between `startTime` and `endTime` must not be more than that.
      operationId: countEvents
      parameters:
      - name: deviceFamily
        in: query
        description: |
          Device family. Please note that multiple families across network device type and client type is not allowed. For example, choosing `Routers` along with `Wireless Client` or `Unified AP` is not supported.
          Examples:

          `deviceFamily=Switches and Hubs` (single deviceFamily requested)

          `deviceFamily=Switches and Hubs&deviceFamily=Routers` (multiple deviceFamily requested)
        required: true
        style: form
        explode: true
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - Switches and Hubs
            - Routers
            - Wireless Controller
            - Third Party Device
            - Unified AP
            - Wired Client
            - Wireless Client
        example:
        - Switches and Hubs
      - name: startTime
        in: query
        description: |
          Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.

          If `startTime` is not provided, API will default to current time minus 24 hours.
        schema:
          type: integer
          format: int64
        example: 1705348800000
      - name: endTime
        in: query
        description: |
          End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.

          If `endTime` is not provided, API will default to current time.
        schema:
          type: integer
          format: int64
        example: 1705435200000
      - name: messageType
        in: query
        description: |
          Message type for the event.

          Examples:

          `messageType=Syslog` (single messageType requested)

          `messageType=Trap&messageType=Syslog` (multiple messageType requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Syslog
            - Trap
            - Device
            - Device Controller
            - ISE
            - TDL
        example:
        - Syslog
      - name: severity
        in: query
        description: |
          Severity of the event between 0 and 6. This is applicable only for events related to network devices (other than AP) and `Wired Client` events.

          | Value | Severity    |
          | ----- | ----------- |
          | 0     | Emergency   |
          | 1     | Alert       |
          | 2     | Critical    |
          | 3     | Error       |
          | 4     | Warning     |
          | 5     | Notice      |
          | 6     | Info        |

          Examples:

          `severity=0` (single severity requested)

          `severity=0&severity=1` (multiple severity requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            maximum: 6
            minimum: 0
            type: integer
            format: int32
        example:
        - 2
      - name: siteId
        in: query
        description: |
          The UUID of the site. (Ex. `flooruuid`)

          Examples:

          `?siteId=id1` (single id requested)

          `?siteId=id1&siteId=id2&siteId=id3` (multiple ids requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: siteHierarchyId
        in: query
        description: |
          The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID. (Ex. `globalUuid/areaUuid/buildingUuid/floorUuid`)

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid `(single siteHierarchyId requested)

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid&siteHierarchyId=globalUuid/areaUuid2/buildingUuid2/floorUuid2` (multiple siteHierarchyIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: networkDeviceName
        in: query
        description: |
          Network device name. This parameter is applicable for network device related families.
          This field supports wildcard (`*`) character-based search. Ex: `*Branch*` or `Branch*` or `*Branch`
          Examples:

          `networkDeviceName=Branch-3-Gateway` (single networkDeviceName requested)

          `networkDeviceName=Branch-3-Gateway&networkDeviceName=Branch-3-Switch` (multiple networkDeviceName requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        example:
        - Branch-3-Switch
      - name: networkDeviceId
        in: query
        description: |
          The list of Network Device Uuids. (Ex. `6bef213c-19ca-4170-8375-b694e251101c`)

          Examples:

          `networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c` (single networkDeviceId requested)

          `networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c&networkDeviceId=32219612-819e-4b5e-a96b-cf22aca13dd9&networkDeviceId=2541e9a7-b80d-4955-8aa2-79b233318ba0` (multiple networkDeviceIds with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: apMac
        in: query
        description: |
          MAC address of the access point. This parameter is applicable for `Unified AP` and `Wireless Client` events.

          This field supports wildcard (`*`) character-based search. Ex: `*50:0F*` or `50:0F*` or `*50:0F`

          Examples:

          `apMac=50:0F:80:0F:F7:E0` (single apMac requested)

          `apMac=50:0F:80:0F:F7:E0&apMac=18:80:90:AB:7E:A0` (multiple apMac requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
        example:
        - F3:9B:C7:8A:0B:D0
      - name: clientMac
        in: query
        description: |
          MAC address of the client. This parameter is applicable for `Wired Client` and `Wireless Client` events.

          This field supports wildcard (`*`) character-based search. Ex: `*66:2B*` or `66:2B*` or `*66:2B`

          Examples:

          `clientMac=66:2B:B8:D2:01:56` (single clientMac requested)

          `clientMac=66:2B:B8:D2:01:56&clientMac=DC:A6:32:F5:5A:89` (multiple clientMac requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
            type: string
        example:
        - 94:D4:69:F2:56:60
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      responses:
        "200":
          description: Count of events for the given filter criteria
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CountIntegerResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /dna/data/api/v1/assuranceEvents/{id}:
    get:
      tags:
      - assuranceEvents
      summary: Get details of a single assurance event
      description: API to fetch the details of an assurance event using event `id`.
      operationId: readEventDetails
      parameters:
      - name: id
        in: path
        description: Unique identifier for the event
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: attribute
        in: query
        description: |
          The list of attributes that needs to be included in the response. If this parameter is not provided, then basic attributes (`id`, `name`, `timestamp`, `details`, `messageType`, `siteHierarchyId`, `siteHierarchy`, `deviceFamily`, `networkDeviceId`, `networkDeviceName`, `managementIpAddress`) would be part of the response.
           Examples:

          `attribute=name` (single attribute requested)

          `attribute=name&attribute=networkDeviceName` (multiple attribute requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - affectedClients
            - apMac
            - apRadioOperationState
            - apRole
            - apSwitchId
            - apSwitchName
            - assocRssi
            - assocSnr
            - auditSessionId
            - authServerIp
            - bssid
            - candidateAPs
            - childEvents
            - clientMac
            - connectedInterfaceName
            - currentRadioPowerLevel
            - details
            - deviceFamily
            - dhcpServerIp
            - duid
            - eventStatus
            - facility
            - failureCategory
            - failureIpAddress
            - frequency
            - id
            - identifier
            - invalidIeAPs
            - ipv4
            - ipv6
            - isPrivateMac
            - lastApDisconnectReason
            - lastApResetType
            - managementIpAddress
            - messageType
            - missingResponseAPs
            - mnemonic
            - name
            - networkDeviceId
            - networkDeviceName
            - newRadioChannelList
            - newRadioChannelWidth
            - oldRadioChannelList
            - oldRadioChannelWidth
            - previousRadioPowerLevel
            - radioChannelSlot
            - radioChannelUtilization
            - radioInterference
            - radioNoise
            - reasonDescription
            - replacedDeviceSerialNumber
            - replacingDeviceSerialNumber
            - resultStatus
            - roamType
            - severity
            - siteHierarchy
            - siteHierarchyId
            - ssid
            - subReasonDescription
            - switchNumber
            - timestamp
            - udnId
            - udnName
            - username
            - vlanId
            - wirelessClientEventEndTime
            - wirelessClientEventStartTime
            - wlcId
            - wlcName
      - name: view
        in: query
        description: |
          The list of events views. Please refer to `EventViews` for the supported list
           Examples:

          `view=network` (single view requested)

          `view=network&view=ap` (multiple view requested)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - basic
            - network
            - ap
            - wiredClient
            - wirelessClient
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      responses:
        "200":
          description: Event details for the given identifier
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventDetailResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: The client made a request for a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /dna/data/api/v1/assuranceEvents/{id}/childEvents:
    get:
      tags:
      - assuranceEvents
      summary: Get list of child events for the given wireless client event
      description: Wireless client event could have child events and this API can be used to fetch the same using parent event `id` as the input.
      operationId: readEventChildren
      parameters:
      - name: id
        in: path
        description: Unique identifier for the event
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      responses:
        "200":
          description: List of child events for the given identifier
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventChildEventsResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: The client made a request for a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /dna/data/api/v1/assuranceEvents/query:
    post:
      tags:
      - assuranceEvents
      summary: Query assurance events with filters
      description: "Returns the list of events discovered by Catalyst Center, determined by the complex filters.\n\n**The input payload contains the following fields:**\n\n| Field Name              | Description                    |\n| ----------------------  | ------------------------------ |\n| `startTime`             | Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest. |\n| `endTime`               | End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest. |\n| `views`                 | A collection of attributes classified as \"view\" associated with the resource, which can be requested to be included in the response alongside the required attributes. Each view comprises a predetermined set of attributes. Refer to `EventViews` for the supported views |\n| `attributes`            | A list of attributes associated with the resource, which can be requested to be included in the response alongside the required attributes. Refer to `eventAttributes` model for the supported attributes |\n| `deviceFamily`          | The value of `deviceFamily`. Please refer to `deviceFamily` model for the supported list. |\n| `filters`               | Used to define one or more filter conditions. Only the data that satisfy these conditions will be taken into consideration during the aggregation calculation. The supported list of filters in defined in `EventsFilterObj`. |\n| `page`                  | The `page` includes `limit`, `offset` and `sortBy` fields. `limit` indicates the number of records to retrieve per page, `offset` signifies the starting position of the data, and `sortBy` specifies the name and order. If `sortBy` parameter is not provided, then the results are sorted by `timestamp` in descending order. |\n\n**How the filtering behavior works**\n\nThe `filters` field in each post body can be used in various ways:\n\nEach filter in the list of filters will be applied simultaneously.\nFor instance, the following example would request filtering to retrieve events where `networkDeviceName` contains `9300-SJ` and `managementIpAddress` contains `10.1`.\n```\n{\n  \"deviceFamily\": [\n    \"Switches and Hubs\",\n    \"Routers\"\n  ],\n  \"startTime\": 1705348800000,\n  \"endTime\": 1705435200000,\n  \"filters\": [\n    {\n      \"key\": \"networkDeviceName\",\n      \"operator\": \"like\",\n      \"value\": \"9300-SJ\"\n    },\n    {\n      \"key\": \"managementIpAddress\",\n      \"operator\": \"like\",\n      \"value\": \"10.1\"\n    }\n  ]\n}\n```\n\nEach filter object can utilize its logical operator differently to offer nested filtering functionality.\n\nIn the example below, you can observe a logical `OR` filter being applied using the nested filtering functionality:\n\nThe main filter object doesn't have its `key`, `value`, or `operator` fields populated. Only the `logicalOperator` field is populated to indicate that the filters within the nested filters list are to be logically combined.\n\n```      \n{\n  \"deviceFamily\": [\n    \"Switches and Hubs\",\n    \"Routers\"\n  ],\n  \"startTime\": 1705348800000,\n  \"endTime\": 1705435200000,\n  \"filters\": [\n    {\n      \"logicalOperator\": \"or\",\n      \"filters\": [\n        {\n          \"key\": \"networkDeviceName\",\n          \"operator\": \"like\",\n          \"value\": \"9300-SJ\"\n        },\n        {\n          \"key\": \"managementIpAddress\",\n          \"operator\": \"like\",\n          \"value\": \"10.1\"\n        }\n      ]\n    }\n  ],\n  \"page\": {\n    \"limit\": 20,\n    \"offset\": 1,\n    \"sortBy\": [\n      {\n        \"name\": \"timestamp\",\n        \"order\": \"desc\"\n      }\n    ]\n  }\n}\n```\n"
      operationId: queryEvents
      parameters:
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      requestBody:
        description: Query payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsRequest'
            examples:
              EventsQueryExample:
                $ref: '#/components/examples/EventsQueryRequestExample'
              EventsQueryWithAttributesExample:
                $ref: '#/components/examples/EventsQueryRequestWithAttributesExample'
              EventsQueryWithViewsExample:
                $ref: '#/components/examples/EventsQueryRequestWithViewsExample'
        required: true
      responses:
        "200":
          description: List of events matching the filter criteria
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventListResponse'
              examples:
                EventsQueryResponseExample:
                  $ref: '#/components/examples/EventsQueryResponseExample'
                EventsQueryResponseWithAttributesExample:
                  $ref: '#/components/examples/EventsQueryResponseWithAttributesExample'
                EventsQueryWithViewsResponseExample:
                  $ref: '#/components/examples/EventsQueryWithViewsResponseExample'
                EventsQueryUnifiedAPResponseExample:
                  $ref: '#/components/examples/EventsQueryUnifiedAPResponseExample'
                EventsQueryWiredClientResponseExample:
                  $ref: '#/components/examples/EventsQueryWiredClientResponseExample'
                EventsQueryWirelessClientAPResponseExample:
                  $ref: '#/components/examples/EventsQueryWirelessClientResponseExample'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /dna/data/api/v1/assuranceEvents/query/count:
    post:
      tags:
      - assuranceEvents
      summary: Count the number of events with filters
      description: "API to fetch the count of assurance events for the given complex query.\n\n**The input payload contains the following fields:**\n\n| Field Name              | Description                    |\n| ----------------------  | ------------------------------ |\n| `startTime`             | Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest. |\n| `endTime`               | End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest. |\n| `deviceFamily`          | The value of `deviceFamily`. Please refer to `deviceFamily` model for the supported list. |\n| `filters`               | Used to define one or more filter conditions. Only the data that satisfy these conditions will be taken into consideration during the aggregation calculation. The supported list of filters in defined in `EventsFilterObj`. |\n\n**How the filtering behavior works**\n\nThe `filters` field in each post body can be used in various ways:\n\nEach filter in the list of filters will be applied simultaneously.\nFor instance, the following example would request filtering to Count of events with an networkDeviceName contains 9300-SJ and managementIpAddress contains 10.1.   \n```\n{\n  \"deviceFamily\": [\n    \"Switches and Hubs\",\n    \"Routers\"\n  ],\n  \"startTime\": 1705348800000,\n  \"endTime\": 1705435200000,\n  \"filters\": [\n    {\n      \"key\": \"networkDeviceName\",\n      \"operator\": \"like\",\n      \"value\": \"9300-SJ\"\n    },\n    {\n      \"key\": \"managementIpAddress\",\n      \"operator\": \"like\",\n      \"value\": \"10.1\"\n    }\n  ]\n}\n```\n\nEach filter object can utilize its logical operator differently to offer nested filtering functionality.\n\nIn the example below, you can observe a logical `OR` filter being applied using the nested filtering functionality:\n\nThe main filter object doesn't have its `key`, `value`, or `operator` fields populated. Only the `logicalOperator` field is populated to indicate that the filters within the nested filters list are to be logically combined.\n\n```      \n{\n  \"deviceFamily\": [\n    \"Switches and Hubs\",\n    \"Routers\"\n  ],\n  \"startTime\": 1705348800000,\n  \"endTime\": 1705435200000,\n  \"filters\": [\n    {\n      \"logicalOperator\": \"or\",\n      \"filters\": [\n        {\n          \"key\": \"networkDeviceName\",\n          \"operator\": \"like\",\n          \"value\": \"9300-SJ\"\n        },\n        {\n          \"key\": \"managementIpAddress\",\n          \"operator\": \"like\",\n          \"value\": \"10.1\"\n        }\n      ]\n    }\n  ]\n}\n```\n"
      operationId: countQueryEvents
      parameters:
      - name: X-CALLER-ID
        in: header
        description: |
          Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
        required: false
        schema:
          type: string
          default: unknown
        example: ui:client360
      requestBody:
        description: Query payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsCountRequest'
        required: true
      responses:
        "200":
          description: Count of events for the given filter criteria
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CountIntegerResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
components:
  schemas:
    EventListResponse:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        version:
          type: string
          description: Version of response object
          example: "1.0"
        page:
          $ref: '#/components/schemas/EventsPagination'
      example:
        response:
        - id: LJF89YsBv89ul3gLItGG
          name: LINK:UP
          timestamp: 1700630630634
          severity: 5
          messageType: Trap
          details: TenGigabitEthernet1/0/48 LINK UP
          deviceFamily: Switches and Hubs
          networkDeviceId: 1e2917dd-653d-4422-b5ed-c7fc985e6955
          networkDeviceName: cat9300-AssurBLR-162.cisco.com
          managementIpAddress: 10.64.92.162
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/f037e237-d815-47d1-b6a0-4f7a3e06462e/c7c8d53c-18b7-4ec3-99db-a02a0de9fbde/35c151fe-6748-4d72-beec-58e098d4c0dc/
          siteHierarchy: Global/Bangalore/Airport/Floor1
        - id: 5jJAAYwBS1HTYnPAXmDl
          name: Channel Change
          timestamp: 1700827992450
          messageType: Device
          details: Manual channel change by admin
          deviceFamily: Unified AP
          networkDeviceId: 6648dd6c-af54-47c0-9901-cc4c4c189a9e
          networkDeviceName: AUTO-AP-6607
          apMac: F3:94:56:8D:16:70
          wlcId: 7c0651ab-bbc2-4645-af84-bd2a32bb5bcb
          wlcName: AUTO-EWC-7801
          apSwitchName: ap_switch
          managementIpAddress: 10.10.70.38
          siteHierarchyId: /5f5107fb-352e-4cfb-ae5c-c784633ee517/23460344-1126-43cb-9af7-4126e285cca7/
          siteHierarchy: Global/Bangalore
          frequency: "2.4"
          radioChannelSlot: 0
          newRadioChannelList: "40"
        - id: -4u18YsBv89ul3gLfWFF
          name: Link Up
          timestamp: 1700567280360
          details: GigabitEthernet1/0/29 Link is Up
          messageType: TRAP
          severity: 5
          networkDeviceId: 677b105e-79bb-428b-b6c0-8e311845f591
          networkDeviceName: Branch-3-Switch
          connectedInterfaceName: GigabitEthernet1/0/29
          managementIpAddress: 10.64.92.160
          clientMac: 94:D4:69:F2:56:60
          identifier: 30.3.25.102
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/
          ipv4: 30.3.25.102
        - id: vjEoAIwBS1HTYnPAS-vZ
          name: DHCP
          timestamp: 1700809670931
          wirelessClientEventStartTime: 1700809670931
          wirelessClientEventEndTime: 1700809671295
          details: Due to DHCP Discover/AP:AUTO-AP-0046/WLC:AUTO-EWC-4969/WLAN:MEPS
          messageType: Device Controller
          siteHierarchyId: /5f5107fb-352e-4cfb-ae5c-c784633ee517/
          siteHierarchy: /Global/
          deviceFamily: Wireless Client
          networkDeviceId: c5cc4e10-ede9-4458-a985-083b72bd6734
          networkDeviceName: AUTO-AP-0046
          apMac: F3:9B:C7:8A:0B:D0
          wlcId: ffe59203-34e5-4361-ac68-a1d5f74c58fd
          wlcName: AUTO-EWC-4969
          clientMac: 2D:90:FA:73:70:9A
          ssid: MEPS
          radioChannelSlot: 0
          frequency: "2.4"
          identifier: gosurend
          isPrivateMac: false
          resultStatus: CL_FAIL
          failureCategory: DHCP
          username: gosurend
          childEvents:
          - id: vjEoAIwBS1HTYnPAS-vZ_#_1
            name: Association Start
            timestamp: 1700809670931
            wirelessEventType: 1
            details: Client Association with AP
            reasonCode: "1"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_2
            name: Association Done
            timestamp: 1700809670995
            wirelessEventType: 2
            details: Client Association with AP
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_3
            name: Authentication Start
            timestamp: 1700809671054
            wirelessEventType: 3
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_4
            name: Authentication Done
            timestamp: 1700809671115
            wirelessEventType: 4
            details: 802.1x Full Auth
            reasonCode: "89"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_5
            name: Key Exchange
            timestamp: 1700809671175
            wirelessEventType: 5
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_6
            name: Mobility
            timestamp: 1700809671236
            wirelessEventType: 6
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_7
            name: DHCP
            timestamp: 1700809671295
            wirelessEventType: 7
            details: DHCP Discover
            reasonCode: "226"
            subreasonCode: "0"
            resultStatus: CL_FAIL
        - id: -TEsAIwBS1HTYnPA4O4S
          name: Onboarding
          timestamp: 1700809682842
          wirelessClientEventStartTime: 1700809682842
          wirelessClientEventEndTime: 1700809683272
          details: AP:AUTO-AP-0046/WLC:AUTO-EWC-4969/WLAN:MEPS
          messageType: Device Controller
          siteHierarchyId: /5f5107fb-352e-4cfb-ae5c-c784633ee517/
          siteHierarchy: /Global/
          deviceFamily: Wireless Client
          networkDeviceId: c5cc4e10-ede9-4458-a985-083b72bd6734
          networkDeviceName: AUTO-AP-0046
          apMac: F3:9B:C7:8A:0B:D0
          wlcId: ffe59203-34e5-4361-ac68-a1d5f74c58fd
          wlcName: AUTO-EWC-4969
          clientMac: 2D:90:FA:73:70:9A
          ssid: MEPS
          radioChannelSlot: 0
          frequency: "2.4"
          identifier: gosurend
          isPrivateMac: false
          resultStatus: CL_SUCCESS
          username: gosurend
          childEvents:
          - id: TEsAIwBS1HTYnPA4O4S_#_1
            name: Association Start
            timestamp: 1700809670931
            wirelessEventType: 1
            details: Client Association with AP
            reasonCode: "1"
            subreasonCode: "1"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_2
            name: Association Done
            timestamp: 1700809670995
            wirelessEventType: 2
            details: Client Association with AP
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_3
            name: Authentication Start
            timestamp: 1700809671054
            wirelessEventType: 3
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_4
            name: Authentication Done
            timestamp: 1700809671115
            wirelessEventType: 4
            details: 802.1x Full Auth
            reasonCode: "89"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_5
            name: Key Exchange
            timestamp: 1700809671175
            wirelessEventType: 5
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_6
            name: Mobility
            timestamp: 1700809671236
            wirelessEventType: 6
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_7
            name: DHCP
            timestamp: 1700809671295
            wirelessEventType: 7
            details: DHCP Discover
            reasonCode: "226"
            subreasonCode: "0"
            resultStatus: CL_FAIL
        version: "1.0"
    Event:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the event
        severity:
          type: integer
          description: Severity of the event between 0 and 6
        name:
          type: string
          description: Name of the event
        facility:
          type: string
          description: Facility of the event.
        mnemonic:
          type: string
          description: Mnemonic of the event.
        eventStatus:
          type: string
          description: "Event status of the event. Example values are 1 (Red), 2 (Blue), 3 (Green)."
        timestamp:
          type: integer
          description: Timestamp of the event. The value is in terms of milliseconds since UNIX epoch
          format: int64
        wirelessClientEventStartTime:
          type: integer
          description: Start time of the wireless event in terms of milliseconds since UNIX epoch. This is applicable only for `Wireless Client` events.
          format: int64
        wirelessClientEventEndTime:
          type: integer
          description: End time of the wireless event in terms of milliseconds since UNIX epoch. This is applicable only for `Wireless Client` events.
          format: int64
        details:
          type: string
          description: Details for the event
        messageType:
          type: string
          description: Type of the message
        reasonDescription:
          type: string
          description: "Failure reason description. This is applicable for `Wireless Client` , `Unified AP` and `Wired Client` events."
        subReasonDescription:
          type: string
          description: Sub-reason description for the wireless event. This is applicable for child `Wireless Client` events.
        siteHierarchyId:
          type: string
          description: Slash separated UUIDs for the site hierarchy
          example: /a36a9c63-b86b-4348-b250-ddba04d21472/471df5d4-ccbd-4796-88a3-018eefe907d0/27db410b-7baf-4b6a-b4f4-a14a8dd78218/
        siteHierarchy:
          type: string
          description: Slash seperated names of the site location hierarchy
          example: /Global/Bangalore/Airport/
        deviceFamily:
          type: string
          description: Device family
        networkDeviceId:
          type: string
          description: |
            Unique identifier of the network device. This would be:

            * Network device UUID for network family of events (e.g. Switches and Hubs, Routers, Wireless Controller, etc.)
            * Access point UUID for `Unified AP` family of events.
            * UUID of the connected device (e.g. switch) for `Wired Client` family of events.
            * Access point UUID for `Wireless Client` family of events.
        networkDeviceName:
          type: string
          description: |
            Name of the network device. This would be:

            * Network device name for network family of events (e.g. Switches and Hubs, Routers, Wireless Controller, etc.)
            * Access point name for `Unified AP` family of events.
            * Name of the connected device (e.g. switch) for `Wired Client` family of events.
            * Access point name for `Wireless Client` family of events.
        managementIpAddress:
          type: string
          description: "Management IP address for the network device. For `Wired Client` it is connected device IP address, and for `Wireless Client` events it is null."
        apMac:
          type: string
          description: MAC address of the access point. This is applicable only for `Unified AP` and `Wireless Client` events.
        apSwitchId:
          type: string
          description: UUID of the connected switch to which access point is connected. This is applicable only for `Unified AP` events.
        apSwitchName:
          type: string
          description: Name of the switch to which the access point is connected to. This is applicable only for `Unified AP` events.
        radioChannelSlot:
          type: integer
          description: Radio channel slot. This is applicable for `Unified AP` and `Wireless Client` events.
          format: int32
        wlcId:
          type: string
          description: UUID of the WLC to which access point is connected. This is applicable only for `Unified AP` and `Wireless Client` events.
        wlcName:
          type: string
          description: Name of the WLC to which access point is connected. This is applicable only for `Unified AP` and `Wireless Client` events.
        frequency:
          type: string
          description: Radio frequency for wireless connection. This is applicable only for `Unified AP` and `Wireless Client` events.
        identifier:
          type: string
          description: IP address or username of the client. This is applicable only for `Wired Client` and `Wireless Client` events.
        connectedInterfaceName:
          type: string
          description: Interface name on the network device to which the client is connected to. This is applicable only for `Wired Client` events.
        vlanId:
          type: string
          description: VLAN identifier. This is applicable only for `Wired Client` and `Wireless Client` events.
        clientMac:
          type: string
          description: MAC address of the clientt. This is applicable only for `Wired Client` and `Wireless Client` events.
        isPrivateMac:
          type: boolean
          description: Flag to indicate whether the client MAC address is privacy enabled or not. This is applicable only for `Wireless Client` events.
        ipv4:
          type: string
          description: IPv4 address of the connected client. This is applicable only for `Wired Client` and `Wireless Client` events.
        ipv6:
          type: string
          description: IPv6 address of the connected client. This is applicable only for `Wired Client` and `Wireless Client` events.
        ssid:
          type: string
          description: Wireless SSID to which the client is connected. This is applicable only for `Wireless Client` events.
        resultStatus:
          type: string
          description: Result for the `Wireless Client` event
        failureCategory:
          type: string
          description: "Category in case the `Wireless Client` event result is failure. Examples are `AAA`, `ASSOC`, `DHCP`, `OTHER`."
        failureIpAddress:
          type: string
          description: DHCP NAK IP address or decline IP address. This is applicable only for `Wireless Client` events.
        bssid:
          type: string
          description: BSSID of the access point. This is applicable only for `Wireless Client` events.
        roamType:
          type: string
          description: "Client roam type. This is applicable only for `Wireless Client` events. Examples are `NONE`, `SLOW_11I`, `FAST_OKC`, `FAST_CCKM`, `FAST_11R`."
        username:
          type: string
          description: Username or MAC address of the connected client. This is applicable only for `Wireless Client` events.
        apRole:
          type: string
          description: "Role of the access point. This is applicable only for `Wireless Client` events. Examples are `Unassociated`, `Local`, `Foreign`, `Invalid`, etc."
        assocRssi:
          type: integer
          description: RSSI value sent during association. This is applicable only for `Wireless Client` events.
          format: int32
        assocSnr:
          type: integer
          description: SNR value sent during association. This is applicable only for `Wireless Client` events.
          format: int32
        affectedClients:
          type: array
          description: List of affected clients in the form of "MAC (RSSI)". This is applicable only for `Unified AP` events.
          items:
            type: string
        lastApResetType:
          type: string
          description: "Last AP reset type. This is applicable only for `Unified AP` events. Examples are `Link Failure`, `Configuration Changes`, `Crash`."
        lastApDisconnectReason:
          type: string
          description: "Last AP disconnect reason. This is applicable only for `Unified AP` events. Examples are `Post Join Timer Expired`, `Join Response Decode Failed`, `IP Address Reset`, etc."
        apRadioOperationState:
          type: string
          description: "AP radio operation state. This is applicable only for `Unified AP` events. Examples are `Up`, `Down`."
        currentRadioPowerLevel:
          type: integer
          description: Current radio power level. This is applicable only for `Unified AP` events. Example - `40`.
          format: int32
        previousRadioPowerLevel:
          type: integer
          description: Previous radio power level. This is applicable only for `Unified AP` events. Example - `40`.
          format: int32
        newRadioChannelList:
          type: string
          description: List of new radio channels (comma separated). This is applicable only for `Unified AP` events.
        newRadioChannelWidth:
          type: string
          description: Width of new radio channels. This is applicable only for `Unified AP` events. Example - `40 MHz`
        oldRadioChannelList:
          type: string
          description: List of old radio channels (comma separated). This is applicable only for `Unified AP` events.
        oldRadioChannelWidth:
          type: string
          description: Width of old radio channels. This is applicable only for `Unified AP` events. Example - `40 MHz`
        radioInterference:
          type: string
          description: Radio interference. This is applicable only for `Unified AP` events.
        radioNoise:
          type: string
          description: Radio noise level. This is applicable only for `Unified AP` events.
        radioChannelUtilization:
          type: string
          description: Radio channel utilization in percentage. This is applicable only for `Unified AP` events.
        replacingDeviceSerialNumber:
          type: string
          description: Serial number of the device which is replacing the old one. This is applicable only for network device related events.
        replacedDeviceSerialNumber:
          type: string
          description: Serial number of the device which is being replaced. This is applicable only for network device related events.
        switchNumber:
          type: string
          description: Switch number in VSS. This is applicable only for network device related events.
        auditSessionId:
          type: string
          description: Audit session identifer for Cisco ISE event. This is applicable only for `Wired Client` events.
        authServerIp:
          type: string
          description: AAA server IP. This is applicable only for `Wireless Client` events.
        dhcpServerIp:
          type: string
          description: DHCP server IP. This is applicable only for `Wireless Client` events.
        udnId:
          type: string
          description: Id of UPN associated with the event. This is applicable only for `Wireless Client` events.
        udnName:
          type: string
          description: Name of UPN associated with the event. This is applicable only for `Wireless Client` events.
        duid:
          type: string
          description: Device Unique Identifier. This is applicable only for `Wireless Client` events.
        candidateAPs:
          type: array
          description: Candidate APs. This is applicable only for `Wireless Client` events.
          items:
            $ref: '#/components/schemas/AssociatedAP'
        invalidIeAPs:
          type: array
          description: Invalid IE APs. This is applicable only for `Wireless Client` events.
          items:
            $ref: '#/components/schemas/AssociatedAP'
        missingResponseAPs:
          type: array
          description: Missing Response APs. This is applicable only for `Wireless Client` events.
          items:
            $ref: '#/components/schemas/AssociatedAP'
        childEvents:
          type: array
          description: List of child events for the current event. This is applicable only for `Wireless Client` events.
          items:
            $ref: '#/components/schemas/WirelessClientChildEvent'
    AssociatedAP:
      type: object
      properties:
        apId:
          type: string
          description: AP UUID
        apName:
          type: string
          description: AP Name
        apMac:
          type: string
          description: AP MAC Address
        bssid:
          type: string
          description: BSSID
        rssi:
          type: integer
          description: RSSI
          format: int32
        type:
          type: string
          description: Type of the AP issue
          enum:
          - Invalid IE
          - Missing Response
        frameType:
          type: string
          description: Frame Type of the AP issue
        ies:
          type: string
          description: Invalid IEs for the AP
    WirelessClientChildEvent:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the event
        name:
          type: string
          description: Name of the event
        timestamp:
          type: integer
          description: Timestamp of the event. The value is in terms of milliseconds since UNIX epoch
          format: int64
        wirelessEventType:
          type: integer
          description: "Type of the child wireless event. Example values are 1 (Association Start), 2 (Association Done), etc. `name` attribute provides the details for this attribute."
          format: int32
        details:
          type: string
          description: Details for the event
        reasonCode:
          type: string
          description: |
            Reason code for either case (success or failure). Example values for failure reason codes are `1025` (Client initiated a deauthentication or disassociation), `1027` (Client has failed its Webauth session), `1029` (Client has been deleted due to a WLAN/policy profile shut, or wlan-policy map deletion), etc.
        reasonDescription:
          type: string
          description: Failure reason description.
        subReasonCode:
          type: string
          description: Sub-reason code.
        subReasonDescription:
          type: string
          description: Sub-reason description.
        resultStatus:
          type: string
          description: Result for the `Wireless Client` event
        failureCategory:
          type: string
          description: "Category in case the `Wireless Client` event result is failure. Examples are `AAA`, `ASSOC`, `DHCP`, `OTHER`."
    EventsPagination:
      type: object
      properties:
        limit:
          maximum: 20
          minimum: 1
          type: integer
          description: Number of records to fetch in a page
          example: 10
          default: 10
        offset:
          minimum: 1
          type: integer
          description: Starting offset of data to fetch and returned
          example: 5
          default: 1
        count:
          type: integer
          description: Total number of records related to the resource after applying applicable filtering
          example: 1000
        sortBy:
          type: array
          description: Records are sorted based on the fields specified in the   array.
          items:
            $ref: '#/components/schemas/EventSortBy'
    EventSortBy:
      type: object
      properties:
        name:
          type: string
          description: |
            Field name by which sort is requested.

            **Network Devices**: name, messageType, severity, networkDeviceId, networkDeviceName, managementIpAddress, timestamp

            **Unified AP**: name, messageType, severity, networkDeviceId, networkDeviceName, managementIpAddress, apMac, wlcId, wlcName, frequency, timestamp

            **Wired Client**: name, messageType, severity, ipv4, ipv6, identifier, connectedDeviceId, connectedDeviceName, connectedDeviceIp, connectedInterfaceName, vlanId, clientMac, timestamp

            **Wireless Client**: name, messageType, ipv4, ipv6, identifier, clientMac, apId, apName, apMac, wlcId, wlcName, frequency, ssid, username, dhcpServerIp, timestamp
          example: name
        order:
          type: string
          description: Sort order. `asc` for ascending and `desc` for descending
          example: asc
          enum:
          - asc
          - desc
      description: List of field names and corresponding order used to sort   the records.
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/ErrorObject'
        version:
          type: string
          description: The version of the response
          example: "1.0"
      description: Contains information explaining the error that occured   processing this request.
      example:
        response:
        - errorCode: 2600
          message: Error message
          detail: Error details
      externalDocs:
        description: Error Codes - Cisco DevNet
        url: https://developer.cisco.com/docs/dna-center/#!api-quick-start/error-codes
    ErrorObject:
      type: object
      properties:
        errorCode:
          type: integer
          description: Application specific error code returned by the server
        message:
          type: string
          description: Brief message about the error condition
        detail:
          type: string
          description: "A more detailed explanation of the error condition the   parameter and its value, that caused the condition and why it caused it."
    CountIntegerResponse:
      title: Count Integer Response
      type: object
      properties:
        response:
          $ref: '#/components/schemas/CountIntegerResponse_response'
        version:
          type: string
          description: The version of the response
          example: "1.0"
      description: Reports
    EventDetailResponse:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/Event'
        version:
          type: string
          description: Version of response object
          example: "1.0"
      example:
        response:
          id: LJF89YsBv89ul3gLItGG
          name: LINK:UP
          timestamp: 1700630630634
          severity: 5
          messageType: Trap
          details: TenGigabitEthernet1/0/48 LINK UP
          deviceFamily: Switches and Hubs
          networkDeviceId: 1e2917dd-653d-4422-b5ed-c7fc985e6955
          networkDeviceName: cat9300-AssurBLR-162.cisco.com
          managementIpAddress: 10.64.92.162
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/f037e237-d815-47d1-b6a0-4f7a3e06462e/c7c8d53c-18b7-4ec3-99db-a02a0de9fbde/35c151fe-6748-4d72-beec-58e098d4c0dc/
          siteHierarchy: Global/Bangalore/Airport/Floor1
        version: "1.0"
    EventChildEventsResponse:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/WirelessClientChildEvent'
        version:
          type: string
          description: Version of response object
          example: "1.0"
      example:
        response:
        - id: TEsAIwBS1HTYnPA4O4S_#_1
          name: Association Start
          timestamp: 1700809670931
          wirelessEventType: 1
          details: Client Association with AP
          reasonCode: "1"
          subreasonCode: "1"
          resultStatus: CL_SUCCESS
        - id: TEsAIwBS1HTYnPA4O4S_#_2
          name: Association Done
          timestamp: 1700809670995
          wirelessEventType: 2
          details: Client Association with AP
          reasonCode: "0"
          subreasonCode: "0"
          resultStatus: CL_SUCCESS
        - id: TEsAIwBS1HTYnPA4O4S_#_3
          name: Authentication Start
          timestamp: 1700809671054
          wirelessEventType: 3
          reasonCode: "0"
          subreasonCode: "0"
          resultStatus: CL_SUCCESS
        - id: TEsAIwBS1HTYnPA4O4S_#_4
          name: Authentication Done
          timestamp: 1700809671115
          wirelessEventType: 4
          details: 802.1x Full Auth
          reasonCode: "89"
          subreasonCode: "0"
          resultStatus: CL_SUCCESS
        version: "1.0"
    EventsRequest:
      example:
        deviceFamily:
        - Switches and Hubs
        - Routers
        startTime: 1705348800000
        endTime: 1705435200000
        filters:
        - key: siteHierarchyId
          operator: like
          value: /f037e237-d815-47d1-b6a0-4f7a3e06462e
        - key: severity
          operator: in
          value:
          - 1
          - 2
        - logicalOperator: or
          filters:
          - key: networkDeviceName
            operator: like
            value: 9300-SJ
          - key: managementIpAddress
            operator: like
            value: 10.1.
        views:
        - network
        page:
          offset: 1
          limit: 20
          sortBy:
          - name: name
            order: asc
      allOf:
      - $ref: '#/components/schemas/EventsCountRequest'
      - type: object
        properties:
          views:
            type: array
            items:
              $ref: '#/components/schemas/EventViews'
          attributes:
            type: array
            description: "List of attributes that needs to be included in the response. If this parameter is not provided, then all attributes would be part of the response."
            items:
              type: string
              enum:
              - affectedClients
              - apMac
              - apRadioOperationState
              - apRole
              - apSwitchId
              - apSwitchName
              - assocRssi
              - assocSnr
              - auditSessionId
              - authServerIp
              - bssid
              - candidateAPs
              - childEvents
              - clientMac
              - connectedInterfaceName
              - currentRadioPowerLevel
              - details
              - deviceFamily
              - dhcpServerIp
              - duid
              - eventStatus
              - facility
              - failureCategory
              - failureIpAddress
              - frequency
              - id
              - identifier
              - invalidIeAPs
              - ipv4
              - ipv6
              - isPrivateMac
              - lastApDisconnectReason
              - lastApResetType
              - managementIpAddress
              - messageType
              - missingResponseAPs
              - mnemonic
              - name
              - networkDeviceId
              - networkDeviceName
              - newRadioChannelList
              - newRadioChannelWidth
              - oldRadioChannelList
              - oldRadioChannelWidth
              - previousRadioPowerLevel
              - radioChannelSlot
              - radioChannelUtilization
              - radioInterference
              - radioNoise
              - reasonDescription
              - replacedDeviceSerialNumber
              - replacingDeviceSerialNumber
              - resultStatus
              - roamType
              - severity
              - siteHierarchy
              - siteHierarchyId
              - ssid
              - subReasonDescription
              - switchNumber
              - timestamp
              - udnId
              - udnName
              - username
              - vlanId
              - wirelessClientEventEndTime
              - wirelessClientEventStartTime
              - wlcId
              - wlcName
          page:
            $ref: '#/components/schemas/EventsPagination'
    EventsCountRequest:
      required:
      - deviceFamily
      type: object
      properties:
        deviceFamily:
          minItems: 1
          type: array
          description: "Device family. Please note that multiple families across network device type and client type is not allowed. For example, choosing `Routers` along with `Wireless Client` or `Unified AP` is not supported."
          items:
            type: string
            enum:
            - Switches and Hubs
            - Routers
            - Wireless Controller
            - Third Party Device
            - Unified AP
            - Wired Client
            - Wireless Client
        startTime:
          type: integer
          description: |
            Start time from which the API queries the dataset related to the resource. It must be specified in terms of milliseconds since UNIX epoch. Value is inclusive.

            Querying of data spanning more than 7 days is not allowed, so difference between `startTime` and `endTime` must not be more than that.

            If `startTime` is not provided, API will default to current time minus 24 hours.
          format: int64
        endTime:
          type: integer
          description: |
            End time to which the API queries the dataset related to the resource. It must be specified in terms of milliseconds since UNIX epoch. Value is inclusive.

            Querying of data spanning more than 7 days is not allowed, so difference between `startTime` and `endTime` must not be more than that.

            If `endTime` is not provided, API will default to current time.
          format: int64
        filters:
          type: array
          description: Array of filters to be applied.
          items:
            $ref: '#/components/schemas/EventsFilterObj'
      example:
        deviceFamily:
        - Switches and Hubs
        - Routers
        startTime: 1705348800000
        endTime: 1705435200000
        filters:
        - key: siteHierarchyId
          operator: like
          value: /f037e237-d815-47d1-b6a0-4f7a3e06462e
        - key: severity
          operator: in
          value:
          - 1
          - 2
        - logicalOperator: or
          filters:
          - key: networkDeviceName
            operator: like
            value: 9300-SJ
          - key: managementIpAddress
            operator: like
            value: 10.1.
    EventsFilterObj:
      type: object
      properties:
        key:
          type: string
          description: "Field name on which the filter should be applied when querying the data. The possible values for `key` depends on the `deviceFamily` that is being queried. Following tables explain the same.\n\nKeys applicable to all device families:\n\n| Key                      | Type    | Description                                 |\n| ------------------------ | ------- | ------------------------------------------- |\n| name                     | string  | Event name                                  |\n| siteHierarchyId          | string  | Slash separated UUIDs for the site hierarchy. Example: `/a36a9c63-b86b-4348-b250-ddba04d21472/471df5d4-ccbd-4796-88a3-018eefe907d0/27db410b-7baf-4b6a-b4f4-a14a8dd78218/` |\n| messageType              | string  | Message type. Possible values are `Syslog`, `Trap`, `Device`, `Device Controller`, `ISE`, `TDL` |\n\nKeys applicable to network device related families (except `Unifed AP`):\n\n| Key                      | Type    | Description                                 | \n| ------------------------ | ------- | ------------------------------------------- |\n| severity                 | integer | Severity of the event (0 to 6)              |\n| networkDeviceId          | string  | UUID of the network device                  |\n| networkDeviceName        | string  | Name of the network device. It should be as per device inventory |\n| managementIpAddress      | string  | Management IP address of the network device |\n| details                  | string  | Details of the network device               |\n\nKeys applicable to `Unified AP` family:\n\n| Key                      | Type    | Description                                 | \n| ------------------------ | ------- | ------------------------------------------- |\n| networkDeviceId          | string  | UUID of the access point                    |\n| networkDeviceName        | string  | Name of the access point. It should be as per device inventory |\n| managementIpAddress      | string  | Management IP address of the network device |\n| apMac                    | string  | MAC address of the access point             |\n| wlcId                    | string  | UUID of the Wireless controller             |\n| wlcName                  | string  | Wireless controller name                    |\n| frequency                | string  | Band (e.g. 2.4, 5)                          |\n| reasonDescription        | string  | Reason for AP event                         |\n\nKeys applicable to `Wired Client` family:\n\n| Key                      | Type    | Description                                 | \n| ------------------------ | ------- | ------------------------------------------- |\n| severity                 | integer | Severity of the event (0 to 6)              |\n| clientMac                | string  | MAC address of wired client                 |\n| ipv4                     | ip addr | IPv4 address of the client                  |\n| ipv6                     | ip addr | IPv6 address of the client                  |\n| identifier               | string  | MAC address or username                     |\n| connectedDeviceId        | string  | UUID of the connected switch                | \n| connectedDeviceName      | string  | Name of the connected switch                | \n| connectedDeviceIp        | string  | IP address of the connected switch          | \n| connectedInterfaceName   | string  | Name of the port/interface where client is connected |\n| vlanId                   | string  | VLAN id of wired client                     |\n| details                  | string  | Details of the wired client                 |\n\nKeys applicable to `Wireless Client` family:\n\n| Key                      | Type    | Description                                 | \n| ------------------------ | ------- | ------------------------------------------- |\n| clientMac                | string  | MAC Address of Wireless Client              |\n| ipv4                     | ip addr | IPv4 address of the client                  |\n| ipv6                     | ip addr | IPv6 address of the client                  |\n| identifier               | string  | MAC address or username                     |\n| apId                     | string  | UUID of the access point                    |\n| apMac                    | string  | MAC address of the access point             |\n| apName                   | string  | Connected AP name of the wireless client    |\n| wlcId                    | string  | Wireless controller UUID                    |\n| wlcName                  | string  | Wireless controller name                    |\n| frequency                | string  | Radio band (e.g. 2.4, 5)                    |\n| ssid                     | string  | SSID of connected wireless client           |\n| username                 | string  | User name of wireless client                |\n| dhcpServerIp             | ip addr | DHCP server IP of wireless client           |\n| reasonCode               | string  | Failure reason code                         |\n"
          enum:
          - apId
          - apMac
          - apName
          - clientMac
          - connectedDeviceId
          - connectedDeviceIp
          - connectedDeviceName
          - connectedInterfaceName
          - details
          - dhcpServerIp
          - frequency
          - identifier
          - ipv4
          - ipv6
          - managementIpAddress
          - messageType
          - name
          - networkDeviceId
          - networkDeviceName
          - reasonCode
          - reasonDescription
          - severity
          - siteHierarchyId
          - ssid
          - username
          - vlanId
          - wlcId
          - wlcName
        operator:
          $ref: '#/components/schemas/EventsOperator'
        logicalOperator:
          $ref: '#/components/schemas/LogicalOperator'
        value:
          type: object
          description: |
            Field value(s) to filter the data set. Array of values is used for   "in" or "out" operator. Values will be of whatever type the   specific field being filtered is defined with.

            For other operators, filter value is of whatever type the specific   field being filtered is defined with.

            In the case of an "and" or "or" operator, this values array will be   ignored, and the values arrays in each of the *nested filters*   will be used.
        filters:
          type: array
          description: |
            Nested array of filters in case of AND/OR based filters. Only one   level of nesting will be supported.

            Structure of nested filter is the same as parent with all operators   supported except AND or OR.
          items:
            $ref: '#/components/schemas/EventsFilterObj'
    EventsOperator:
      type: string
      description: Type of filter operator to use for querying data in and out operator takes multiple values and applies the filters
      enum:
      - in
      - neq
      - eq
      - notIn
      - like
    LogicalOperator:
      type: string
      description: |
        Operator to use when attempting to apply a logical conjunction of more   than 1 filter

        Logical operations include: 'and', 'or'.
      enum:
      - and
      - or
    EventViews:
      type: string
      description: "The specific view being requested. This is an optional parameter which can be passed to get one or more of the specific events data. If this is not provided, then it will default to `basic` view.\n\n### Response data proviced by each view:  \n\n1. `basic`:\n`[id, name, timestamp, details, messageType, siteHierarchyId, siteHierarchy, deviceFamily, networkDeviceId, networkDeviceName, managementIpAddress]`\n\n2. `network`:\n`[id, name, severity, facility, mnemonic, eventStatus, timestamp, details, messageType, siteHierarchyId, siteHierarchy, deviceFamily, networkDeviceId, networkDeviceName, managementIpAddress, replacedDeviceSerialNumber, replacingDeviceSerialNumber, switchNumber]`\n\n3. `ap`:\n`[id, name, eventStatus, timestamp, details, messageType, siteHierarchyId, siteHierarchy, deviceFamily, networkDeviceId, networkDeviceName, managementIpAddress, apMac, wlcName, frequency, apSwitchId, apSwitchName, wlcId, reasonDescription, lastApDisconnectReason, lastApResetType, apRadioOperationState, currentRadioPowerLevel, previousRadioPowerLevel, newRadioChannelList, newRadioChannelWidth, oldRadioChannelList, oldRadioChannelWidth, radioNoise, radioInterference, radioChannelUtilization, affectedClients]`\n\n4. `wiredClient`:\n`[id, name, severity, facility, mnemonic, eventStatus, timestamp, details, messageType, siteHierarchyId, siteHierarchy, deviceFamily, networkDeviceId, networkDeviceName, managementIpAddress, identifier, clientMac, connectedInterfaceName, ipv4, ipv6, vlanId, auditSessionId, reasonDescription]`\n\n5. `wirelessClient`:\n`[id, name, timestamp, details, messageType, siteHierarchyId, siteHierarchy, deviceFamily, networkDeviceId, networkDeviceName, identifier, clientMac, wirelessClientEventStartTime, wirelessClientEventEndTime, radioChannelSlot, isPrivateMac, vlanId, authServerIp, apRole, assocRssi, assocSnr, udnName, udnId, duid, failureIpAddress, roamType, subReasonDescription, invalidIeAPs, candidateAPs, missingResponseAPs, apMac, wlcName, wlcId, ssid, username, frequency, resultStatus, failureCategory, dhcpServerIp, ipv4, ipv6, reasonDescription, childEvents]`\n"
      default: basic
      enum:
      - basic
      - network
      - ap
      - wiredClient
      - wirelessClient
    CountIntegerResponse_response:
      type: object
      properties:
        count:
          type: integer
          description: The total number of records related to the resource
          format: int64
          example: 1000
  responses:
    "400":
      description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    "500":
      description: The server could not fulfill the request due to internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    "1XX":
      description: Informational Responses - The server received the request and sent an informational response.
    "2XX":
      description: "Successful Responses - The server received the client request, understood it, and accepted it."
    "3XX":
      description: Redirection Messages - The client must take additional action to complete the request.
    "4XX":
      description: Client Error Responses - The client request caused the error.
    "5XX":
      description: Server Error Responses - The server failed to fulfill the request.
    defaultError:
      description: Unexpected Error
    "404":
      description: The client made a request for a resource that does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  parameters:
    deviceFamilies:
      name: deviceFamily
      in: query
      description: |
        Device family. Please note that multiple families across network device type and client type is not allowed. For example, choosing `Routers` along with `Wireless Client` or `Unified AP` is not supported.
        Examples:

        `deviceFamily=Switches and Hubs` (single deviceFamily requested)

        `deviceFamily=Switches and Hubs&deviceFamily=Routers` (multiple deviceFamily requested)
      required: true
      style: form
      explode: true
      schema:
        minItems: 1
        type: array
        items:
          type: string
          enum:
          - Switches and Hubs
          - Routers
          - Wireless Controller
          - Third Party Device
          - Unified AP
          - Wired Client
          - Wireless Client
      example:
      - Switches and Hubs
    eventStartTime:
      name: startTime
      in: query
      description: |
        Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.

        If `startTime` is not provided, API will default to current time minus 24 hours.
      schema:
        type: integer
        format: int64
      example: 1705348800000
    eventEndTime:
      name: endTime
      in: query
      description: |
        End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.

        If `endTime` is not provided, API will default to current time.
      schema:
        type: integer
        format: int64
      example: 1705435200000
    messageTypes:
      name: messageType
      in: query
      description: |
        Message type for the event.

        Examples:

        `messageType=Syslog` (single messageType requested)

        `messageType=Trap&messageType=Syslog` (multiple messageType requested)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - Syslog
          - Trap
          - Device
          - Device Controller
          - ISE
          - TDL
      example:
      - Syslog
    severities:
      name: severity
      in: query
      description: |
        Severity of the event between 0 and 6. This is applicable only for events related to network devices (other than AP) and `Wired Client` events.

        | Value | Severity    |
        | ----- | ----------- |
        | 0     | Emergency   |
        | 1     | Alert       |
        | 2     | Critical    |
        | 3     | Error       |
        | 4     | Warning     |
        | 5     | Notice      |
        | 6     | Info        |

        Examples:

        `severity=0` (single severity requested)

        `severity=0&severity=1` (multiple severity requested)
      style: form
      explode: true
      schema:
        type: array
        items:
          maximum: 6
          minimum: 0
          type: integer
          format: int32
      example:
      - 2
    siteIds:
      name: siteId
      in: query
      description: |
        The UUID of the site. (Ex. `flooruuid`)

        Examples:

        `?siteId=id1` (single id requested)

        `?siteId=id1&siteId=id2&siteId=id3` (multiple ids requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    siteHierarchyIds:
      name: siteHierarchyId
      in: query
      description: |
        The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID. (Ex. `globalUuid/areaUuid/buildingUuid/floorUuid`)

        This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

        Examples:

        `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid `(single siteHierarchyId requested)

        `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid&siteHierarchyId=globalUuid/areaUuid2/buildingUuid2/floorUuid2` (multiple siteHierarchyIds requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    networkDeviceNames:
      name: networkDeviceName
      in: query
      description: |
        Network device name. This parameter is applicable for network device related families.
        This field supports wildcard (`*`) character-based search. Ex: `*Branch*` or `Branch*` or `*Branch`
        Examples:

        `networkDeviceName=Branch-3-Gateway` (single networkDeviceName requested)

        `networkDeviceName=Branch-3-Gateway&networkDeviceName=Branch-3-Switch` (multiple networkDeviceName requested)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      example:
      - Branch-3-Switch
    networkDeviceIds:
      name: networkDeviceId
      in: query
      description: |
        The list of Network Device Uuids. (Ex. `6bef213c-19ca-4170-8375-b694e251101c`)

        Examples:

        `networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c` (single networkDeviceId requested)

        `networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c&networkDeviceId=32219612-819e-4b5e-a96b-cf22aca13dd9&networkDeviceId=2541e9a7-b80d-4955-8aa2-79b233318ba0` (multiple networkDeviceIds with & separator)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    apMacs:
      name: apMac
      in: query
      description: |
        MAC address of the access point. This parameter is applicable for `Unified AP` and `Wireless Client` events.

        This field supports wildcard (`*`) character-based search. Ex: `*50:0F*` or `50:0F*` or `*50:0F`

        Examples:

        `apMac=50:0F:80:0F:F7:E0` (single apMac requested)

        `apMac=50:0F:80:0F:F7:E0&apMac=18:80:90:AB:7E:A0` (multiple apMac requested)
      style: form
      explode: true
      schema:
        type: array
        items:
          pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
          type: string
      example:
      - F3:9B:C7:8A:0B:D0
    clientMacs:
      name: clientMac
      in: query
      description: |
        MAC address of the client. This parameter is applicable for `Wired Client` and `Wireless Client` events.

        This field supports wildcard (`*`) character-based search. Ex: `*66:2B*` or `66:2B*` or `*66:2B`

        Examples:

        `clientMac=66:2B:B8:D2:01:56` (single clientMac requested)

        `clientMac=66:2B:B8:D2:01:56&clientMac=DC:A6:32:F5:5A:89` (multiple clientMac requested)
      style: form
      explode: true
      schema:
        type: array
        items:
          pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
          type: string
      example:
      - 94:D4:69:F2:56:60
    eventAttributes:
      name: attribute
      in: query
      description: |
        The list of attributes that needs to be included in the response. If this parameter is not provided, then basic attributes (`id`, `name`, `timestamp`, `details`, `messageType`, `siteHierarchyId`, `siteHierarchy`, `deviceFamily`, `networkDeviceId`, `networkDeviceName`, `managementIpAddress`) would be part of the response.
         Examples:

        `attribute=name` (single attribute requested)

        `attribute=name&attribute=networkDeviceName` (multiple attribute requested)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - affectedClients
          - apMac
          - apRadioOperationState
          - apRole
          - apSwitchId
          - apSwitchName
          - assocRssi
          - assocSnr
          - auditSessionId
          - authServerIp
          - bssid
          - candidateAPs
          - childEvents
          - clientMac
          - connectedInterfaceName
          - currentRadioPowerLevel
          - details
          - deviceFamily
          - dhcpServerIp
          - duid
          - eventStatus
          - facility
          - failureCategory
          - failureIpAddress
          - frequency
          - id
          - identifier
          - invalidIeAPs
          - ipv4
          - ipv6
          - isPrivateMac
          - lastApDisconnectReason
          - lastApResetType
          - managementIpAddress
          - messageType
          - missingResponseAPs
          - mnemonic
          - name
          - networkDeviceId
          - networkDeviceName
          - newRadioChannelList
          - newRadioChannelWidth
          - oldRadioChannelList
          - oldRadioChannelWidth
          - previousRadioPowerLevel
          - radioChannelSlot
          - radioChannelUtilization
          - radioInterference
          - radioNoise
          - reasonDescription
          - replacedDeviceSerialNumber
          - replacingDeviceSerialNumber
          - resultStatus
          - roamType
          - severity
          - siteHierarchy
          - siteHierarchyId
          - ssid
          - subReasonDescription
          - switchNumber
          - timestamp
          - udnId
          - udnName
          - username
          - vlanId
          - wirelessClientEventEndTime
          - wirelessClientEventStartTime
          - wlcId
          - wlcName
    eventViews:
      name: view
      in: query
      description: |
        The list of events views. Please refer to `EventViews` for the supported list
         Examples:

        `view=network` (single view requested)

        `view=network&view=ap` (multiple view requested)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - basic
          - network
          - ap
          - wiredClient
          - wirelessClient
    offset:
      name: offset
      in: query
      description: Specifies the starting point within all records returned by the API. It's one based offset. The starting value is 1.
      schema:
        minimum: 1
        type: integer
        default: 1
    limit_20:
      name: limit
      in: query
      description: Maximum number of records to return
      schema:
        maximum: 20
        minimum: 1
        type: integer
        default: 10
    eventsSortBy:
      name: sortBy
      in: query
      description: A field within the response to sort by.
      schema:
        type: string
        default: timestamp
    eventsOrder:
      name: order
      in: query
      description: The sort order of the field ascending or descending.
      schema:
        type: string
        default: desc
        enum:
        - asc
        - desc
    callerId:
      name: X-CALLER-ID
      in: header
      description: |
        Caller ID is used to trace the origin of API calls and their associated queries executed on the database. It's an optional header parameter that can be added to an API request.
      required: false
      schema:
        type: string
        default: unknown
      example: ui:client360
  examples:
    EventsQueryRequestExample:
      summary: Events Query Request
      value:
        deviceFamily:
        - Switches and Hubs
        - Routers
        startTime: 1705348800000
        endTime: 1705435200000
        filters:
        - key: siteHierarchyId
          operator: like
          value: /f037e237-d815-47d1-b6a0-4f7a3e06462e
        - key: severity
          operator: in
          value:
          - 1
          - 2
        - logicalOperator: or
          filters:
          - key: networkDeviceName
            operator: like
            value: 9300-SJ
          - key: managementIpAddress
            operator: like
            value: 10.1.
        page:
          offset: 1
          limit: 20
          sortBy:
          - name: timestamp
            order: asc
    EventsQueryRequestWithAttributesExample:
      summary: Events Query with attributes
      value:
        deviceFamily:
        - Switches and Hubs
        - Routers
        startTime: 1705348800000
        endTime: 1705435200000
        filters:
        - key: siteHierarchyId
          operator: like
          value: /f037e237-d815-47d1-b6a0-4f7a3e06462e
        - key: severity
          operator: in
          value:
          - 1
          - 2
        - logicalOperator: or
          filters:
          - key: networkDeviceName
            operator: like
            value: 9300-SJ
          - key: managementIpAddress
            operator: like
            value: 10.1.
        attributes:
        - id
        - name
        page:
          offset: 1
          limit: 20
          sortBy:
          - name: timestamp
            order: asc
    EventsQueryRequestWithViewsExample:
      summary: Events Query with views
      value:
        deviceFamily:
        - Switches and Hubs
        - Routers
        startTime: 1705348800000
        endTime: 1705435200000
        filters:
        - key: siteHierarchyId
          operator: like
          value: /f037e237-d815-47d1-b6a0-4f7a3e06462e
        - key: severity
          operator: in
          value:
          - 1
          - 2
        - logicalOperator: or
          filters:
          - key: networkDeviceName
            operator: like
            value: 9300-SJ
          - key: managementIpAddress
            operator: like
            value: 10.1.
        views:
        - network
        page:
          offset: 1
          limit: 20
          sortBy:
          - name: timestamp
            order: asc
    EventsQueryResponseExample:
      summary: Event Query Response
      value:
        response:
        - id: LJF89YsBv89ul3gLItGG
          name: LINK:UP
          timestamp: 1700630630634
          severity: 5
          messageType: Trap
          details: TenGigabitEthernet1/0/48 LINK UP
          deviceFamily: Switches and Hubs
          networkDeviceId: 1e2917dd-653d-4422-b5ed-c7fc985e6955
          networkDeviceName: cat9300-SJ-AssurBLR-162.cisco.com
          managementIpAddress: 10.64.92.162
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/f037e237-d815-47d1-b6a0-4f7a3e06462e/c7c8d53c-18b7-4ec3-99db-a02a0de9fbde/35c151fe-6748-4d72-beec-58e098d4c0dc/
          siteHierarchy: Global/Bangalore/Airport/Floor1
        - id: AAF89YsBv89ul3gLItKK
          name: LINK:UP
          timestamp: 1700630630634
          severity: 5
          messageType: Trap
          details: TenGigabitEthernet1/0/48 LINK UP
          deviceFamily: Switches and Hubs
          networkDeviceId: 1e2917dd-653d-4422-b5ed-c7fc985e6955
          networkDeviceName: cat9300-SJ-AssurBLR-162.cisco.com
          managementIpAddress: 10.64.92.162
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/f037e237-d815-47d1-b6a0-4f7a3e06462e/c7c8d53c-18b7-4ec3-99db-a02a0de9fbde/35c151fe-6748-4d72-beec-58e098d4c0dc/
          siteHierarchy: Global/Bangalore/Airport/Floor1
        page:
          offset: 1
          limit: 20
          count: 100
          sortBy:
          - name: name
            order: asc
        version: "1.0"
    EventsQueryResponseWithAttributesExample:
      summary: Event Query with attributes
      value:
        response:
        - id: LJF89YsBv89ul3gLItGG
          name: LINK:UP
        - id: AAF89YsBv89ul3gLItKK
          name: LINK:UP
        page:
          offset: 1
          limit: 20
          count: 100
          sortBy:
          - name: name
            order: asc
        version: "1.0"
    EventsQueryWithViewsResponseExample:
      summary: Event Query with views
      value:
        response:
        - id: LJF89YsBv89ul3gLItGG
          name: LINK:UP
          switchNumber: null
          replacingDeviceSerialNumber: null
          timestamp: 1700630630634
          severity: 5
          messageType: Trap
          details: TenGigabitEthernet1/0/48 LINK UP
          deviceFamily: Switches and Hubs
          networkDeviceId: 1e2917dd-653d-4422-b5ed-c7fc985e6955
          networkDeviceName: cat9300-SJ-AssurBLR-162.cisco.com
          managementIpAddress: 10.64.92.162
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/f037e237-d815-47d1-b6a0-4f7a3e06462e/c7c8d53c-18b7-4ec3-99db-a02a0de9fbde/35c151fe-6748-4d72-beec-58e098d4c0dc/
          siteHierarchy: Global/Bangalore/Airport/Floor1
        - id: AAF89YsBv89ul3gLItKK
          name: LINK:UP
          switchNumber: null
          replacingDeviceSerialNumber: null
          timestamp: 1700630630634
          severity: 5
          messageType: Trap
          details: TenGigabitEthernet1/0/48 LINK UP
          deviceFamily: Switches and Hubs
          networkDeviceId: 1e2917dd-653d-4422-b5ed-c7fc985e6955
          networkDeviceName: cat9300-SJ-AssurBLR-162.cisco.com
          managementIpAddress: 10.64.92.162
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/f037e237-d815-47d1-b6a0-4f7a3e06462e/c7c8d53c-18b7-4ec3-99db-a02a0de9fbde/35c151fe-6748-4d72-beec-58e098d4c0dc/
          siteHierarchy: Global/Bangalore/Airport/Floor1
        page:
          offset: 1
          limit: 20
          count: 100
          sortBy:
          - name: name
            order: asc
        version: "1.0"
    EventsQueryUnifiedAPResponseExample:
      summary: Event Query - Unified AP
      value:
        response:
        - id: 5jJAAYwBS1HTYnPAXmDl
          name: Channel Change
          timestamp: 1700827992450
          messageType: Device
          details: Manual channel change by admin
          deviceFamily: Unified AP
          networkDeviceId: 6648dd6c-af54-47c0-9901-cc4c4c189a9e
          networkDeviceName: AUTO-AP-6607
          apMac: F3:94:56:8D:16:70
          wlcId: 7c0651ab-bbc2-4645-af84-bd2a32bb5bcb
          wlcName: AUTO-EWC-7801
          apSwitchName: ap_switch
          managementIpAddress: 10.10.70.38
          siteHierarchyId: /5f5107fb-352e-4cfb-ae5c-c784633ee517/23460344-1126-43cb-9af7-4126e285cca7/
          siteHierarchy: Global/Bangalore
          frequency: "2.4"
          radioChannelSlot: 0
          newRadioChannelList: "40"
        - id: 76JAAYwBS1HTYnPAXmYT
          name: Channel Change
          timestamp: 1700827992450
          messageType: Device
          details: Manual channel change by admin
          deviceFamily: Unified AP
          networkDeviceId: 6648dd6c-af54-47c0-9901-cc4c4c189a9e
          networkDeviceName: AUTO-AP-6607
          apMac: F3:94:56:8D:16:70
          wlcId: 7c0651ab-bbc2-4645-af84-bd2a32bb5bcb
          wlcName: AUTO-EWC-7801
          apSwitchName: ap_switch
          managementIpAddress: 10.10.70.38
          siteHierarchyId: /5f5107fb-352e-4cfb-ae5c-c784633ee517/23460344-1126-43cb-9af7-4126e285cca7/
          siteHierarchy: Global/Bangalore
          frequency: "2.4"
          radioChannelSlot: 0
          newRadioChannelList: "40"
        page:
          offset: 1
          limit: 20
          count: 100
          sortBy:
          - name: name
            order: asc
        version: "1.0"
    EventsQueryWiredClientResponseExample:
      summary: Event Query - Wired Client
      value:
        response:
        - id: -4u18YsBv89ul3gLfWFF
          name: Link Up
          timestamp: 1700567280360
          details: GigabitEthernet1/0/29 Link is Up
          messageType: TRAP
          severity: 5
          networkDeviceId: 677b105e-79bb-428b-b6c0-8e311845f591
          deviceFamily: Wired Client
          networkDeviceName: Branch-3-Switch
          connectedInterfaceName: GigabitEthernet1/0/29
          managementIpAddress: 10.64.92.160
          clientMac: 94:D4:69:F2:56:60
          identifier: 30.3.25.102
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/
          ipv4: 30.3.25.102
        - id: re18YsBv89ul3gLfWCC
          name: Link Up
          timestamp: 1700567280360
          details: GigabitEthernet1/0/29 Link is Up
          messageType: TRAP
          severity: 5
          networkDeviceId: 677b105e-79bb-428b-b6c0-8e311845f591
          deviceFamily: Wired Client
          networkDeviceName: Branch-3-Switch
          connectedInterfaceName: GigabitEthernet1/0/29
          managementIpAddress: 10.64.92.160
          clientMac: 94:D4:69:F2:56:60
          identifier: 30.3.25.102
          siteHierarchyId: /8a9e5e1a-9ef5-4b42-9c3d-6584e5548d03/
          ipv4: 30.3.25.102
        page:
          offset: 1
          limit: 20
          count: 100
          sortBy:
          - name: name
            order: asc
        version: "1.0"
    EventsQueryWirelessClientResponseExample:
      summary: Event Query - Wireless Client
      value:
        response:
        - id: vjEoAIwBS1HTYnPAS-vZ
          name: DHCP
          timestamp: 1700809670931
          wirelessClientEventStartTime: 1700809670931
          wirelessClientEventEndTime: 1700809671295
          details: Due to DHCP Discover/AP:AUTO-AP-0046/WLC:AUTO-EWC-4969/WLAN:MEPS
          messageType: Device Controller
          siteHierarchyId: /5f5107fb-352e-4cfb-ae5c-c784633ee517/
          siteHierarchy: /Global/
          deviceFamily: Wireless Client
          networkDeviceId: c5cc4e10-ede9-4458-a985-083b72bd6734
          networkDeviceName: AUTO-AP-0046
          apMac: F3:9B:C7:8A:0B:D0
          wlcId: ffe59203-34e5-4361-ac68-a1d5f74c58fd
          wlcName: AUTO-EWC-4969
          clientMac: 2D:90:FA:73:70:9A
          ssid: MEPS
          radioChannelSlot: 0
          frequency: "2.4"
          identifier: gosurend
          isPrivateMac: false
          resultStatus: CL_FAIL
          failureCategory: DHCP
          username: gosurend
          childEvents:
          - id: vjEoAIwBS1HTYnPAS-vZ_#_1
            name: Association Start
            timestamp: 1700809670931
            wirelessEventType: 1
            details: Client Association with AP
            reasonCode: "1"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_2
            name: Association Done
            timestamp: 1700809670995
            wirelessEventType: 2
            details: Client Association with AP
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_3
            name: Authentication Start
            timestamp: 1700809671054
            wirelessEventType: 3
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_4
            name: Authentication Done
            timestamp: 1700809671115
            wirelessEventType: 4
            details: 802.1x Full Auth
            reasonCode: "89"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_5
            name: Key Exchange
            timestamp: 1700809671175
            wirelessEventType: 5
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_6
            name: Mobility
            timestamp: 1700809671236
            wirelessEventType: 6
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: vjEoAIwBS1HTYnPAS-vZ_#_7
            name: DHCP
            timestamp: 1700809671295
            wirelessEventType: 7
            details: DHCP Discover
            reasonCode: "226"
            subreasonCode: "0"
            resultStatus: CL_FAIL
        - id: TEsAIwBS1HTYnPA4O4S
          name: Onboarding
          timestamp: 1700809682842
          wirelessClientEventStartTime: 1700809682842
          wirelessClientEventEndTime: 1700809683272
          details: AP:AUTO-AP-0046/WLC:AUTO-EWC-4969/WLAN:MEPS
          messageType: Device Controller
          siteHierarchyId: /5f5107fb-352e-4cfb-ae5c-c784633ee517/
          siteHierarchy: /Global/
          deviceFamily: Wireless Client
          networkDeviceId: c5cc4e10-ede9-4458-a985-083b72bd6734
          networkDeviceName: AUTO-AP-0046
          apMac: F3:9B:C7:8A:0B:D0
          wlcId: ffe59203-34e5-4361-ac68-a1d5f74c58fd
          wlcName: AUTO-EWC-4969
          clientMac: 2D:90:FA:73:70:9A
          ssid: MEPS
          radioChannelSlot: 0
          frequency: "2.4"
          identifier: gosurend
          isPrivateMac: false
          resultStatus: CL_SUCCESS
          username: gosurend
          childEvents:
          - id: TEsAIwBS1HTYnPA4O4S_#_1
            name: Association Start
            timestamp: 1700809670931
            wirelessEventType: 1
            details: Client Association with AP
            reasonCode: "1"
            subreasonCode: "1"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_2
            name: Association Done
            timestamp: 1700809670995
            wirelessEventType: 2
            details: Client Association with AP
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_3
            name: Authentication Start
            timestamp: 1700809671054
            wirelessEventType: 3
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_4
            name: Authentication Done
            timestamp: 1700809671115
            wirelessEventType: 4
            details: 802.1x Full Auth
            reasonCode: "89"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_5
            name: Key Exchange
            timestamp: 1700809671175
            wirelessEventType: 5
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_6
            name: Mobility
            timestamp: 1700809671236
            wirelessEventType: 6
            reasonCode: "0"
            subreasonCode: "0"
            resultStatus: CL_SUCCESS
          - id: TEsAIwBS1HTYnPA4O4S_#_7
            name: DHCP
            timestamp: 1700809671295
            wirelessEventType: 7
            details: DHCP Discover
            reasonCode: "226"
            subreasonCode: "0"
            resultStatus: CL_FAIL
        page:
          offset: 1
          limit: 20
          count: 100
          sortBy:
          - name: name
            order: asc
        version: "1.0"

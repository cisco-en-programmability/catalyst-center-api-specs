---
openapi: 3.0.0
info:
  title: Assurance Network Device documentation
  description: |-
    ### OpenAPI specification defined for the purpose of providing visibility into the Network Devices and their health in Catalyst Center
    **Relevant Concepts**
    | Term | Description |
    | -- | -- |
    | `Fabric` | A fabric is a logical subdivision of a larger network, containing its own control plane nodes for management, border nodes for routing traffic between sites, and edge nodes that connect devices to the fabric.|
  termsOfService: https://www.cisco.com/c/en/us/about/legal/cloud-and-software/end_user_license_agreement.html
  contact:
    name: Cisco TAC World Wide
    url: https://www.cisco.com/c/en/us/support/web/tsd-cisco-worldwide-contacts.html
    email: tac@cisco.com
  license:
    name: Cisco Catalyst Center License
    url: https://www.cisco.com/c/en/us/products/collateral/software/dna-software-ebook-cte.html
  version: 2.0.1
externalDocs:
  description: Catalyst Center Developer API resources
  url: https://developer.cisco.com/dnacenter/
servers:
- url: https://developer.cisco.com/data/api/v1
tags:
- name: networkDevices
  description: Operations related to Catalyst Center - Gets the Network Device details
  externalDocs:
    description: Catalyst Center Assurance user guide
    url: https://www.cisco.com/c/en/us/support/cloud-systems-management/dna-center/products-user-guide-list.html
paths:
  /networkDevices:
    get:
      tags:
      - networkDevices
      summary: Gets the Network Device details based on the provided query parameters.
      description: "Gets the Network Device details based on the provided query parameters. When there is no start and end time specified returns the latest device, by default this will use the last 30 minutes of data. details."
      operationId: readNetworkDevices
      parameters:
      - name: startTime
        in: query
        description: |
          Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        schema:
          type: integer
          format: int64
        example: 1705348800000
      - name: endTime
        in: query
        description: |
          End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        required: false
        schema:
          type: integer
          format: int64
        example: 1705435200000
      - name: limit
        in: query
        description: "Maximum number of records to return. In high-scale environments, setting the limit to 500 could lead to increased latency"
        schema:
          maximum: 500
          minimum: 1
          type: integer
          default: 300
      - name: offset
        in: query
        description: Specifies the starting point within all records returned by the API. It's one based offset. The starting value is 1.
        schema:
          minimum: 1
          type: integer
          default: 1
      - name: sortBy
        in: query
        description: A field within the response to sort by.
        schema:
          type: string
      - name: order
        in: query
        description: The sort order of the field ascending or descending.
        schema:
          type: string
          default: asc
          enum:
          - asc
          - desc
      - name: siteHierarchy
        in: query
        description: |
          The full hierarchical breakdown of the site tree starting from Global site name and ending with the specific site name. The Root site is named "Global" (Ex. `Global/AreaName/BuildingName/FloorName`)

          This field supports wildcard asterisk (`*`) character search support. E.g. `*/San*, */San, /San*`

          Examples:

          `?siteHierarchy=Global/AreaName/BuildingName/FloorName` (single siteHierarchy requested)

          `?siteHierarchy=Global/AreaName/BuildingName/FloorName&siteHierarchy=Global/AreaName2/BuildingName2/FloorName2` (multiple siteHierarchies requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: siteHierarchyId
        in: query
        description: |
          The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID. (Ex. `globalUuid/areaUuid/buildingUuid/floorUuid`)

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid `(single siteHierarchyId requested)

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid&siteHierarchyId=globalUuid/areaUuid2/buildingUuid2/floorUuid2` (multiple siteHierarchyIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: siteId
        in: query
        description: |
          The UUID of the site. (Ex. `flooruuid`)

          Examples:

          `?siteId=id1` (single id requested)

          `?siteId=id1&siteId=id2&siteId=id3` (multiple ids requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: id
        in: query
        description: |
          The list of entity Uuids. (Ex."6bef213c-19ca-4170-8375-b694e251101c")
          Examples: id=6bef213c-19ca-4170-8375-b694e251101c (single entity uuid requested)
          id=6bef213c-19ca-4170-8375-b694e251101c&id=32219612-819e-4b5e-a96b-cf22aca13dd9&id=2541e9a7-b80d-4955-8aa2-79b233318ba0 (multiple entity uuid with '&' separator)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: managementIpAddress
        in: query
        description: |
          The list of entity management IP Address. It can be either Ipv4 or Ipv6 address or combination of both(Ex. "121.1.1.10")

          This field supports wildcard (`*`) character-based search.  Ex: `*1.1*` or `1.1*` or `*1.1`

          Examples:
          managementIpAddresses=121.1.1.10
          managementIpAddresses=121.1.1.10&managementIpAddresses=172.20.1.10&managementIpAddresses=200:10&=managementIpAddresses172.20.3.4 (multiple entity IP Address with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: macAddress
        in: query
        description: "The macAddress of the network device or client\nThis field supports wildcard (`*`) character-based search. \nEx: `*AB:AB:AB*` or `AB:AB:AB*` or `*AB:AB:AB`\nExamples:\n\n`macAddress=AB:AB:AB:CD:CD:CD` (single macAddress requested)\n\n`macAddress=AB:AB:AB:CD:CD:DC&macAddress=AB:AB:AB:CD:CD:FE` (multiple macAddress requested)\n"
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: family
        in: query
        description: |
          The list of network device family names

          Examples:
          family=Switches and Hubs (single network device family name )
          family=Switches and Hubs&family=Router&family=Wireless Controller (multiple Network device family names with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Switches and Hubs
            - Routers
            - Wireless Controller
            - Unified AP
            - Wireless Sensor
            - Third Party Device
      - name: type
        in: query
        description: |
          The list of network device type This field supports wildcard (`*`) character-based search. Ex: `*9407R*` or `*9407R` or `9407R*`
          Examples:
          type=SwitchesCisco Catalyst 9407R Switch (single network device types )
          type=Cisco Catalyst 38xx stack-able ethernet switch&type=Cisco 3945 Integrated Services Router G2 (multiple Network device types with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: role
        in: query
        description: |
          The list of network device role.
          Examples:
          role=CORE, role=CORE&role=ACCESS&role=BORDER ROUTER (multiple Network device serial number with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - ACCESS
            - CORE
            - DISTRIBUTION
            - BORDER ROUTER
      - name: maintenanceMode
        in: query
        description: The device maintenanceMode status true or false
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: softwareVersion
        in: query
        description: |
          The list of network device software version This field supports wildcard (`*`) character-based search. Ex: `*17.8*` or `*17.8` or `17.8*`
          Examples:
          softwareVersion=2.3.4.0 (single network device software version )
          softwareVersion=17.9.3.23&softwareVersion=17.7.1.2&softwareVersion=*.17.7 (multiple Network device software versions with comma separatort)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: healthScore
        in: query
        description: |
          The list of entity health score categoryies

          Examples:

          healthScore=good,
          healthScore=good&healthScore=fair (multiple entity healthscore values with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - poor
            - good
            - fair
            - noHealth
      - name: view
        in: query
        description: The List of Network Device model views. Please refer to ```NetworkDeviceView``` for the supported list
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: attribute
        in: query
        description: The List of Network Device model attributes. This is helps to specificy the intrested fields in the request.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: fabricSiteId
        in: query
        description: |
          The fabric site Id or list to fabric site Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?fabricSiteId=fabricSiteUuid)

          `?fabricSiteId=fabricSiteUuid1&fabricSiteId=fabricSiteUuid2` (multiple fabricSiteIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: l2Vn
        in: query
        description: |
          The L2 Virtual Network Id or list to Virtual Network Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?l2Vn=virtualNetworkId

          `?l2Vn=virtualNetworkId1&l2Vn=virtualNetworkId2` (multiple virtualNetworkId's requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: l3Vn
        in: query
        description: |
          The L3 Virtual Network Id or list to Virtual Network Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?l3Vn=virtualNetworkId

          `?l3Vn=virtualNetworkId1&l3Vn=virtualNetworkId2` (multiple virtualNetworkId's requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: transitNetworkId
        in: query
        description: |
          The Transit Network Id or list to Transit Network Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?transitNetworkId=transitNetworkId

          `?transitNetworkId=transitNetworkuuid1&transitNetworkId=transitNetworkuuid1` (multiple transitNetworkIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: fabricRole
        in: query
        description: |
          The list of fabric device role.
          Examples:
          fabricRole=BORDER, fabricRole=BORDER&fabricRole=EDGE (multiple fabric device roles with & separator)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - BORDER
            - EDGE
            - MAP-SERVER
            - LEAF
            - SPINE
            - TRANSIT-CP
            - EXTENDED-NODE
            - WLC
            - UNIFIED-AP
      responses:
        "200":
          description: Collection of Network Devices Response model on success with aggregate attributes
          content:
            application/json':
              schema:
                $ref: '#/components/schemas/NetworkDevicesResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/count:
    get:
      tags:
      - networkDevices
      summary: Gets the total Network device counts based on the provided query parameters.
      description: "Gets the total Network device counts. When there is no start and end time specified returns the latest device total count, by default this will use the last 30 minutes of data."
      operationId: readNetworkDevicesCount
      parameters:
      - name: startTime
        in: query
        description: |
          Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        schema:
          type: integer
          format: int64
        example: 1705348800000
      - name: endTime
        in: query
        description: |
          End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        required: false
        schema:
          type: integer
          format: int64
        example: 1705435200000
      - name: id
        in: query
        description: |
          The list of entity Uuids. (Ex."6bef213c-19ca-4170-8375-b694e251101c")
          Examples: id=6bef213c-19ca-4170-8375-b694e251101c (single entity uuid requested)
          id=6bef213c-19ca-4170-8375-b694e251101c&id=32219612-819e-4b5e-a96b-cf22aca13dd9&id=2541e9a7-b80d-4955-8aa2-79b233318ba0 (multiple entity uuid with '&' separator)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: siteHierarchy
        in: query
        description: |
          The full hierarchical breakdown of the site tree starting from Global site name and ending with the specific site name. The Root site is named "Global" (Ex. `Global/AreaName/BuildingName/FloorName`)

          This field supports wildcard asterisk (`*`) character search support. E.g. `*/San*, */San, /San*`

          Examples:

          `?siteHierarchy=Global/AreaName/BuildingName/FloorName` (single siteHierarchy requested)

          `?siteHierarchy=Global/AreaName/BuildingName/FloorName&siteHierarchy=Global/AreaName2/BuildingName2/FloorName2` (multiple siteHierarchies requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: siteHierarchyId
        in: query
        description: |
          The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID. (Ex. `globalUuid/areaUuid/buildingUuid/floorUuid`)

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid `(single siteHierarchyId requested)

          `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid&siteHierarchyId=globalUuid/areaUuid2/buildingUuid2/floorUuid2` (multiple siteHierarchyIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: siteId
        in: query
        description: |
          The UUID of the site. (Ex. `flooruuid`)

          Examples:

          `?siteId=id1` (single id requested)

          `?siteId=id1&siteId=id2&siteId=id3` (multiple ids requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: managementIpAddress
        in: query
        description: |
          The list of entity management IP Address. It can be either Ipv4 or Ipv6 address or combination of both(Ex. "121.1.1.10")

          This field supports wildcard (`*`) character-based search.  Ex: `*1.1*` or `1.1*` or `*1.1`

          Examples:
          managementIpAddresses=121.1.1.10
          managementIpAddresses=121.1.1.10&managementIpAddresses=172.20.1.10&managementIpAddresses=200:10&=managementIpAddresses172.20.3.4 (multiple entity IP Address with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: macAddress
        in: query
        description: "The macAddress of the network device or client\nThis field supports wildcard (`*`) character-based search. \nEx: `*AB:AB:AB*` or `AB:AB:AB*` or `*AB:AB:AB`\nExamples:\n\n`macAddress=AB:AB:AB:CD:CD:CD` (single macAddress requested)\n\n`macAddress=AB:AB:AB:CD:CD:DC&macAddress=AB:AB:AB:CD:CD:FE` (multiple macAddress requested)\n"
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: family
        in: query
        description: |
          The list of network device family names

          Examples:
          family=Switches and Hubs (single network device family name )
          family=Switches and Hubs&family=Router&family=Wireless Controller (multiple Network device family names with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Switches and Hubs
            - Routers
            - Wireless Controller
            - Unified AP
            - Wireless Sensor
            - Third Party Device
      - name: type
        in: query
        description: |
          The list of network device type This field supports wildcard (`*`) character-based search. Ex: `*9407R*` or `*9407R` or `9407R*`
          Examples:
          type=SwitchesCisco Catalyst 9407R Switch (single network device types )
          type=Cisco Catalyst 38xx stack-able ethernet switch&type=Cisco 3945 Integrated Services Router G2 (multiple Network device types with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: role
        in: query
        description: |
          The list of network device role.
          Examples:
          role=CORE, role=CORE&role=ACCESS&role=BORDER ROUTER (multiple Network device serial number with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - ACCESS
            - CORE
            - DISTRIBUTION
            - BORDER ROUTER
      - name: maintenanceMode
        in: query
        description: The device maintenanceMode status true or false
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: softwareVersion
        in: query
        description: |
          The list of network device software version This field supports wildcard (`*`) character-based search. Ex: `*17.8*` or `*17.8` or `17.8*`
          Examples:
          softwareVersion=2.3.4.0 (single network device software version )
          softwareVersion=17.9.3.23&softwareVersion=17.7.1.2&softwareVersion=*.17.7 (multiple Network device software versions with comma separatort)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: healthScore
        in: query
        description: |
          The list of entity health score categoryies

          Examples:

          healthScore=good,
          healthScore=good&healthScore=fair (multiple entity healthscore values with & separator)
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - poor
            - good
            - fair
            - noHealth
      - name: fabricSiteId
        in: query
        description: |
          The fabric site Id or list to fabric site Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?fabricSiteId=fabricSiteUuid)

          `?fabricSiteId=fabricSiteUuid1&fabricSiteId=fabricSiteUuid2` (multiple fabricSiteIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: l2Vn
        in: query
        description: |
          The L2 Virtual Network Id or list to Virtual Network Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?l2Vn=virtualNetworkId

          `?l2Vn=virtualNetworkId1&l2Vn=virtualNetworkId2` (multiple virtualNetworkId's requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: l3Vn
        in: query
        description: |
          The L3 Virtual Network Id or list to Virtual Network Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?l3Vn=virtualNetworkId

          `?l3Vn=virtualNetworkId1&l3Vn=virtualNetworkId2` (multiple virtualNetworkId's requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: transitNetworkId
        in: query
        description: |
          The Transit Network Id or list to Transit Network Ids to filter the data

          This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

          Examples:

          `?transitNetworkId=transitNetworkId

          `?transitNetworkId=transitNetworkuuid1&transitNetworkId=transitNetworkuuid1` (multiple transitNetworkIds requested)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: fabricRole
        in: query
        description: |
          The list of fabric device role.
          Examples:
          fabricRole=BORDER, fabricRole=BORDER&fabricRole=EDGE (multiple fabric device roles with & separator)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - BORDER
            - EDGE
            - MAP-SERVER
            - LEAF
            - SPINE
            - TRANSIT-CP
            - EXTENDED-NODE
            - WLC
            - UNIFIED-AP
      responses:
        "200":
          description: Reponse object containing total count of the records after applying requested filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountIntegerResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/{id}:
    get:
      tags:
      - networkDevices
      summary: Get the device data for the given device id (Uuid)
      description: "Returns the device data for the given device Uuid in the specified start and end time range. When there is no start and end time specified returns the latest available data for the given Id, by default this will use the last 30 minutes of data."
      operationId: readNetworkDeviceById
      parameters:
      - name: id
        in: path
        description: The device Uuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: startTime
        in: query
        description: |
          Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        schema:
          type: integer
          format: int64
        example: 1705348800000
      - name: endTime
        in: query
        description: |
          End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
        required: false
        schema:
          type: integer
          format: int64
        example: 1705435200000
      - name: view
        in: query
        description: The List of Network Device model views. Please refer to ```NetworkDeviceView``` for the supported list
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: attribute
        in: query
        description: The List of Network Device model attributes. This is helps to specificy the intrested fields in the request.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Collection of Network Devices Response model on success with aggregate attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/{id}/trendAnalytics:
    post:
      tags:
      - networkDevices
      summary: The Trend analytcis data for the network Device in the specified time range
      description: |
        The Trend analytcis data for the network Device in the specified time range. The data is grouped based on the trend time Interval, other input parameters like attributes and aggregate attributes. The default time interval range is 1 hour when start and endTime is not provided.

        **How the filtering behavior works**

        The filters field in each post body can be used in numerous ways:

        Each filter in the list of filters will applied ''together''

        In the example below, this would request filtering the cpu data by the ``switch 1`` cpu indexes.

        ```
        "filters": [
            {
              "key": "cpuName",
              "operator": "like",
              "value": "Switch 1"
            }
        ]
      operationId: readDeviceTrendAnalytics
      parameters:
      - name: id
        in: path
        description: The device Uuid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: Payload to query trend data for a Network Device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDeviceTrendRequest'
            examples:
              TrendIdAnalyticsRequestExample:
                $ref: '#/components/examples/TrendIdAnalyticsRequestExample'
              TrendIdAnalyticsPoERequestExample:
                $ref: '#/components/examples/TrendIdAnalyticsPoERequestExample'
        required: true
      responses:
        "200":
          description: Collection of a network device Trend data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDeviceTrendGroupResponse'
              examples:
                TrendIdAnalyticsResponseExample:
                  $ref: '#/components/examples/TrendIdAnalyticsResponseExample'
                TrendIdAnalyticsPoEResponseExample:
                  $ref: '#/components/examples/TrendIdAnalyticsPoEResponseExample'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/query:
    post:
      tags:
      - networkDevices
      summary: Gets the list of Network Devices based on the provided complex filters and aggregation functions.
      description: "Gets the list of Network Devices based on the provided complex filters and aggregation functions. When there is no start and end time specified returns the latest device, by default this will use the last 30 minutes of data.\n\n**How the filtering behavior works**\n\nThe filters field in each post body can be used in numerous ways:\n\nEach filter in the list of filters will applied ''together''\n\nIn the example below, this would request filtering to retrieve Switches and Hubs device family `and` macAddress either 00:1E:49:81:6C:FF or 34:1E:49:81:6C:F0.\n```\n\"filters\": [\n    {\n      \"key\": \"deviceFamily\",\n      \"operator\": \"eq\",\n      \"value\": \"Switches and Hubs\"\n    },\n    {\n      \"key\": \"macAddress\",\n      \"operator\": \"in\",\n      \"value\": [\n        \"00:1E:49:81:6C:FF\",\n        \"34:1E:49:81:6C:F0\"\n      ]\n    }\n]\n```\n\nEach filter object can contrastingly utilize its `logical operator` to provide nested filtering functionality.\n\nIn the example below you can see a logical \"OR\" filter being applied using the nested filtering functionality:\n\nThe primary filter object does not have its 'key', 'value', or 'operator' fields populated. Only the 'logicalOperator' field is populated, to indicate the filters within the nested filters list are to be logically conjoined.\n\n```\n\"filters\": [\n    {\n      \"logicalOperator\": \"or\",\n      \"filters\": [\n        {\n          \"key\": \"siteHierarchy\",\n          \"operator\": \"like\",\n          \"value\": \"Global/Paris*\"\n        },\n        {\n          \"key\": \"siteHierarchy\",\n          \"operator\": \"eq\",\n          \"value\": \"Eiffel Tower\"\n        }\n      ]\n    }\n]\n```\nPlease refer to the 'API Support Documentation' section to understand which fields and filters are supported.\n\n**How Pagination Works**\n\n'limit' field, is the total number of records you want to retrieve.\n\n'offset' field, is the record you want to start on.\n\nIf you have a limit of 100, each page would be viewed as 100 elements. So starting with an offset of 1, means look at the first page of data. Starting with an offset of 2, means start on page 2 (starting with the 101st element). \n\n'sortBy' field is a list, but only single field sorting is supported on this API.\n\nwith 'asc' (ascending), or 'desc' (descending) ordering\n"
      operationId: queryNetworkDevicesWithFilter
      requestBody:
        $ref: '#/components/requestBodies/NetworkDevicesQueryRequest'
      responses:
        "200":
          description: Collection of Network Devices Response model on success with aggregate attributes
          content:
            application/json':
              schema:
                $ref: '#/components/schemas/NetworkDevicesResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/query/count:
    post:
      tags:
      - networkDevices
      summary: Gets the total number Network Devices based on the provided complex filters and aggregation functions.
      description: |
        Gets the total number Network Devices based on the provided complex filters and aggregation functions. When there is no start and end time specified returns the latest device, by default this will use the last 30 minutes of data.
      operationId: queryNetworkDevicesCountWithFilter
      requestBody:
        description: Payload to query Network Device
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDevicesQueryRequest'
            examples:
              DeviceCountRequestExample:
                $ref: '#/components/examples/DeviceCountRequestExample'
        required: true
      responses:
        "200":
          description: Reponse object containing total count of the records after applying requested filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountIntegerResponse'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/summaryAnalytics:
    post:
      tags:
      - networkDevices
      summary: Gets the summary analytics data related to network devices.
      description: "Gets the summary analytics data related to network devices based on the provided input data. This endpoint helps to obtain the consolidated insights into the performance and status of the monitored network devices.\n\n**The input payload contains the following fields,**\n|Field Name | Description |\n| --- | --- |\n| `startTime` | The start time indicates the point from which the API retrieves the dataset associated with the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest |\n| `endTime` | The end time signifies the limit until which the API retrieves the dataset associated with the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest |\n| `groupBy` | The groupby defines the criteria for grouping the data based on specific attributes. The available group by fields correspond to the attributes listed. For a comprehensive list of supported attributes, please refer to the ``NetworkDevicesAnalyticsGroupBy`` model|\n| `attributes` | The attribute is useful for obtaining one or more field data in addition to the aggregated data within the specified start and end time range. The supported attributes are listed in ` NetworkDevicesAnalyticsAttributes` model|\n| `aggregateAttributes` | The aggregateAttributes denotes the attribute name(s) on which the aggregate functions is to be applied during data querying. The supported attribute names are listed in `NetworkDevicesAnalyticsAggregateAttributes` model  |\n|`filters`| The filters used to  define one or more conditions and the data that meets these conditions will be considered during the aggregation calculation. The supported list of filters defined in `NetworkDevicesAnalyticsFilters`|\n|`page`| The page includes **limit, offset**, and **sortBy** fields. Limit indicates the number of records to retrieve per page, offset signifies the starting position of the data, and sortBy specifies the attribute name, order, and function if sorting by the aggregated field is desired.|\n**Example 1**:The JSON input below represents a request body used to retrieve maximum CPU and memory utilization, along with average AP count data, grouped by device family and role, specifically from the Paris site within the specified time range.\n  \n   Although the ApCount metric is applicable to Wireless LAN Controller (WLC) devices, all devices associated with the Paris site will be considered. However, specific filter conditions may be defined to isolate WLC devices for accurate calculations of the average ApCount..\n   \n   The response will be sorted based on the maximum CPU Utilization value.\n```\n  {\n    \"startTime\": 1705348800000,\n    \"endTime\": 1705435200000,\n    \"groupBy\": [\"family\", \"role\"],\n    \"attributes\": [],\n    \"filters\": [\n      {\n        \"key\": \"siteHierarchy\",\n        \"operator\": \"eq\",\n        \"value\": \"Global/Paris\"\n      }\n     ],\n    \"aggregateAttributes\": [\n      {\n        \"name\": \"cpuUtilization\",\n        \"function\": \"max\"\n      },\n      {\n        \"name\": \"memory\",\n        \"function\": \"max\"\n      },\n      {\n        \"name\": \"apCount\",\n        \"function\": \"avg\"\n      }\n    ],\n    \"page\": {\n      \"limit\": 5,\n      \"offset\": 1,\n      \"sortBy\": [\n        {\n          \"name\": \"cpuUtilization\",\n          \"order\": \"desc\",\n          \"function\": \"max\"\n        }\n      ]\n    }\n  }\n```\n**Response:**<br> The below JSON response payload is grouped by device Family & Role and it is available under the ``groups`` section. The group Id is constructed based on the requested groupBy fields name & value.  \n```\n {\n  \"response\": {\n    \"attributes\": [ ],\n    \"aggregateAttributes\": [],\n    \"groups\": [\n      {\n        \"id\": \"family=Switches and hubs&&role=ACCESS\",\n        \"attributes\": [\n          {\n            \"name\": \"family\",\n            \"value\": \"Switches and hubs\"\n          },\n          {\n            \"name\": \"role\",\n            \"value\": \"ACCESS\"\n          }\n        ],\n        \"aggregateAttributes\": [\n          {\n            \"name\": \"cpuUtilization\",\n            \"function\": \"max\",\n            \"value\" : 89.10\n          },\n          {\n            \"name\": \"memory\",\n            \"function\": \"max\",\n            \"value\" : 77.22\n          },\n          {\n            \"name\": \"apCount\",\n            \"function\": \"avg\",\n            \"value\" : 56.78\n          }\n        ]\n      },\n      {\n        \"id\": \"family=Wireless Controller_role=ACCESS\",\n        \"attributes\": [\n          {\n            \"name\": \"family\",\n            \"value\": \"Wireless Controller\"\n          },\n          {\n            \"name\": \"role\",\n            \"value\": \"ACCESS\"\n          }\n        ],\n        \"aggregateAttributes\": [\n          {\n            \"name\": \"cpuUtilization\",\n            \"function\": \"max\",\n            \"value\": 67.34\n          },\n          {\n            \"name\": \"memory\",\n            \"function\": \"max\",\n            \"value\": 33.87\n          },\n          {\n            \"name\": \"apCount\",\n            \"function\": \"max\",\n            \"value\": 100\n          }\n        ]\n      }\n    ]\n  },\n  \"page\": {\n    \"limit\": 5,\n    \"offset\": 1,\n    \"count\": 2,\n    \"sortBy\": [\n      {\n        \"name\": \"cpuUtilization\",\n        \"order\": \"desc\",\n        \"function\": \"max\"\n      }\n    ]\n  },\n  \"version\": \"1.0\"\n}\n```\n**Example 2 :** </b>The below example JSON input represents a request body for retrieving the average Memory utilization for individual devices along with IpAddress, name, macAddress in the given time range.\n\n   The response will be sorted by the device ``name`` in ``Descending`` order.\n   \n```\n  {\n    \"startTime\": 1705348800000,\n    \"endTime\": 1705435200000,\n    \"groupBy\": [\"macAddress\"],\n    \"attributes\": [\"name\", \"ipAddress\"],\n    \"filters\": [ ],\n    \"aggregateAttributes\": [\n      {\n        \"name\": \"memory\",\n        \"function\": \"avg\"   \n      }\n    ],\n    \"page\": {\n      \"limit\": 1,\n      \"offset\": 1,\n      \"sortBy\": [\n        {\n          \"name\": \"name\",\n          \"order\": \"desc\"\n        }\n      ]\n    }\n  }\n```\n **Response**: The below JSON response payload is grouped by device macAddress. The group Id is constructed based on the requested groupBy fields name & value, here it is \"macAddress=00:1E:49:81:6C:FF\". The data is sorted based on the \"name\" field, arranged in descending order.\n\n```\n  {\n  \"response\": {\n    \"attributes\": [ ],\n    \"aggregateAttributes\": [],\n    \"groups\": [\n      {\n        \"id\": \"macAddress=00:1E:49:81:6C:FF\",\n        \"attributes\": [\n          {\n            \"name\": \"macAddress\",\n            \"value\": \"00:1E:49:81:6C:FF\"\n          },\n          {\n            \"name\": \"name\",\n            \"value\": \"DummyTestDevice1\"\n          },\n          {\n            \"name\": \"ipAddress\",\n            \"value\": \"10.11.11.12\"\n          }\n        ],\n        \"aggregateAttributes\": [\n          {\n            \"name\": \"memory\",\n            \"function\": \"avg\",\n            \"value\": 55.12\n          }\n        ]\n      },\n      {\n        \"id\": \"macAddress=BE:3E:94:18:7E:BC\",\n        \"attributes\": [\n          {\n            \"name\": \"macAddress\",\n            \"value\": \"BE:3E:94:18:7E:BC\"\n          },\n          {\n            \"name\": \"name\",\n            \"value\": \"TestDeviceName\"\n          },\n          {\n            \"name\": \"ipAddress\",\n            \"value\": \"172.20.33.22\"\n          }\n        ],\n        \"aggregateAttributes\": [\n          {\n            \"name\": \"memory\",\n            \"function\": \"avg\",\n            \"value\": 75.12\n          }\n        ]\n      } \n    ]\n  },\n  \"page\": {\n    \"limit\": 5,\n    \"offset\": 1,\n    \"count\": 2,\n    \"sortBy\": [\n      {\n        \"name\": \"name\",\n        \"order\": \"desc\"\n      }\n    ]\n  },\n  \"version\": \"1.0\"\n}\n```\n"
      operationId: queryNetworkDevicesSummaryAnalytics
      requestBody:
        description: Payload to query summary Analytics Network Device data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDevicesSummaryRequest'
            examples:
              GroupByRequestExample:
                $ref: '#/components/examples/SummaryAnalyticsWithGroupByRequestExample'
              WithoutGroupByRequestExample:
                $ref: '#/components/examples/SummaryAnalyticsWithoutGroupByRequestExample'
        required: true
      responses:
        "200":
          description: |
            List of Network device summary data for the given filter criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevicesAnalyticsResponse'
              examples:
                WithGroupByResponseExample:
                  $ref: '#/components/examples/SummaryAnalyticsWithGroupByResponseExample'
                WithoutGroupByResponseExample:
                  $ref: '#/components/examples/SummaryAnalyticsWithoutGroupByResponseExample'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/topNAnalytics:
    post:
      tags:
      - networkDevices
      summary: Gets the Top-N analytics data.
      description: "Gets the Top N analytics data related to network devices based on the provided input data. This endpoint is valuabe to obtain the top-performing or most impacted network devices.<p> The required properties for this API are ``topN`` and ``groupBy`` </p>\n\n**The input payload contains the following fields,**\n|Field Name | Description |\n| --- | --- |\n| `startTime` | The start time indicates the point from which the API retrieves the dataset associated with the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest |\n| `endTime` | The end time signifies the limit until which the API retrieves the dataset associated with the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest |\n| `topN` | The topN indicates the total number of records to retrive. This is a required input property for this Top-N analytcis endpoint|\n| `groupBy` | The groupby defines the criteria for grouping the data based on specific attributes. The available group by fields correspond to the attributes listed. For a comprehensive list of supported attributes, please refer to the `NetworkDevicesAnalyticsGroupBy` model.|\n| `attributes` | The attribute is useful for obtaining one or more field data in addition to the aggregated data within the specified start and end time range. The supported attributes are listed in ` NetworkDevicesAnalyticsAttributes` model|\n| `aggregateAttributes` | The aggregateAttributes denotes the attribute name(s) on which the aggregate functions is to be applied during data querying. The supported attribute names are listed in `NetworkDevicesAnalyticsAggregateAttributes` model|\n|`filters`| The filters used to  define one or more conditions and the data that meets these conditions will be considered during the aggregation calculation. The supported list of filters defined in `NetworkDevicesAnalyticsFilters` model|\n|`page`| The page includes **limit, offset**, and **sortBy** fields. Limit indicates the number of records to retrieve per page, offset signifies the starting position of the data, and sortBy specifies the attribute name, order, and function if sorting by the aggregated field is desired.|\n**Example 1**: The below JSON input represents a request body for retrieving Top-N client count AP in the Paris site for the given time range.\n \n```\n  {\n    \"startTime\": 1705348800000,\n    \"endTime\": 1705435200000,\n    \"groupBy\": [\"macAddress\"],\n    \"topN\" : 10\n    \"attributes\": [\"name\", \"ipAddress\"],\n    \"aggregateAttributes\": [\n      {\n        \"name\": \"apClientCount\",\n        \"function\": \"max\"\n      }\n    ],\n    \"filters\": [\n      {\n        \"key\": \"siteHierarchy\",\n        \"operator\": \"eq\",\n        \"value\": \"Global/Paris\"\n      }\n     ],\n    \"page\": {\n      \"limit\": 2,\n      \"offset\": 1,\n      \"sortBy\": [\n        {\n          \"name\": \"apClientCount\",\n          \"order\": \"desc\",\n          \"function\": \"max\"\n        }\n      ]\n    }\n  }\n```\n**Response**: The below JSON response payload is grouped by device macAddress. The group Id is constructed based on the requested groupBy fields name & value, here it is \"macAddress=BE:3E:94:18:7E:BC\". The data is sorted based on the \"apClientCount\" field, arranged in descending order.\n```\n  {\n    \"response\": [\n      {\n        \"groups\": [\n          {\n            \"id\": \"macAddress=00:1E:49:81:6C:FF\",\n            \"attributes\": [\n              {\n                \"name\": \"macAddress\",\n                \"value\": \"00:1E:49:81:6C:FF\"\n              },\n              {\n                \"name\": \"name\",\n                \"value\": \"TestDeviceName\"\n              },\n              {\n                \"name\": \"managedIpAddress\",\n                \"value\": \"10.10.10.10\"\n              }\n            ],\n            \"aggregateAttributes\": [\n              {\n                \"name\": \"apClientCount\",\n                \"function\": \"max\",\n                \"value\": 1000\n              }\n            ]\n          },\n          {\n            \"id\": \"macAddress=BE:3E:94:18:7E:BC\",\n            \"attributes\": [\n              {\n                \"name\": \"macAddress\",\n                \"value\": \"BE:3E:94:18:7E:BC\"\n              },\n              {\n                \"name\": \"name\",\n                \"value\": \"DummyTestDeviceName\"\n              },\n              {\n                \"name\": \"managedIpAddress\",\n                \"value\": \"172.20.55.22\"\n              }\n            ],\n            \"aggregateAttributes\": [\n              {\n                \"name\": \"apClientCount\",\n                \"function\": \"max\",\n                \"value\": 900\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"page\": {\n      \"limit\": 2,\n      \"offset\": 1,\n      \"count\": 150,\n      \"sortBy\": [\n        {\n          \"name\": \"apClientCount\",\n          \"order\": \"desc\",\n          \"function\": \"max\"\n        }\n      ]\n    },\n    \"version\": \"1.0\"\n  }\n```\n"
      operationId: queryNetworkDevicesTopNAnalytics
      requestBody:
        description: Payload to query Top-N Analytics Network Device data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDevicesTopNRequest'
            examples:
              TopNDeviceAnalyticsGroupByRequestExample:
                $ref: '#/components/examples/TopNDeviceAnalyticsRequestExamples'
        required: true
      responses:
        "200":
          description: The TopN analytics response payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevicesTopNAnalyticsResponse'
              examples:
                TopNDeviceAnalyticsGroupByResponseExample:
                  $ref: '#/components/examples/TopNDeviceAnalyticsResponseExamples'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
  /networkDevices/trendAnalytics:
    post:
      tags:
      - networkDevices
      summary: Gets the Trend analytics data.
      description: "Gets the Trend analytics Network device data for the given time range. The data will be grouped based on the given trend time Interval. The required property for this API is `trendInterval`\n\n**The input payload contains the following fields,**\n|Field Name | Description |\n| --- | --- |\n| `startTime` | The start time indicates the point from which the API retrieves the dataset associated with the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is endTime minus 1 hour |\n| `endTime` | The end time signifies the limit until which the API retrieves the dataset associated with the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive & the default is latest |\n| `trendInterval` | The time window for aggregating metrics can be set to intervals of 5 minutes, 10 minutes, 30 minutes, 1 hour, 1 day, or 7 days. If the start and end time range exceeds 1 day, the minimum expected interval value is 1 hour or higher. The default polling or data collection interval for switches and router family devices is 10 minutes. Therefore, even if a 5-minute interval is specified in the input, the data will be available for intervals of 10 minutes. This is a required property for this API|\n| `groupBy` | The groupby defines the criteria for grouping the data based on specific attributes. The available group by fields correspond to the attributes listed. For a comprehensive list of supported attributes, please refer to the `NetworkDevicesAnalyticsGroupBy` model. |\n| `attributes` | The attribute is useful for obtaining one or more field data in addition to the aggregated data within the specified start and end time range. The supported attributes are listed in  ` NetworkDevicesAnalyticsAttributes` model|\n| `aggregateAttributes` | The aggregateAttributes denotes the attribute name(s) on which the aggregate functions is to be applied during data querying. The supported attribute names are listed in `NetworkDevicesAnalyticsAggregateAttributes` model  |\n|`filters`| The filters used to  define one or more conditions and the data that meets these conditions will be considered during the aggregation calculation. The supported list of fiters defined in `NetworkDevicesAnalyticsFilters` model|\n|`page`| The page includes **limit, offset**, and **sortBy** fields. Limit indicates the number of records to retrieve per page, offset signifies the starting position of the data, and sortBy specifies the attribute name, order, and function if sorting by the aggregated field is desired..|\n**Example 1**: The below JSON input  serves as a request body to fetch maximum CPU and healthScore data at 5-minute intervals across devices in the Milpitas site within a specified time range. <br>\n\n  By default, the data is grouped by timestamp, with sorting options available in ascending or descending order based on the timestamp.\n \n```\n  {\n    \"startTime\": 1705348800000,\n    \"endTime\": 1705435200000,\n    \"groupBy\": [],\n    \"trendInterval\" : 5MIN\n    \"attributes\": [\"healthScore],\n    \"filters\": [\n      {\n        \"key\": \"siteHierarchy\",\n        \"operator\": \"eq\",\n        \"value\": \"Global/Milpitas\"\n      }\n     ],\n    \"aggregateAttributes\": [\n      {\n        \"name\": \"cpuUtilization\",\n        \"function\": \"max\"\n      }\n    ],\n    \"page\": {\n      \"limit\": 2,\n      \"offset\": 1,\n      \"timestampOrder\": \"desc\"\n    }\n  }\n```\n**Response**: The JSON response payload below provides the health score for the Milpitas site, along with the maximum cpuUtilization value for every 5-minute interval within the specified time range. With a limit set to 2, the payload includes data points for only two timestamps.\n```\n  {\n    \"response\": [\n      {\n        \"timestamp\": 1705435200000\n        \"attributes\": [\n          {\n            \"name\": \"healthScore\",\n            \"value\": 100\n          }\n        ],\n        \"aggregateAttributes\": [\n          {\n            \"name\": \"cpuUtilization\",\n            \"function\": \"max\",\n            \"value\": 15.420\n          }\n        ],\n        \"groups\": []\n      },\n      {\n        \"timestamp\": 1705434900000\n        \"attributes\": [\n          {\n            \"name\": \"healthScore\",\n            \"value\": 15\n          }\n        ],\n        \"aggregateAttributes\": [\n          {\n            \"name\": \"cpuUtilization\",\n            \"function\": \"max\",\n             \"value\": 79.232\n          }\n        ],\n        \"groups\": []\n      }\n    ],\n    \"page\": {\n      \"limit\": 2,\n      \"offset\": 1,\n      \"count\": 250,\n      \"timestampOrder\": \"desc\"\n    },\n    \"version\": \"1.0\"\n  }\n```\n"
      operationId: queryNetworkDevicesTrendAnalytics
      requestBody:
        description: Payload to query Trend Analytics Network Device data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDevicesTrendRequest'
            examples:
              RequestWithoutGroupByExample:
                $ref: '#/components/examples/TrendAnalyticsWithoutGroupByRequestExample'
              RequestWithGroupByExample:
                $ref: '#/components/examples/TrendAnalyticsWithGroupByRequestExample'
              RequestWithPoeExample:
                $ref: '#/components/examples/TrendAnalyticsWithPoeRequestExample'
        required: true
      responses:
        "200":
          description: TheNetwork Device data Trend Analytics response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevicesTrendResponse'
              examples:
                ResponseWithoutGroupByExample:
                  $ref: '#/components/examples/TrendAnalyticsWithoutGroupByResponseExample'
                ResponseWithGroupByExample:
                  $ref: '#/components/examples/TrendAnalyticsWithGroupByResponseExample'
                ResponseWithPoeExample:
                  $ref: '#/components/examples/TrendAnalyticsWithPoeResponseExample'
        "400":
          description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: The server could not fulfill the request due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "1XX":
          description: Informational Responses - The server received the request and sent an informational response.
        "2XX":
          description: "Successful Responses - The server received the client request, understood it, and accepted it."
        "3XX":
          description: Redirection Messages - The client must take additional action to complete the request.
        "4XX":
          description: Client Error Responses - The client request caused the error.
        "5XX":
          description: Server Error Responses - The server failed to fulfill the request.
        default:
          description: Unexpected Error
components:
  schemas:
    NetworkDevice:
      type: object
      properties:
        apDetails:
          $ref: '#/components/schemas/ApConfigurationDetails'
        metricsDetails:
          $ref: '#/components/schemas/MetricsDetails'
        fabricDetails:
          $ref: '#/components/schemas/FabricDetails'
        switchPoeDetails:
          $ref: '#/components/schemas/SwitchPoEDetails'
        fabricMetricsDetails:
          $ref: '#/components/schemas/FabricHealth'
        licenseDetails:
          $ref: '#/components/schemas/LicenseDetails'
      description: Network Devices details with health and configuration
      allOf:
      - $ref: '#/components/schemas/DeviceBasic'
      - $ref: '#/components/schemas/CommonDetails'
    DeviceBasic:
      type: object
      properties:
        id:
          type: string
          description: The network device Uuid
          format: uuid
          example: c5330f8b-b65c-45a7-8c10-9f9dec7dcdd1
        name:
          type: string
          description: The name of the Network Device
          example: TestDeviceName
        managementIpAddress:
          type: string
          description: The Network device managed Ip Address
          example: 10.5.1.20
    CommonDetails:
      type: object
      properties:
        platformId:
          type: string
          description: The Network Device Platform Identifier
          example: C9800-CL-K9
        deviceFamily:
          type: string
          description: The family name of the Network Device
          example: Switches and Hubs
        serialNumber:
          type: string
          description: The serial number of the Network Device
          example: 9ITSHNLJE7W
        macAddress:
          type: string
          description: The Network Device mac address
          example: 00:1E:49:81:6C:FF
        deviceSeries:
          type: string
          description: The series name of the Network Device
          example: Cisco Catalyst 9800 Wireless Controllers for Cloud
        softwareVersion:
          type: string
          description: The Network Device Software version details
          example: 17.10.20
        productVendor:
          type: string
          description: The Network Device vendor name
          example: cisco
        deviceRole:
          type: string
          description: The device role. Based on the connected other node it will be determined.
          example: Access
        deviceType:
          type: string
          description: The device Type. This list of types can be get from the api `intent/networkDeviceProductNames` productName field.
          example: Cisco Catalyst 9800-CL Wireless Controller for Cloud
        communicationState:
          type: string
          description: The communication status between the Catalyst Center and Network Device
          example: REACHABLE
        collectionStatus:
          type: string
          description: The data collection status of the Network Device
          example: SUCCESS
        haStatus:
          type: string
          description: The Network Device HA Status
          example: Non-redundant
        lastBootTime:
          type: integer
          description: The Device last boot UTC timestamp in millisecond format
          format: int64
          example: 1701397883468
        siteHierarchyId:
          type: string
          description: The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID.
          example: /68a750dc-0fa1-421c-953d-1d2e08132631/0d484b0b-9d89-4ee9-b686-8fbcb9765d70/f8fac257-f3a1-4ea2-8eb6-c5cd1c31da25
        siteHierarchy:
          type: string
          description: The full hierarchy breakdown of the site tree starting from Global site and ending with the specific site name.
          example: /Global/Milpitas
        siteId:
          type: string
          description: The Network device associated Site uuid
          example: f8fac257-f3a1-4ea2-8eb6-c5cd1c31da25
        deviceGroupHierarchyId:
          type: string
          description: The device group site hierarchy UUID
          example: /bdcfc88c-4dd2-4126-a764-c5cb2d94b36f/25e0b3b6-ae76-4a5f-b41c-b4e36dd35222/
        tagNames:
          type: array
          example:
          - TestTag1
          - TestTag123
          items:
            type: string
            description: list of tag names assigned to the network device
        stackType:
          type: string
          description: The Network Device stack typ
          example: BACKSTACK
        osType:
          type: string
          description: OS type
          example: IOS-XE
        ringStatus:
          type: boolean
          description: Network Device's ring status
          example: true
        maintenanceModeEnabled:
          type: boolean
          description: Network Device management mode status
          example: false
        upTime:
          type: integer
          description: The device Up time in UTC seconds format
          format: int64
          example: 1706328900
        ipv4Address:
          type: string
          description: The network device Ipv4 Address
          example: 10.1.2.2
        ipv6Address:
          type: string
          description: The network device Ipv6 Address
          example: 2001::10
        redundancyMode:
          type: string
          description: The Device redundancy mode
          example: SSO
        featureFlagList:
          type: array
          example:
          - AP_OOB_IMGDWNLD_1
          - CPU_MEM_RADIO_MONITOR_1
          items:
            type: string
        haLastResetReason:
          type: string
          description: The last HA reset reason of the device
          example: Manual reset
        redundancyPeerStateDerived:
          type: string
          description: The details about the device redundancy Peer State Derived
          example: STANDBY HOT
        redundancyPeerState:
          type: string
          description: The device redundancy PeerState
          example: STANDBY HOT
        redundancyStateDerived:
          type: string
          description: The details about the redundancy status derived or not
          example: ACTIVE
        redundancyState:
          type: string
          description: The device redundancy State
          example: ACTIVE
        wiredClientCount:
          type: integer
          description: The number of connected wired client
          format: int64
          example: 10
        wirelessClientCount:
          type: integer
          description: The number of connected wireless client
          format: int64
          example: 50
        portCount:
          type: integer
          description: The total number of physical and virtual port counts
          format: int64
          example: 100
        physicalPortCount:
          type: integer
          description: The total number of physical port counts
          format: int64
          example: 100
        virtualPortCount:
          type: integer
          description: The total number of virtual port counts
          format: int64
          example: 100
        clientCount:
          type: integer
          description: The number of associated client count
          format: int64
          example: 15000
    MetricsDetails:
      type: object
      properties:
        overallHealthScore:
          type: integer
          description: The overall device health score
          example: 10
        cpuUtilization:
          type: number
          description: The CPU utilization value
          example: 25.4
        cpuScore:
          type: integer
          description: The CPU score
          example: 10
        memoryUtilization:
          type: number
          description: The Memory utilization value
          example: 56.7
        memoryScore:
          type: integer
          description: The Memory score
          example: 1
        avgTemperature:
          type: number
          description: The average Temperature value across the sensor
          example: 62.91
        maxTemperature:
          type: number
          description: The maximum Temperature value across the sensor
          example: 71.13
        discardScore:
          type: integer
          description: The interface discard score
          example: 8
        discardInterfaces:
          type: array
          example:
          - GigabitEthernet1/0/1
          - GigabitEthernet1/0/2
          items:
            type: string
            description: The list of interfaces violating the discard threshold
        errorScore:
          type: integer
          description: "The interface error score. if all the interfaces having issue score will be 1, partial 8 , all good will be 10"
          example: 1
        errorInterfaces:
          type: array
          example:
          - GigabitEthernet2/0/1
          - GigabitEthernet2/0/2
          items:
            type: string
            description: The list of interfaces violating the error threshold
        interDeviceLinkScore:
          type: integer
          description: "The interface error score. if all the interfaces having issue score will be 1, partial 8 , all good will be 10"
          example: 1
        interDeviceConnectedDownInterfaces:
          type: array
          example:
          - GigabitEthernet1/0/1
          - GigabitEthernet1/0/2
          items:
            type: string
            description: The list of inter device connected down interfaces
        linkUtilizationScore:
          type: integer
          description: The interface utilization score
          example: 1
        highLinkUtilizationInterfaces:
          type: array
          example:
          - GigabitEthernet1/0/1
          - GigabitEthernet1/0/2
          items:
            type: string
            description: The list of interface utilization is higher than the threshold
        freeTimerScore:
          type: integer
          description: The interface utilization score
          example: 1
        freeTimer:
          type: number
          description: The free timer value in percentage
          example: 99.93
        packetPoolScore:
          type: integer
          description: The packet pool score
          example: 1
        packetPool:
          type: integer
          description: The packed pool value
          format: int64
          example: 409428
        freeMemoryBufferScore:
          type: integer
          description: The interface utilization score
          example: 1
        freeMemoryBuffer:
          type: number
          description: The free memory buffer values in percentage
        wqePoolScore:
          type: integer
          description: The interface utilization score
          example: 1
        wqePool:
          type: integer
          description: WQE pool value
          format: int64
          example: 409503
        apCount:
          type: integer
          description: The number of AP associated to this Wireless Controller
          format: int64
          example: 5000
        noiseScore:
          type: integer
          description: The noise score across the radios
          example: 1
        utilizationScore:
          type: integer
          description: The utilization Score across the radios
          example: 10
        interferenceScore:
          type: integer
          description: The interference Score across the radios
          example: 5
        airQualityScore:
          type: integer
          description: The Air Quality Score across the radios
          example: 10
    ApConfigurationDetails:
      type: object
      properties:
        connectedWlcName:
          type: string
          description: The name of the WLC to which AP is connected
          example: Testbed24WclName
        connectedWlcUuid:
          type: string
          description: The UUID of the WLC to which AP is connected
          example: d2245637-668b-4d3f-b104-5dad478af0d7
        policyTagName:
          type: string
          description: The AP device policy name
          example: default-policy-tag
        apOperationalState:
          type: string
          description: "The operational state of the AP. Mapping details are below, \n|Constant | Description |\n| --- | --- |\n| `1` | AP_OPER_STATE_DOWN |\n| `2` | AP_OPER_STATE_UP |\n| `3` | AP_OPER_STATE_DEREGISTERED |\n| `4` | AP_OPER_STATE_REGISTERED |\n| `5` | AP_OPER_STATE_DOWNLOADING_IMAGE |\n"
          example: Registered
          enum:
          - Down
          - Up
          - DEREGISTERED
          - Registered
          - Downloading Image
        powerSaveMode:
          type: string
          description: "The operational state of the Power Save feature on AP. Mapping details are below, \n|Constant | Description |\n| --- | --- |\n| `1` | AP_POWER_SAVE_MODE_DISABLED |\n| `2` | AP_POWER_SAVE_MODE_ENABLED |\n"
          example: Enabled
          enum:
          - Disabled
          - Enabled
        operationalMode:
          type: string
          description: The AP operational mode
          example: FlexConnect
          enum:
          - Local
          - Monitor
          - FlexConnect
          - Rogue Detector
          - Sniffer
          - Bridge
          - SE-Connect
          - Flex+Bridge
          - FlexConnect1
          - Sensor
          - Invalid
        resetReason:
          type: string
          description: The last device reset reason
          example: Image Install
        protocol:
          type: string
          description: "The highest 802.11 Protocol supported by the AP. Mapping details are below, \n|Constant | Description |\n| --- | --- |\n| `-1` | PROTOCOL_UNKNOWN |\n| `1` | PROTOCOL_LEGACY |\n| `2` | PROTOCOL_11N |\n| `3` | PROTOCOL_11AC |\n| `4` | PROTOCOL_11AX |\n| `5` | PROTOCOL_11AX_6E |\n"
          example: 11AC
          enum:
          - Unknown
          - Legacy
          - 11N
          - 11AC
          - 11AX
          - 11AX_6E
        powerMode:
          type: string
          description: The category of power drawn by AP
          example: LOW_POWER
          enum:
          - DEFAULT_LOW_POWER
          - LOW_POWER
          - MEDIUM_POWER_15_4_W
          - MEDIUM_POWER_16_8_W
          - HIGH_POWER
          - DEFAULT_HIGH_POWER
          - NO_POWER
          - MEDIUM_POWER_25_5_W
          - UNKNOWN_POWER
        connectedTime:
          type: integer
          description: The device connected time in UTC time seconds
          format: int64
          example: 1706329006
        ledFlashEnabled:
          type: boolean
          description: Indicates is LED Flash is enabled or disabled
          example: false
        ledFlashSeconds:
          type: integer
          description: The Number of seconds for which LED flashes when its enabled on AP
          format: int64
          example: 30
        subMode:
          type: string
          description: The Additional mode for enable advance features
          example: Local
          enum:
          - None
          - WIPS
          - No Local
          - Local
          - No Local + Dual RLAN
          - Local + Dual RLAN
          - PPPOE
          - PPPOE-WIPS
          - Sensor Local
          - Sensor H-REAP
        homeApEnabled:
          type: boolean
          description: Indicates AP supports OEAP feature or not
          example: true
        powerType:
          type: string
          description: The type of power source used by AP to power on
          example: PoE
          enum:
          - DC
          - DC+
          - POWER_INJECTOR
          - PoE
          - PoE+
          - UNKNOWN
        apType:
          type: string
          description: The type of AP categorized based on its usage
          example: Standard
          enum:
          - Standard
          - PC104
          - Multifunction Pole Top
          - Multifunction Roof Top
          - Multifunction MIMO
          - Indoor Bridge
          - Outdoor Rev3 Bridge
          - Outdoor 1500 Bridge
        adminState:
          type: string
          description: "The admin(configuration) state of the AP. Mapping details are below, \n|Constant | Description |\n| --- | --- |\n| `1` | AP_ADMIN_STATE_ENABLED |\n| `2` | AP_ADMIN_STATE_DISABLED |\n"
          example: AP_ADMIN_STATE_DISABLED
          enum:
          - AP_ADMIN_STATE_ENABLED
          - AP_ADMIN_STATE_DISABLED
        icapCapability:
          type: string
          description: If AP support packet capture and the type of packet captures supported by AP.
          example: "159"
        regulatoryDomain:
          type: string
          description: The country code assigned for the AP.
          example: US  - United States
        ethernetMac:
          type: string
          description: The Device (AP) ethernet MAC address
          example: 68:7D:B4:1C:0B:24
        rfTagName:
          type: string
          description: The Device (AP) RF tag name
          example: default-rf-tag
        siteTagName:
          type: string
          description: The device associated sit tag name
          example: default-site-tag
        powerSaveModeCapable:
          type: string
          description: "The Device (AP) power save mode capability. Indicate if AP supports Power Save feature. Mapping details are below, \n|Constant | Description |\n| --- | --- |\n| `1` | AP_POWER_SAVE_MODE_CAPABLE_NOT_SUPPORTED |\n| `2` | AP_POWER_SAVE_MODE_CAPABLE_SUPPORTED |\n"
          example: AP_POWER_SAVE_MODE_CAPABLE_NOT_SUPPORTED
          enum:
          - AP_POWER_SAVE_MODE_CAPABLE_NOT_SUPPORTED
          - AP_POWER_SAVE_MODE_CAPABLE_SUPPORTED
        powerProfile:
          type: string
          description: The power profile name used by the AP
          example: TestPowerProfileName
        flexGroup:
          type: string
          description: The Device (AP) flexconnect group name
          example: default-flex-profile
        powerCalendarProfile:
          type: string
          description: The calendar power profile name used by the AP
          example: TestPowerProfileName
        apGroup:
          type: string
          description: The Device (AP) AP group name
          example: SanJose-regular-AP
        radios:
          $ref: '#/components/schemas/RadioKpis'
        apMisConfigReason:
          type: string
          description: Reason for AP set as misconfigured
          example: Incorrect Country Code
          enum:
          - Unknown
          - None
          - Incorrect Country Code
          - World Wide Mode
          - License Non-Compliant
    LicenseDetails:
      type: object
      properties:
        required:
          type: boolean
          description: Indicates if the device needs license to operate.
          example: false
        complianceState:
          type: string
          description: Device license compliance state.
          example: Non Compliant
          enum:
          - Unknown
          - Not Applicable
          - Non Compliant
          - Compliant
          - Policy Allowed
        nonComplianceReason:
          type: string
          description: Reason for device being license non compliant.
          example: Never Licensed
          enum:
          - Unknown
          - Never Licensed
          - Not Applicable
          - License Expiration
      description: License attributes of a network device
    FabricDetails:
      type: object
      properties:
        fabricRole:
          type: array
          example:
          - Border
          - edge
          items:
            type: string
            description: The fabric role of the device
        fabricSiteName:
          type: string
          description: The device assigned fabric site name
          example: TestFabricSiteName
        transitFabrics:
          type: array
          example:
          - transitSite1
          - transitSite2
          items:
            type: string
            description: The list of transit fabric site name
        l2Vns:
          type: array
          example:
          - l2Vn1
          - l2Vn2
          items:
            type: string
            description: The list of L2 virtual networks
        l3Vns:
          type: array
          example:
          - l3Vn1
          - l3Vn2
          items:
            type: string
            description: The list of L3 virtual networks
        fabricSiteId:
          type: string
          description: The device assigned fabric site Id
          example: TestFabricSiteId
        networkProtocol:
          type: string
          description: The fabric site networkProtocol type for the device assigned
          example: EVPN
    FabricHealth:
      type: object
      properties:
        overallFabricScore:
          type: integer
          description: Overall score for all fabric impacting kpi's.
          format: int64
          example: 15
        fabricTransitScore:
          type: integer
          description: Score for fabric transit impacting kpi's.
          format: int64
          example: 15
        fabricSiteScore:
          type: integer
          description: Score for fabric site impacting kpi's.
          format: int64
          example: 15
        fabricVnScore:
          type: integer
          description: Score for fabric VN impacting kpi's.
          format: int64
          example: 15
        fabsiteFcpScore:
          type: integer
          description: Score for fabric site control plane subcategory impacting kpi's.
          format: int64
          example: 15
        fabsiteInfraScore:
          type: integer
          description: Score for fabric site infrastructure subcategory impacting kpi's.
          format: int64
          example: 15
        fabsiteFsconnScore:
          type: integer
          description: Score for fabric site connection subcategory impacting kpi's.
          format: int64
          example: 15
        vnExitScore:
          type: integer
          description: Score for virtual network exit subcategory impacting kpi's.
          format: int64
          example: 15
        vnFcpScore:
          type: integer
          description: Score for virtual network control plane subcategory impacting kpi's.
          format: int64
          example: 15
        vnStatusScore:
          type: integer
          description: Score for virtual network status subcategory impacting kpi's.
          format: int64
          example: 15
        vnServiceScore:
          type: integer
          description: Score for virtual network service subcategory impacting kpi's.
          format: int64
          example: 15
        transitControlPlaneScore:
          type: integer
          description: Score for transit network control plane subcategory impacting kpi's.
          format: int64
          example: 15
        transitServicesScore:
          type: integer
          description: Score for transit network service subcategory impacting kpi's.
          format: int64
          example: 15
        tcpConnScore:
          type: integer
          description: Score for control plane connectivity monitored with ipsla.
          format: int64
          example: 15
        bgpBgpSiteScore:
          type: integer
          description: Score for bgp connectivity on fabric bgp site.
          format: int64
          example: 15
        vniStatusScore:
          type: integer
          description: "Score for vni status, applicable for evpn."
          format: int64
          example: 15
        pubsubTransitConnScore:
          type: integer
          description: Score for pubsub connectivity in transit site.
          format: int64
          example: 15
        bgpPeerInfraVnScore:
          type: integer
          description: Score for bgp peer connectivity in infra vn.
          format: int64
          example: 15
        internetAvailScore:
          type: integer
          description: Score for internet availability.
          format: int64
          example: 15
        bgpEvpnScore:
          type: integer
          description: Score for bgp connectivity in evpn.
          format: int64
          example: 15
        lispTransitConnScore:
          type: integer
          description: Score for lisp connectivity to transit.
          format: int64
          example: 15
        ctsEnvDataDownloadScore:
          type: integer
          description: Score for cts environment data download status.
          format: int64
          example: 15
        pubsubInfraVnScore:
          type: integer
          description: Score for pubsub connectivity in infra vn.
          format: int64
          example: 15
        peerScore:
          type: integer
          description: "Score for peer connectivity, applicable to EVPN."
          format: int64
          example: 15
        bgpPeerScore:
          type: integer
          description: Score for bgp peer connectivity.
          format: int64
          example: 15
        remoteInternetAvailScore:
          type: integer
          description: Score for remote internet availability.
          format: int64
          example: 15
        bgpTcpScore:
          type: integer
          description: Score for bgp connectivity to transit.
          format: int64
          example: 15
        pubsubSessionScore:
          type: integer
          description: Score for pubsub status to control plane.
          format: int64
          example: 15
        aaaStatusScore:
          type: integer
          description: Score for aaa status.
          format: int64
          example: 15
        lispCpConnScore:
          type: integer
          description: Score for lisp status to control plane.
          format: int64
          example: 15
        bgpPubsubSiteScore:
          type: integer
          description: Score for bgp status in a pubsub site type.
          format: int64
          example: 15
        mcastScore:
          type: integer
          description: Score for multicast status to rendezvous point.
          format: int64
          example: 15
        portChannelScore:
          type: integer
          description: Score for port channel status.
          format: int64
          example: 15
    SwitchPoEDetails:
      type: object
      properties:
        portCount:
          type: integer
          description: The switch's total number of ports
          example: 120
        usedPortCount:
          type: integer
          description: The switch's number of used ports
          example: 100
        freePortCount:
          type: integer
          description: The switch's number of free ports
          example: 20
        powerConsumed:
          type: number
          description: Total power that is being drawn by switch in watts
          example: 236.5
        poePowerConsumed:
          type: number
          description: Total poe power that is being drawn by switch in watts
          example: 60
        systemPowerConsumed:
          type: number
          description: Total system power that is being drawn by switch in watts
          example: 176.5
        powerBudget:
          type: number
          description: Total power (watts) from `Power Supply` that will be made available for System and POE use
          example: 2540
        poePowerAllocated:
          type: number
          description: Amount of total allocated poe power (watts) in switch from the total powerBudget
          example: 157.8
        systemPowerAllocated:
          type: number
          description: Amount of total allocated system power (watts) in switch from the total powerBudget
          example: 690
        powerRemaining:
          type: number
          description: Total power (watts) available for allocation not currently in use
          example: 1692.2
        poeVersion:
          type: string
          description: Switch PoE Version
          example: 2.3.7.6+
        chassisCount:
          type: integer
          description: Chasis count for switch
          example: 1
        moduleCount:
          type: integer
          description: Module count for switch
          example: 3
        moduleDetails:
          type: array
          items:
            $ref: '#/components/schemas/ModuleDetails'
    ModuleDetails:
      type: object
      properties:
        moduleId:
          type: string
          description: The id of the module
          example: "1.0"
        chassisId:
          type: string
          description: The id of the chasis the module is in
          example: "1.0"
        modulePortCount:
          type: integer
          description: The modules's total number of ports
          example: 120
        moduleUsedPortCount:
          type: integer
          description: The modules's number of used ports
          example: 100
        moduleFreePortCount:
          type: integer
          description: The modules's number of free ports
          example: 20
        modulePowerConsumed:
          type: number
          description: Total power consumed by module
          example: 236.5
        modulePoePowerConsumed:
          type: number
          description: Total poe power consumed by module
          example: 60
        moduleSystemPowerConsumed:
          type: number
          description: Total system power consumed by module
          example: 176.5
        modulePowerBudget:
          type: number
          description: Total power allocated to switch
          example: 2540
        modulePoePowerAllocated:
          type: number
          description: Amount of total allocated poe power in module
          example: 157.8
        moduleSystemPowerAllocated:
          type: number
          description: Amount of total allocated system power  in switch
          example: 690
        modulePowerRemaining:
          type: number
          description: Total power available for allocation
          example: 1692.2
        interfacePowerMax:
          type: number
          description: Max Power drawn by an interface in module
          example: 30
    NetworkDeviceTrendRequest:
      required:
      - trendIntervalInMinutes
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/startTime'
        endTime:
          $ref: '#/components/schemas/endTime'
        trendIntervalInMinutes:
          $ref: '#/components/schemas/TrendIntervalInMinutes'
        groupBy:
          $ref: '#/components/schemas/NetworkDeviceTrendGroupBy'
        filters:
          $ref: '#/components/schemas/NetworkDeviceTrendFilters'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDeviceTrendAttribute'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkDeviceTrendAggregateAttributes'
        page:
          $ref: '#/components/schemas/TrendPaginationRequest'
      description: NetworkDeviceTrendRequest
    NetworkDeviceTrendGroupBy:
      type: array
      items:
        type: string
        description: List of field names to group by.
        enum:
        - cpuName
        - radioId
        - radioBand
        - temperatureSensorName
        - poeModule
        - poePowerStackName
        - fabricSessionName
        - fabricDestIp
        - fabricDestName
        - fabricDestUUid
        - vnName
        - fabricAfType
    startTime:
      type: integer
      description: Start time from which the API queries the dataset related to the resource. It must be specified in terms of milliseconds since UNIX epoch. Value is inclusive.
      format: int64
      example: 1705348800000
    endTime:
      type: integer
      description: End time to which the API queries the dataset related to the resource. It must be specified in terms of milliseconds since UNIX epoch. Value is inclusive.
      format: int64
      example: 1705435200000
    TrendIntervalInMinutes:
      type: integer
      description: |
        the trend data time interval in minutes. This is
        a mandatory property. The possible values are **5, 10, 30,
        60**. When the start and end Time range is greater than 1 day, the
        expected interval value is 60 minutes. The default polling or data collection interval for the switches and router family devices is 10minutes. So even
        5 minutes given in the input, the data will be available for 10 minutes once.
      example: 10
      enum:
      - 5
      - 10
      - 30
      - 60
    NetworkDeviceTrendGroupResponse:
      type: object
      properties:
        response:
          type: array
          description: Successfully return list of Network Device metrics analytics data
          items:
            $ref: '#/components/schemas/NetworkDeviceTrendResponse'
        page:
          $ref: '#/components/schemas/TrendPaginationResponse'
        version:
          type: string
          example: "1.0"
      description: Network Device metric Trend Analytics Response
    NetworkDeviceTrendResponse:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        attributes:
          $ref: '#/components/schemas/NetworkDeviceTrendAttributeResponse'
        aggregateAttributes:
          type: array
          description: |
            Successfully returned list of aggregate Attributes
          items:
            $ref: '#/components/schemas/NetworkDeviceTrendResponseAggregate'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDeviceTrendResponse_groups'
    NetworkDeviceTrendAttributeResponse:
      type: array
      items:
        $ref: '#/components/schemas/NetworkDeviceTrendAttributeResponse_inner'
    NetworkDeviceTrendResponseAggregate:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDeviceTrendAggregateFields'
      allOf:
      - $ref: '#/components/schemas/AggregateResponseAttributes'
    NetworkDeviceTrendFilters:
      type: array
      description: |-
        When using filters, the request must contain only fields from the same grouping (across all request fields)
         | Group | Valid Fields |
          | --- | --- |
          | HealthScore | deviceRole, transitFabrics, anchorClientCount, foreignClientCount, fabricRole, managementIpAddress, deviceName, fabricSiteId, avgCpuUtilization, connectedWlcUuid, idleClientCount, localClientCount, monitoredApCount, siteHierarchy, memoryUtilization, connectedWlcName, reachability, l2Vns, overallHealthScore, clientCount, l3Vns |
          | PoE Port | maxPowerDrawn, interfaceDescription, pdClassSignal, powerAdminMax, upoePlusEnabled, policingPoeEnabled, poeModule, pdConnectedDeviceList, pdLocation, pdPowerNegotiationUsed, chassisId, interfaceName, moduleId, connectedSwitchId, interfaceOperStatus, pdPowerConsumed, fastPoeEnabled, poeOperPriority, connectedSwitch, perpetualPoeEnabled, pdClassSpare, pdDeviceType, poeAdminStatus, pdDeviceModel, pdPowerRemaining, poeOperStatus, connectedSwitchType, pdDeviceName, fourPairEnabled |
          | PoE Module | remainingPower, allocatedPower, powerStackMode, interfacePowerMax, reservedPower, switchCount, poePowerStackName, consumedPowerPoe, poeModule, usedPower, freePorts, switchAvailablePower, powerStackTopology, usedPorts, powerBudget, powerUsagePercentage, numPorts, moduleId, totalPower, powerSupplyCount, consumedPowerSystem |
          | AP Link Errors | ethernetRxUtilization, utilizationAbs, txErrors, txErrorsAbs, totalRate, txRate, rxErrorsAbs, rxRate, ethernetTxUtilization, rxErrors, ethernetUtilization, ethernetTotalUtilization |
          | Session Reachability | fabricReachabilitySessionStatus, fabricDestUUid, fabricDestIp, fabricSessionName, vnName, fabricAfType, fabricDestName |
          | Interface Stats | inputErrors, outputErrors, inputRate, outRate, interfaceName, outputUtilizationPercentage, outputDiscards, inputDiscards, inputUtilizationPercentage |
          | Interface Availability | availability |
          | Temperature | temperatureSensorName, temperature |
          | ApUpDown | apUpDownStatus |
          | WLC Stats | cpuUtilization, cpuName |
          | WLC Ap License | wlcApLicenseInUse, wlcApiLicenseAvailable |
          | Radio Metrics | channelUtilization, videoAteAx, BestEffortAteAx, packetCount, totalMulticastFrames, channel, radioClientCount, voiceLatencyNonax, radioId, radioAirQuality, BackgroundAteAx, txDrops, BestEffortAteNonax, ssid, BackgroundLatencyAx, BackgroundLatencyNonax, txPower, voiceAteNonax, videoLatencyNonax, radioMode, BestEffortLatencyNonax, voiceAteAx, BackgroundAteNonax, channelNumbers, txDataFrames, txRetries, voiceLatencyAx, videoLatencyAx, totalManagementFrames, txPowerUnit, radioRxUtilization, rxErrorFrames, txPackets, txErrorFrames, txRetryPacket, radioTxUtilization, BestEffortLatencyAx, radioNoise, overallAteAx, radioInterference, radioBand, operState, channelWidth, radioTrafficUtilization, videoAteNonax, overallAteNonax
      example:
      - key: deviceName
        operator: eq
        value: testDeviceName
      - logicalOperator: or
        filters:
        - key: siteHierarchy
          operator: in
          value:
          - Global/San Jose
          - Global/SFO
        - key: Software
          operator: eq
          value: 16.3.2
      items:
        $ref: '#/components/schemas/NetworkDeviceTrendFilter'
    NetworkDeviceTrendFilter:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/NetworkDeviceTrendAttribute'
        operator:
          $ref: '#/components/schemas/Operator'
        logicalOperator:
          $ref: '#/components/schemas/LogicalOperator'
        value:
          type: object
          description: |
            Field value(s) to filter the data set. Array of values is used for   "in" or "out" operator. Values will be of whatever type the   specific field being filtered is defined with.

            For other operators, filter value is of whatever type the specific   field being filtered is defined with.

            In the case of an "and" or "or" operator, this values array will be   ignored, and the values arrays in each of the *nested filters*   will be used.
        filters:
          type: array
          description: |
            Nested array of filters in case of AND/OR based filters. Only one   level of nesting will be supported.

            Structure of nested filter is the same as parent with all operators   supported except AND or OR.
          items:
            $ref: '#/components/schemas/NetworkDeviceTrendFilter'
      description: |
        In case of single filter, please use `key`, `operator` and `value` combination. If multiple filters need to be applied using a logical   operation, please use `logicalOperator` and populate the list of 'filters' with a   combination of FilterObj. Filters can be nested to build complex   queries.
    NetworkDeviceTrendAttribute:
      type: string
      description: Network device Trend attributes details
      enum:
      - deviceName
      - cpuName
      - managementIpAddress
      - siteHierarchy
      - deviceRole
      - fabricRole
      - fabricSiteName
      - transitFabrics
      - l2Vns
      - l3Vns
      - fabricSiteId
      - networkProtocol
      - reachability
      - overallHealthScore
      - cpuUtilization
      - avgCpuUtilization
      - memoryUtilization
      - operStatus
      - temperature
      - inputDiscards
      - outputDiscards
      - inputErrors
      - outputErrors
      - inputUtilizationPercentage
      - outputUtilizationPercentage
      - inputRate
      - outRate
      - powerBudget
      - usedPower
      - remainingPower
      - powerUsagePercentage
      - interfacePowerMax
      - numPorts
      - usedPorts
      - freePorts
      - totalPower
      - reservedPower
      - allocatedPower
      - switchAvailablePower
      - consumedPowerSystem
      - consumedPowerPoe
      - powerStackMode
      - powerStackName
      - powerStackTopology
      - switchCount
      - powerSupplyCount
      - monitoredApCount
      - clientCount
      - wlcApLicenseInUse
      - wlcApLicenseAvailable
      - apUpDownStatus
      - connectedWlcUuid
      - connectedWlcName
      - powerAllocationLoad
      - channel
      - radioBand
      - channelWidth
      - channelNumbers
      - txPower
      - radioMode
      - radioTrafficUtilization
      - channelUtilization
      - ethernetUtilization
      - radioInterference
      - radioClientCount
      - radioTxUtilization
      - radioRxUtilization
      - txRetries
      - txRetryPacket
      - txPackets
      - radioNoise
      - radioAirQuality
      - txPowerUnit
      - operState
      - txDataFrames
      - totalManagementFrames
      - totalMulticastFrames
      - txErrorFrames
      - rxErrorFrames
      - ssid
      - packetCount
      - txDrops
      - voiceLatencyAx
      - voiceLatencyNonax
      - videoLatencyAx
      - videoLatencyNonax
      - BestEffortLatencyAx
      - BestEffortLatencyNonax
      - BackgroundLatencyAx
      - BackgroundLatencyNonax
      - overallLatencyAx
      - overallLatencyNonax
      - voiceAteAx
      - voiceAteNonax
      - videoAteAx
      - videoAteNonax
      - BestEffortAteAx
      - BestEffortAteNonax
      - BackgroundAteAx
      - BackgroundAteNonax
      - overallAteAx
      - overallAteNonax
      - pdPowerConsumed
      - pdClassSignal
      - powerAdminMax
      - poeAdminStatus
      - poeOperStatus
      - policingPoeEnabled
      - fourPairEnabled
      - connectedSwitch
      - interfaceName
      - maxPowerDrawn
      - poeOperPriority
      - fastPoeEnabled
      - perpetualPoeEnabled
      - upoePlusEnabled
      - ethernetTxUtilization
      - ethernetRxUtilization
      - ethernetTotalUtilization
      - txErrorsAbs
      - rxErrorsAbs
      - utilizationAbs
      - txErrors
      - rxErrors
      - txRate
      - rxRate
      - totalRate
      - apMode
      - apPowerMode
      - apPoePowerMode
      - apPowerType
      - ieeeCompliant
      - connectedSwitchName
      - connectedSwitchPort
      - localClientCount
      - foreignClientCount
      - anchorClientCount
      - idleClientCount
      - interfaceOperStatus
      - interfaceDescription
      - chassisId
      - moduleId
      - pdClassSpare
      - pdDeviceType
      - pdDeviceModel
      - pdPowerRemaining
      - pdPowerNegotiationUsed
      - pdConnectedDeviceList
      - pdLocation
      - pdDeviceName
      - connectedSwitchId
      - connectedSwitchType
      - fabricRole
      - transitFabrics
      - fabricSiteName
      - l2Vns
      - fabricSiteId
      - networkProtocol
      - l3Vns
      - overallFabricScore
      - tcpConnStatus
      - bgpBgpSiteStatus
      - vniStatusStatus
      - pubsubTransitConnStatus
      - bgpPeerInfraVnStatus
      - internetAvailStatus
      - bgpEvpnStatus
      - lispTransitConnStatus
      - ctsEnvDataDownloadStatus
      - pubsubInfraVnStatus
      - peerStatus
      - bgpPeerStatus
      - remoteInternetAvailStatus
      - bgpTcpStatus
      - pubsubSessionStatus
      - aaaStatusStatus
      - lispCpConnStatus
      - bgpPubsubSiteStatus
      - mcastStatus
      - portChannelStatus
      - fabricSessionName
      - fabricDestIp
      - fabricDestName
      - fabricReachabilitySessionStatus
      - fabricDestUUid
      - vnName
      - fabricAfType
    NetworkDeviceTrendAggregateAttributes:
      type: array
      description: List of Attributes on which the aggregate function should be applied while querying the data.
      example:
      - name: cpuUtilization
        function: min
      - name: cpuUtilization
        function: max
      items:
        $ref: '#/components/schemas/NetworkDeviceTrendAggregateAttribute'
    NetworkDeviceTrendAggregateAttribute:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDeviceTrendAggregateFields'
        function:
          $ref: '#/components/schemas/Function'
      description: Attribute on which the aggregate function should be applied while querying the data.
    NetworkDeviceTrendAggregateFields:
      type: string
      description: Field name on which the aggregate function should be applied while querying the data.
      example: cpuUtilization
      enum:
      - overallHealthScore
      - cpuUtilization
      - memoryUtilization
      - temperature
      - inputDiscards
      - outputDiscards
      - inputErrors
      - outputErrors
      - inputUtilizationPercentage
      - outputUtilizationPercentage
      - inputRate
      - outRate
      - powerBudget
      - usedPower
      - interfacePowerMax
      - numPorts
      - usedPorts
      - freePorts
      - totalPower
      - reservedPower
      - allocatedPower
      - switchAvailablePower
      - consumedPowerSystem
      - consumedPowerPoe
      - switchCount
      - powerSupplyCount
      - monitoredApCount
      - clientCount
      - wlcApLicenseInUse
      - wlcApLicenseAvailable
      - radioTrafficUtilization
      - overallFabricScore
      - fabricTransitScore
      - fabricSiteScore
      - fabricVnScore
      - fabsiteFcpScore
      - fabsiteInfraScore
      - fabsiteFsconnScore
      - vnExitScore
      - vnFcpScore
      - vnStatusScore
      - vnServiceScore
      - transitControlPlaneScore
      - transitServicesScore
      - tcpConnScore
      - bgpBgpSiteScore
      - vniStatusScore
      - pubsubTransitConnScore
      - bgpPeerInfraVnScore
      - internetAvailScore
      - bgpEvpnScore
      - lispTransitConnScore
      - ctsEnvDataDownloadScore
      - pubsubInfraVnScore
      - peerScore
      - bgpPeerScore
      - remoteInternetAvailScore
      - bgpTcpScore
      - pubsubSessionScore
      - aaaStatusScore
      - lispCpConnScore
      - bgpPubsubSiteScore
      - mcastScore
      - portChannelScore
    NetworkDevicesResponse:
      type: object
      properties:
        response:
          type: array
          description: |
            Successfully returned list of summary analytics data
          items:
            $ref: '#/components/schemas/NetworkDeviceResponseWithAggregate'
        page:
          $ref: '#/components/schemas/NetworkDevicesPagination'
        version:
          type: string
          example: "1.0"
    NetworkDeviceResponseWithAggregate:
      type: object
      properties:
        aggregateAttributes:
          type: array
          description: |
            Successfully returned list of aggregate Attributes
          example:
          - name: memory
            function: min
            value: 10.4
          - name: memory
            function: avg
            value: 5.8
          - name: apCount
            function: max
            value: 1040
          items:
            $ref: '#/components/schemas/NetworkDeviceAggregateAttributeResponse'
      allOf:
      - $ref: '#/components/schemas/NetworkDevice'
    NetworkDeviceAggregateAttributeResponse:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDeviceAggregateAttributesName'
      allOf:
      - $ref: '#/components/schemas/AggregateResponseAttributes'
    RadioKpis:
      type: array
      example:
      - id: "0"
        band: 5.0Ghz
        noise: 99
        airQuality: 15.12
        interference: 34.96
        trafficUtil: 10
        utilization: 77.45
        clientCount: 150
      - id: "1"
        band: 2.4Ghz
        noise: 78
        airQuality: 45.34
        interference: 12.66
        trafficUtil: 1.1
        utilization: 41
        clientCount: 75
      items:
        $ref: '#/components/schemas/RadioKpi'
    RadioKpi:
      type: object
      properties:
        slot:
          type: string
          description: "Radio identifier,"
          example: "1"
        radioBand:
          type: string
          description: The band value for the specific radio
          example: 2.4Ghz
        noise:
          type: integer
          description: Radio channel noise value in dBm
          format: int64
          example: 10
        airQuality:
          type: number
          description: Radio channel Air Quality in percentage
          example: 43
        interference:
          type: number
          description: Radio channel Interference in percentage
          example: 39
        trafficUtil:
          type: number
          description: The channel Traffic utilization in percentage
          example: 78
        utilization:
          type: number
          description: The total channel Traffic utilization in percentage
          example: 99
        clientCount:
          type: integer
          description: The number of client associated to this radio
          format: int64
          example: 88
    NetworkDeviceResponse:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/NetworkDeviceResponseWithAggregate'
        version:
          type: string
          example: "1.0"
    NetworkDevicesQueryRequest:
      type: object
      properties:
        views:
          $ref: '#/components/schemas/NetworkDeviceViews'
        attributes:
          $ref: '#/components/schemas/NetworkDeviceAttributes'
        filters:
          $ref: '#/components/schemas/NetworkDeviceFilters'
        aggregateAttributes:
          type: array
          description: |
            Successfully returned list of aggregate Attributes
          example:
          - name: memoryScore
            function: min
          - name: memoryScore
            function: avg
          - name: apCount
            function: max
          items:
            $ref: '#/components/schemas/NetworkDeviceAggregateAttributes'
        page:
          $ref: '#/components/schemas/Pagination'
      allOf:
      - $ref: '#/components/schemas/startAndEndTime'
    NetworkDeviceAggregateAttributes:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDeviceAggregateAttributesName'
        function:
          $ref: '#/components/schemas/Function'
    NetworkDeviceAggregateAttributesName:
      type: string
      description: Field name on which the aggregate function should be applied when querying the data. The supported field details are available in the enum definition.
      enum:
      - apCount
      - clientCount
      - temperature
      - cpuScore
      - cpuUtilization
      - memoryUtilization
      - memoryScore
      - overallHealthScore
      - freeMemoryBuffer
      - freeMemoryBufferScore
      - freeTimer
      - freeTimerScore
      - interDeviceLinkScore
      - linkUtilizationScore
      - discardScore
      - wanLinkUtilization
      - wqePool
      - wqePoolScore
      - linkErrorScore
      - packetPool
      - packetPoolScore
      - noiseScore
      - utilizationScore
      - interferenceScore
      - airQualityScore
      - overallHealthScore
      - overallFabricScore
      - fabricTransitScore
      - fabricSiteScore
      - fabricVnScore
      - fabsiteFcpScore
      - fabsiteInfraScore
      - fabsiteFsconnScore
      - vnExitScore
      - vnFcpScore
      - vnStatusScore
      - vnServiceScore
      - transitControlPlaneScore
      - transitServicesScore
      - tcpConnScore
      - bgpBgpSiteScore
      - vniStatusScore
      - pubsubTransitConnScore
      - bgpPeerInfraVnScore
      - internetAvailScore
      - bgpEvpnScore
      - lispTransitConnScore
      - ctsEnvDataDownloadScore
      - pubsubInfraVnScore
      - peerScore
      - bgpPeerScore
      - remoteInternetAvailScore
      - bgpTcpScore
      - pubsubSessionScore
      - aaaStatusScore
      - lispCpConnScore
      - bgpPubsubSiteScore
      - mcastScore
      - portChannelScore
      - powerConsumed
      - poePowerConsumed
      - systemPowerConsumed
      - powerBudget
      - poePowerAllocated
      - systemPowerAllocated
    Function:
      type: string
      description: The name of the aggregate function
      enum:
      - min
      - max
      - avg
      - count
      - latest
      - sum
      - distinct
    NetworkDeviceViews:
      type: array
      description: The List of Network Device model views. Please refer to ```NetworkDeviceView``` for the supported list
      items:
        $ref: '#/components/schemas/NetworkDeviceView'
    NetworkDeviceView:
      type: string
      description: "Views which are supported by this API. Each view represents a specific data set.\n\nWhen no views are requested, the default information fetched is the configuration, metrics and apConfiguration views.\n\nWhen requesting poeDetails or switchModules views, a minimum of two hour time range is expected.\n1. **configuration:** \n     name,managementIpAddress,macAddress,communicationState,collectionStatus,haStatus,lastBootTime,platformId,deviceFamily,serialNumber,deviceSeries,softwareVersion,productVendor,siteHierarchyId,siteHierarchy,deviceGroupHierarchyId,siteId,tagNames,stackType,osType,ringStatus,maintenanceModeEnabled,deviceRole,deviceType,wiredClientCount,wirelessClientCount,portCount,virtualPortCount,physicalPortCount,redundancyMode,featureFlagList,haLastResetReason,redundancyPeerStateDerived,redundancyPeerState,redundancyStateDerived,redundancyState\n2. **metrics:**\n     name,managementIpAddress,macAddress,overallHealthScore,cpuUtilization,cpuScore,memory,memoryScore,avgTemperature,maxTemperature,discardScore,discardInterfaces,errorScore,errorInterfaces,interDeviceLinkScore,interDeviceConnectedDownInterfaces,linkUtilizationScore,freeTimerScore,freeTimer,packetPoolScore,packetPool,freeMemoryBufferScore,freeMemoryBuffer,wqePoolScore,wqePool,apCount,clientCount,noiseScore,utilizationScore,interferenceScore,airQualityScore,radioBand,noise,airQuality,interference,trafficUtil,utilization,clientCount\n3. **apConfiguration:**\n    name,managementIpAddress,macAddress,policyTagName,apOpState,powerSaveMode,mode,resetReason,protocol,powerMode,connectedTime,ledFlashEnabled,ledFlashSeconds,subMode,homeApEnabled,powerType,apType,adminState,icapCapability,regulatoryDomain,ethernetMac,rfTagName,siteTagName,upTime,powerSaveModeCapable,powerProfile,flexGroup,powerCalendarProfile,apGroup,connectedWlcName,connectedWlcUuid,apMisConfigReason\n4. **apRadio:**\n    name,managementIpAddress,macAddress,slot,radioBand,noise,airQuality,interference,trafficUtil,utilization,clientCount\n5. **fabric:**\n    fabricRole,transitFabrics,fabricSiteName,l2Vns, fabricSiteId,networkProtocol,l3Vns            \n6. **fabricMetrics:**\n    overallFabricScore,fabricTransitScore,fabricSiteScore, fabricVnScore, fabsiteFcpScore,fabsiteInfraScore, fabsiteFsconnScore, vnExitScore,vnFcpScore, vnStatusScore,vnServiceScore,transitControlPlaneScore, transitServicesScore,tcpConnScore,bgpBgpSiteScore, vniStatusScore,pubsubTransitConnScore, bgpPeerInfraVnScore,internetAvailScore,bgpEvpnScore, lispTransitConnScore,ctsEnvDataDownloadScore, pubsubInfraVnScore,peerScore,bgpPeerScore, remoteInternetAvailScore,bgpTcpScore,pubsubSessionScore, aaaStatusScore,lispCpConnScore,bgpPubsubSiteScore, mcastScore,portChannelScore  \n7. **poeDetails:**\n    name,managementIpAddress,macAddress,switchPortCount,usedPortCount,freePortCount,\n    powerConsumed,poePowerConsumed,systemPowerConsumed,powerBudget,poePowerAllocated,systemPowerAllocated,availablePower,poeVersion,chassisCount,moduleCount\n8. **switchModules:** \n  name,managementIpAddress,macAddress,moduleCount,moduleId,chassisId,modulePortCount,moduleUsedPortCount,moduleFreePortCount,modulePowerConsumed,modulePoePowerConsumed,moduleSystemPowerConsumed,modulePowerBudget,modulePoePowerAllocated,moduleSystemPowerAllocated,moduleAvailablePower,interfacePowerMax\n9. **licenseDetails:**\n    name,managementIpAddress,macAddress,licenseRequired,licenseComplianceState,licenseNonComplianceReason\n"
      enum:
      - configuration
      - metrics
      - apConfiguration
      - apRadio
      - fabric
      - fabricMetrics
      - poeDetails
      - switchModules
      - licenseDetails
    NetworkDeviceFilters:
      type: array
      description: "List of filters to apply when querying the Network devices data. \n\nSupported operators are [in, eq, neq, notIn, like]\n\nWhen using filters, the request must contain only fields from the same grouping (across all request fields)\n\n\n | Group | Valid Fields |\n | -  | - |\n | Network Device:|   policyTagName, resetReason, featureFlagList, powerMode, ringStatus, ledFlashSeconds, id, deviceType, deviceGroupHierarchyId, deviceFamily, redundancyStateDerived, homeApEnabled, collectionStatus, softwareVersion, communicationState, tagNames, licenseNonComplianceReason, haLastResetReason, deviceRole, rfTagName, redundancyPeerStateDerived, siteTagName, redundancyPeerState, productVendor, apOperationalState, siteHierarchyId, siteHierarchy, siteId, ledFlashEnabled, protocol, connectedTime, subMode, haStatus, serialNumber, operationalMode, macAddress, deviceSeries, name, licenseComplianceState, powerType, redundancyMode, apMisConfigReason, connectedWlcUuid, apType, osType, adminState, icapCapability, regulatoryDomain, ethernetMac, apGroup, managementIpAddress, platformId, linkUtilizationScore, redundancyState, upTime, powerSaveModeCapable, powerProfile, licenseRequired, lastBootTime, flexGroup, maintenanceModeEnabled, powerCalendarProfile. |\n| Device Health: |   wqePool, interferenceScore, fabricRole, ctsEnvDataDownloadScore, fabsiteFcpScore, tcpConnScore, id, stackType, bgpBgpSiteScore, clientCount, apCount, deviceType, transitControlPlaneScore, vnExitScore, pubsubTransitConnScore, aaaStatusScore, deviceGroupHierarchyId, deviceFamily, portChannelScore, wqePoolScore, bgpPeerInfraVnScore, utilizationScore, softwareVersion, internetAvailScore, bgpEvpnScore, tagNames, interDeviceConnectedDownInterfaces, lispTransitConnScore, memoryUtilization, deviceRole, overallFabricScore, vnFcpScore, siteId, siteHierarchy, siteHierarchyId, discardScore, packetPoolScore, transitServicesScore, transitFabrics, fabricSiteScore, packetPool, powerSaveMode, freeMemoryBufferScore, interDeviceLinkScore, fabricTransitScore, errorInterfaces, connectedWlcName, l2Vns, pubsubInfraVnScore, vnServiceScore, vniStatusScore, macAddress, freeTimer, peerScore, name, bgpPeerScore, vnStatusScore, discardInterfaces, fabricSiteName, fabsiteFsconnScore, bgpTcpScore, pubsubSessionScore, fabricSiteId, connectedWlcUuid, freeMemoryBuffer, lispCpConnScore, overallHealthScore, bgpPubsubSiteScore, cpuUtilization, linkErrorScore, freeTimerScore, managementIpAddress, platformId, mcastScore, fabricVnScore, memoryScore, remoteInternetAvailScore, fabsiteInfraScore, siteId, l3Vns, networkProtocol, cpuScore|\n| Switch POE Data: |  powerConsumed, id, usedPortCount, moduleCount, poePowerConsumed, powerAllocationLoad, poeVersion, poePowerAllocated, chassisCount, siteHierarchy, siteHierarchyId, systemPowerAllocated, switchPortCount, name, systemPowerConsumed, powerConsumedPercent, powerRemaining, freePortCount, managementIpAddress, powerBudget, siteId|\n"
      example:
      - key: deviceFamily
        operator: eq
        value: Switches and Hubs
      - key: macAddress
        operator: in
        value:
        - 00:1E:49:81:6C:FF
        - 34:1E:49:81:6C:F0
      - logicalOperator: or
        filters:
        - key: siteHierarchy
          operator: like
          value: Global/Paris
        - key: siteHierarchy
          operator: eq
          value: Global/Eiffel Tower
      items:
        $ref: '#/components/schemas/NetworkDeviceFilter'
    NetworkDeviceFilter:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/NetworkDeviceAttribute'
        operator:
          $ref: '#/components/schemas/Operator'
        logicalOperator:
          $ref: '#/components/schemas/LogicalOperator'
        value:
          type: object
          description: |
            Field value(s) to filter the data set. Array of values is used for   "in" or "out" operator. Values will be of whatever type the   specific field being filtered is defined with.

            For other operators, filter value is of whatever type the specific   field being filtered is defined with.

            In the case of an "and" or "or" operator, this values array will be   ignored, and the values arrays in each of the *nested filters*   will be used.
        filters:
          type: array
          description: |
            Nested array of filters in case of AND/OR based filters. Only one   level of nesting will be supported.

            Structure of nested filter is the same as parent with all operators   supported except AND or OR.
          items:
            $ref: '#/components/schemas/NetworkDeviceFilter'
      description: |
        In case of single filter, please use `key`, `operator` and `value` combination. If multiple filters need to be applied using a logical   operation, please use `logicalOperator` and populate the list of 'filters' with a   combination of FilterObj. Filters can be nested to build complex   queries.
    CountIntegerResponse:
      title: Count Integer Response
      type: object
      properties:
        response:
          $ref: '#/components/schemas/CountIntegerResponse_response'
        version:
          type: string
          description: The version of the response
          example: "1.0"
      description: Reports
    NetworkDeviceAttributes:
      type: array
      description: The List of Network Device model attributes. This is helps to specificy the intrested fields in the request
      items:
        $ref: '#/components/schemas/NetworkDeviceAttribute'
    NetworkDeviceAttribute:
      type: string
      description: Field names which are supported by this API as attributes or filter keys
      enum:
      - name
      - managementIpAddress
      - communicationState
      - collectionStatus
      - haStatus
      - lastBootTime
      - platformId
      - deviceFamily
      - serialNumber
      - macAddress
      - deviceSeries
      - softwareVersion
      - productVendor
      - siteHierarchyId
      - siteHierarchy
      - deviceGroupHierarchyId
      - siteId
      - tagNames
      - stackType
      - osType
      - ringStatus
      - maintenanceModeEnabled
      - deviceRole
      - deviceType
      - policyTagName
      - apOperationalState
      - powerSaveMode
      - operationalMode
      - resetReason
      - protocol
      - powerMode
      - connectedTime
      - ledFlashEnabled
      - ledFlashSeconds
      - subMode
      - homeApEnabled
      - powerType
      - apType
      - adminState
      - icapCapability
      - regulatoryDomain
      - ethernetMac
      - rfTagName
      - siteTagName
      - upTime
      - powerSaveModeCapable
      - powerProfile
      - flexGroup
      - powerCalendarProfile
      - apGroup
      - ipv4Address
      - ipv6Address
      - redundancyMode
      - featureFlagList
      - haLastResetReason
      - redundancyPeerStateDerived
      - redundancyPeerState
      - redundancyStateDerived
      - redundancyState
      - wiredClientCount
      - wirelessClientCount
      - portCount
      - physicalPortCount
      - virtualPortCount
      - overallHealthScore
      - cpuUtilization
      - cpuScore
      - memoryUtilization
      - memoryScore
      - avgTemperature
      - maxTemperature
      - discardScore
      - discardInterfaces
      - linkErrorScore
      - errorInterfaces
      - interDeviceLinkScore
      - interDeviceConnectedDownInterfaces
      - linkUtilizationScore
      - linkUtilization
      - freeTimerScore
      - freeTimer
      - packetPoolScore
      - packetPool
      - freeMemoryBufferScore
      - freeMemoryBuffer
      - wqePoolScore
      - wqePool
      - apCount
      - clientCount
      - noiseScore
      - utilizationScore
      - interferenceScore
      - airQualityScore
      - radioBand
      - channelNoise
      - channelAirQuality
      - channelInterference
      - channelTrafficUtil
      - channelUtilization
      - radioClientCount
      - connectedWlcName
      - connectedWlcUuid
      - licenseComplianceState
      - licenseNonComplianceReason
      - apMisConfigReason
      - fabricRole
      - transitFabrics
      - fabricSiteName
      - l2Vns
      - fabricSiteId
      - networkProtocol
      - l3Vns
      - overallFabricScore
      - fabricTransitScore
      - fabricSiteScore
      - fabricVnScore
      - fabsiteFcpScore
      - fabsiteInfraScore
      - fabsiteFsconnScore
      - vnExitScore
      - vnFcpScore
      - vnStatusScore
      - vnServiceScore
      - transitControlPlaneScore
      - transitServicesScore
      - tcpConnScore
      - bgpBgpSiteScore
      - vniStatusScore
      - pubsubTransitConnScore
      - bgpPeerInfraVnScore
      - internetAvailScore
      - bgpEvpnScore
      - lispTransitConnScore
      - ctsEnvDataDownloadScore
      - pubsubInfraVnScore
      - peerScore
      - bgpPeerScore
      - remoteInternetAvailScore
      - bgpTcpScore
      - pubsubSessionScore
      - aaaStatusScore
      - lispCpConnScore
      - bgpPubsubSiteScore
      - mcastScore
      - portChannelScore
      - switchPortCount
      - usedPortCount
      - freePortCount
      - powerConsumed
      - poePowerConsumed
      - systemPowerConsumed
      - powerBudget
      - poePowerAllocated
      - systemPowerAllocated
      - availablePower
      - poeVersion
      - chassisCount
      - moduleCount
      - module_count
      - moduleCount
      - moduleId
      - chassisId
      - modulePortCount
      - moduleUsedPortCount
      - moduleFreePortCount
      - modulePowerConsumed
      - modulePoePowerConsumed
      - moduleSystemPowerConsumed
      - modulePowerBudget
      - modulePoePowerAllocated
      - moduleSystemPowerAllocated
      - moduleAvailablePower
      - interfacePowerMax
    NetworkDevicesPagination:
      type: object
      properties:
        limit:
          type: integer
          description: The reference to the limit applied in the Pagination Request.
          example: 500
        offset:
          type: integer
          description: The reference to the record offset applied in the Pagination Request.
          example: 1
        count:
          type: integer
          description: Total number of records related to the resource after applying applicable filtering
          example: 12500
        sortBy:
          type: string
          description: Field name by which sort is requested
          example: name
        order:
          type: string
          description: Sort order. 'asc' for ascending and 'desc' for   descending
          example: asc
          enum:
          - asc
          - desc
    NetworkDevicesSummaryRequest:
      type: object
      properties:
        groupBy:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsGroupBy'
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributes'
        filters:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsFilters'
        aggregateAttributes:
          type: array
          description: |
            Successfully returned list of aggregate Attributes
          items:
            $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregateAttributes'
        page:
          $ref: '#/components/schemas/PaginationWithAggregateSortBy'
      allOf:
      - $ref: '#/components/schemas/startAndEndTime'
    NetworkDevicesTopNRequest:
      required:
      - groupBy
      - topN
      type: object
      properties:
        topN:
          maximum: 100
          minimum: 10
          type: integer
          description: Number of top network devices to retrieve.
          enum:
          - 10
          - 50
          - 100
        groupBy:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsGroupBy'
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributes'
        filters:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsFilters'
        aggregateAttributes:
          type: array
          description: |
            Successfully returned list of aggregate Attributes
          items:
            $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregateAttributes'
        page:
          $ref: '#/components/schemas/PaginationWithAggregateSortBy'
      description: The input payload schema to query Top-N Analytics Network Device data.
      allOf:
      - $ref: '#/components/schemas/startAndEndTime'
    NetworkDevicesTrendRequest:
      required:
      - trendInterval
      type: object
      properties:
        trendInterval:
          type: string
          description: "Trend interval to indicate the duration          \n"
          enum:
          - 5MIN
          - 10MIN
          - 30MIN
          - 1HR
          - 7DAYS
        groupBy:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsGroupBy'
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributes'
        filters:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsFilters'
        aggregateAttributes:
          type: array
          description: |
            Successfully returned list of aggregate Attributes
          items:
            $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregateAttributes'
        page:
          $ref: '#/components/schemas/TrendPaginationRequest'
      description: The input payload schema to query the Trend Analytics Network Device data.
      allOf:
      - $ref: '#/components/schemas/startAndEndTime'
    NetworkDevicesAnalyticsResponse:
      type: object
      properties:
        response:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsGroupResponse'
        page:
          $ref: '#/components/schemas/PaginationWithAggregateSortBy'
        version:
          type: string
          example: "1.0"
      description: Network Devices Trend Analytics Response
    NetworkDevicesTopNAnalyticsResponse:
      type: object
      properties:
        response:
          type: array
          description: Successfully return list of Network Devices TopN Analytics data
          items:
            $ref: '#/components/schemas/NetworkDevicesTopNAnalyticsGroupResponse'
        page:
          $ref: '#/components/schemas/PaginationWithAggregateSortBy'
        version:
          type: string
          example: "1.0"
      description: Network Devices Trend Analytics Response
    NetworkDevicesTrendResponse:
      type: object
      properties:
        response:
          type: array
          description: Successfully return list of Network Devices analytics data
          items:
            $ref: '#/components/schemas/NetworkDevicesTrendAnalyticsGroupResponse'
        page:
          $ref: '#/components/schemas/TrendPaginationResponse'
        version:
          type: string
          example: "1.0"
      description: Network Devices Trend Analytics Response
    NetworkDevicesTrendAnalyticsGroupResponse:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributesResponse'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregatesResponse'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDevicesTrendAnalyticsGroupResponse_groups'
    NetworkDevicesTopNAnalyticsGroupResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDevicesTopNAnalyticsGroupResponse_groups'
    NetworkDevicesAnalyticsGroupResponse:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributesResponse'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregatesResponse'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDevicesAnalyticsGroupResponse_groups'
    NetworkDevicesAnalyticsAttributesResponse:
      type: array
      example:
      - name: family
        value: Switches and hubs
      - name: role
        value: ACCESS
      - name: ipaddress
        value: 10.10.10.10
      items:
        $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributesResponse_inner'
    AggregateResponseAttributes:
      type: object
      properties:
        name:
          type: string
          description: The field name of the aggregate attributes
        function:
          $ref: '#/components/schemas/Function'
        value:
          type: number
          description: The value for the attribute field in the given time range
    NetworkDevicesAnalyticsAggregatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregateResponse'
    NetworkDevicesAnalyticsAggregateResponse:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregateName'
        function:
          $ref: '#/components/schemas/Function'
        value:
          type: number
          description: The value for the attribute field in the given time rang
          example: 78.29
    NetworkDevicesAnalyticsAggregateName:
      type: string
      description: Field name on which the aggregate function should be applied when querying the data. The supported field details are available in the enum definition.
      enum:
      - apCount
      - clientCount
      - cpuScore
      - cpuUtilization
      - memoryUtilization
      - memoryScore
      - overallHealthScore
      - fabricOverallScore
      - freeMemoryBufferScore
      - freeTimerScore
      - interDeviceLinkScore
      - linkUtilizationScore
      - discardScore
      - wqePoolScore
      - errorScore
      - packetPoolScore
      - noise
      - interferenceScore
      - airQuality
      - fabricTransitScore
      - fabricSiteScore
      - fabricVnScore
      - fabsiteFcpScore
      - fabsiteInfraScore
      - fabsiteFsconnScore
      - vnExitScore
      - vnFcpScore
      - vnStatusScore
      - vnServiceScore
      - transitControlPlaneScore
      - transitServicesScore
      - tcpConnScore
      - bgpBgpSiteScore
      - vniStatusScore
      - pubsubTransitConnScore
      - bgpPeerInfraVnScore
      - internetAvailScore
      - bgpEvpnScore
      - lispTransitConnScore
      - ctsEnvDataDownloadScore
      - pubsubInfraVnScore
      - peerScore
      - bgpPeerScore
      - remoteInternetAvailScore
      - bgpTcpScore
      - pubsubSessionScore
      - aaaStatusScore
      - lispCpConnScore
      - bgpPubsubSiteScore
      - mcastScore
      - portChannelScore
    NetworkDevicesAnalyticsAggregateAttributes:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregateName'
        function:
          $ref: '#/components/schemas/Function'
    NetworkDevicesAnalyticsAttributes:
      type: array
      description: List of field names on which the aggregate function should be applied
      items:
        $ref: '#/components/schemas/NetworkDevicesSummaryAttribute'
    NetworkDevicesAnalyticsGroupBy:
      type: array
      description: List of field names on which the Group By function should be applied
      example:
      - deviceFamily
      - deviceRole
      items:
        type: string
        description: List of field names to group by.
        enum:
        - deviceFamily
        - deviceRole
        - deviceType
        - softwareVersion
        - reachability
        - serialNumber
        - platformId
        - deviceSeries
        - productVendor
        - siteHierarchy
        - siteHierarchyId
        - overallHealthScoreRange
        - cpuScoreRange
        - memoryScoreRange
        - wqePoolScoreRange
        - errorScoreRange
        - discardScoreRange
        - upLinkScoreRange
        - freeMbufScoreRange
        - packetPoolScoreRange
        - channelAirQualityScoreRange
        - channelNoiseScoreRange
        - utilizationScoreRange
        - interferenceScoreRange
        - apEthernetMacAddress
        - connectedWlcName
        - apFlexGroup
        - apGroup
        - apLocation
        - apSiteTagName
        - apPolicyTagName
        - apRfTagName
        - apRadioBand
        - apRadioId
        - apMode
        - apAdminState
        - apOperationalState
        - deviceUuid
        - name
        - macAddress
        - managementIpAddress
        - powerAllocationLoadRange
    NetworkDevicesSummaryAttribute:
      type: string
      description: The network device summary attributes
      example: name
      enum:
      - managementIpAddress
      - name
      - macAddress
      - deviceUuid
      - deviceFamily
      - deviceRole
      - deviceType
      - softwareVersion
      - serialNumber
      - platformId
      - deviceSeries
      - productVendor
      - upTime
      - siteHierarchy
      - siteHierarchyId
      - overallHealthScore
      - fabricOverallScore
      - cpuScore
      - cpuUtilization
      - memoryUtilization
      - memoryScore
      - interDeviceLinkScore
      - linkUtilization
      - linkUtilizationScore
      - discardScore
      - errorScore
      - freeMemoryBuffer
      - freeMemoryBufferScore
      - freeTimer
      - freeTimerScore
      - packetPool
      - packetPoolScore
      - wanLinkUtilization
      - wqePool
      - wqePoolScore
      - apCount
      - wlcClientCount
      - noiseScore
      - utilizationScore
      - interferenceScore
      - airQualityScore
      - apRadioId
      - noise
      - utilization
      - channelUtilization
      - interference
      - airQuality
      - apRadioBand
      - apRadioChannel
      - apRadioClientCount
      - apRadioOperState
      - connectedWlcName
      - goodDeviceCount
      - fairDeviceCount
      - poorDeviceCount
      - noHealthDeviceCount
      - fabricRole
      - transitFabrics
      - fabricSiteName
      - l2Vns
      - fabricSiteId
      - networkProtocol
      - l3Vns
      - fabricTransitScore
      - fabricSiteScore
      - fabricVnScore
      - fabsiteFcpScore
      - fabsiteInfraScore
      - fabsiteFsconnScore
      - vnExitScore
      - vnFcpScore
      - vnStatusScore
      - vnServiceScore
      - transitControlPlaneScore
      - transitServicesScore
      - tcpConnScore
      - bgpBgpSiteScore
      - vniStatusScore
      - pubsubTransitConnScore
      - bgpPeerInfraVnScore
      - internetAvailScore
      - bgpEvpnScore
      - lispTransitConnScore
      - ctsEnvDataDownloadScore
      - pubsubInfraVnScore
      - peerScore
      - bgpPeerScore
      - remoteInternetAvailScore
      - bgpTcpScore
      - pubsubSessionScore
      - aaaStatusScore
      - lispCpConnScore
      - bgpPubsubSiteScore
      - mcastScore
      - portChannelScore
      - powerBudget
      - usedPower
      - remainingPower
      - powerUsagePercentage
      - interfacePowerMax
      - numPorts
      - usedPorts
      - freePorts
      - totalPower
      - reservedPower
      - allocatedPower
      - allocatedPowerPoe
      - allocatedPowerSystem
      - switchAvailablePower
      - consumedPowerSystem
      - consumedPowerPoe
      - consumedPower
    NetworkDevicesSummaryFilterKey:
      type: string
      description: Summary filter support key name
      example: macAddress
      enum:
      - managementIpAddress
      - name
      - macAddress
      - deviceUuid
      - deviceFamily
      - deviceRole
      - deviceType
      - softwareVersion
      - platformId
      - siteHierarchy
      - siteHierarchyId
      - overallHealthScore
      - cpuScore
      - cpuUtilization
      - memoryUtilization
      - memoryScore
      - interDeviceLinkScore
      - linkUtilizationScore
      - discardScore
      - errorScore
      - freeMemoryBufferScore
      - freeTimerScore
      - packetPoolScore
      - wqePoolScore
      - apCount
      - wlcClientCount
      - interferenceScore
      - airQualityScore
      - apRadioId
      - noise
      - channelUtilization
      - interference
      - airQuality
      - apRadioBand
      - apRadioChannel
      - apRadioClientCount
      - apRadioOperState
      - connectedWlcName
      - fabricRole
      - transitFabrics
      - fabricSiteName
      - l2Vns
      - fabricSiteId
      - networkProtocol
      - l3Vns
      - overallFabricScore
      - fabricTransitScore
      - fabricSiteScore
      - fabricVnScore
      - fabsiteFcpScore
      - fabsiteInfraScore
      - fabsiteFsconnScore
      - vnExitScore
      - vnFcpScore
      - vnStatusScore
      - vnServiceScore
      - transitControlPlaneScore
      - transitServicesScore
      - tcpConnScore
      - bgpBgpSiteScore
      - vniStatusScore
      - pubsubTransitConnScore
      - bgpPeerInfraVnScore
      - internetAvailScore
      - bgpEvpnScore
      - lispTransitConnScore
      - ctsEnvDataDownloadScore
      - pubsubInfraVnScore
      - peerScore
      - bgpPeerScore
      - remoteInternetAvailScore
      - bgpTcpScore
      - pubsubSessionScore
      - aaaStatusScore
      - lispCpConnScore
      - bgpPubsubSiteScore
      - mcastScore
      - portChannelScore
    NetworkDevicesAnalyticsFilters:
      type: array
      description: "List of filters to apply when querying the Network devices data. \n\nSupported operators are [in, eq, neq, notIn, like]\n\nWhen using filters, the request must contain only fields from the same grouping (across all request fields)\n\n | Group | Valid Fields |\n | --- | --- |\n| HealthScore  |   pubsubSessionScoreRange, bgpPeerInfraVnScoreRange, aaaStatusScoreRange, fabricRole, ctsEnvDataDownloadScore, deviceType, ctsEnvDataDownloadScoreRange, tcpConnScoreRange, fabsiteFcpScore,tcpConnScore, discardScoreRange, bgpEvpnScoreRange, bgpBgpSiteScore, apCount, transitControlPlaneScore, vnExitScore, pubsubTransitConnScore, aaaStatusScore, deviceFamily, portChannelScore, poorDeviceCount, wqePoolScore, siteHierarchyGraphId, bgpPubsubSiteScoreRange, bgpPeerInfraVnScore, memoryScoreRange, bgpBgpSiteScoreRange, portChannelScoreRange, softwareVersion, deviceRole, upLinkScoreRange, vniStatusScoreRange, internetAvailScore, bgpEvpnScore, remoteInternetAvailScoreRange, fabricOverallScore, fabsiteFcpScoreRange, freeMbufScoreRange, lispTransitConnScore, memoryUtilization, deviceRole, wlcClientCount, vnServiceScoreRange, bgpPeerScoreRange, fabsiteInfraScoreRange, vnFcpScore, siteHierarchy, noHealthDeviceCount, packetPoolScoreRange, siteHierarchy, discardScore, packetPoolScore, fabricSiteScoreRange, transitServicesScore, transitServicesScore, lispCpConnScoreRange, fabricSiteScore, transitServicesScoreRange, fabricTransitScoreRange, utilizationScoreRange, internetAvailScoreRange, freeMemoryBufferScore, interDeviceLinkScore, fabricTransitScore, pubsubInfraVnScoreRange, connectedWlcName, lispTransitConnScoreRange, l2Vns, fairDeviceCount, deviceUuid, pubsubInfraVnScore, mcastScoreRange, overallHealthScoreRange, vnServiceScore, channelAirQualityScoreRange, pubsubTransitConnScoreRange, vniStatusScore, macAddress, peerScore, wqePoolScoreRange, name, connectedWlcName, bgpPeerScore, vnStatusScore, errorScore, fabsiteFsconnScore, bgpTcpScore, pubsubSessionScore, fabricSiteId, vnExitScoreRange, interferenceScoreRange, goodDeviceCount, vnFcpScoreRange, lispCpConnScore, reachability, overallHealthScore, bgpPubsubSiteScore, overallFabricScoreRange, fabsiteFsconnScoreRange, cpuUtilization, bgpTcpScoreRange, channelNoiseScoreRange, transitControlPlaneScoreRange, freeTimerScore, managementIpAddress, platformId, mcastScore, peerScoreRange, fabricVnScore, linkUtilizationScore, cpuScoreRange, fabricVnScoreRange, memoryScore, remoteInternetAvailScore, errorScoreRange, vnStatusScoreRange, fabsiteInfraScore, l3Vns, cpuScore |\n    | PoE Switch | remainingPower, allocatedPowerSystem, powerAllocationLoadRange, usedPower, usedPower, allocatedPowerPoe, siteHierarchyGraphId, freePorts, usedPorts, name, powerBudget, powerUsagePercentage, numPorts | \n    | PoE Module | remainingPower, allocatedPower, interfacePowerMax, reservedPower, consumedPowerPoe, usedPower, freePorts, switchAvailablePower, usedPorts, powerBudget, powerUsagePercentage, numPorts, totalPower, consumedPowerSystem |\n    | Radio Metrics | airQuality, channelUtilization, apRadioChannel, apRadioClientCount, apMode, apEthernetMacAddress, interferenceScore, apRadioId, apOperationalState, apRadioOperState, noise, apAdminState, clientCount,apRadioBand\n"
      example:
      - key: family
        operator: eq
        value: Switches and Hubs
      - key: macAddress
        operator: in
        value:
        - 00:1E:49:81:6C:FF
        - 34:1E:49:81:6C:F0
      - logicalOperator: or
        filters:
        - key: siteHierarchy
          operator: like
          value: Global/Paris
        - key: siteHierarchy
          operator: eq
          value: Global/Eiffel Tower
      items:
        type: object
        allOf:
        - $ref: '#/components/schemas/NetworkDevicesSummaryFilter'
    NetworkDevicesSummaryFilter:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/NetworkDevicesSummaryFilterKey'
        operator:
          $ref: '#/components/schemas/Operator'
        logicalOperator:
          $ref: '#/components/schemas/LogicalOperator'
        value:
          type: object
          description: |
            Field value(s) to filter the data set. Array of values is used for   "in" or "out" operator. Values will be of whatever type the   specific field being filtered is defined with.

            For other operators, filter value is of whatever type the specific   field being filtered is defined with.

            In the case of an "and" or "or" operator, this values array will be   ignored, and the values arrays in each of the *nested filters*   will be used.
        filters:
          type: array
          description: |
            Nested array of filters in case of AND/OR based filters. Only one   level of nesting will be supported.

            Structure of nested filter is the same as parent with all operators   supported except AND or OR.
          items:
            $ref: '#/components/schemas/NetworkDevicesSummaryFilter'
      description: |
        In case of single filter, please use `key`, `operator` and `value` combination. If multiple filters need to be applied using a logical   operation, please use `logicalOperator` and populate the list of 'filters' with a   combination of FilterObj. Filters can be nested to build complex   queries.
    PaginationWithAggregateSortBy:
      type: object
      properties:
        limit:
          type: integer
          description: The reference to the limit applied in the Pagination Request.
          example: 500
        offset:
          type: integer
          description: The reference to the record offset applied in the Pagination Request.
          example: 1
        count:
          type: integer
          description: Total number of records related to the resource after applying applicable filtering
          example: 12500
        sortBy:
          type: array
          items:
            $ref: '#/components/schemas/AggregateSortBy'
      description: |
        Reference to pagination properties
    TrendPaginationRequest:
      type: object
      properties:
        limit:
          type: integer
          description: The reference to the limit applied in the Pagination Request.
          example: 500
        offset:
          type: integer
          description: The reference to the record offset applied in the Pagination Request.
          example: 1
        timestampOrder:
          type: string
          description: The sort order of the timestamp can be either ascending or descending
          enum:
          - asc
          - desc
      description: 'The reference for Pagination trend request.      '
    TrendPaginationResponse:
      type: object
      properties:
        limit:
          type: integer
          description: The reference to the limit applied in the Pagination Request.
          example: 500
        offset:
          type: integer
          description: The reference to the record offset applied in the Pagination Request.
          example: 1
        count:
          type: integer
          description: Total number of records related to the resource after applying applicable filtering
          example: 250
        timestampOrder:
          type: string
          description: The sort order of the timestamp can be either ascending or descending.
          enum:
          - asc
          - desc
    AggregateSortBy:
      type: object
      properties:
        name:
          type: string
          description: Field name by which sort is requested
          example: ipAddress
        order:
          type: string
          description: The sort order of the field ascending or descending.
          enum:
          - asc
          - desc
        function:
          $ref: '#/components/schemas/Function'
      description: |
        Records are sorted based on the fields specified in the array.
    startAndEndTime:
      type: object
      properties:
        startTime:
          type: integer
          description: "Start time from which API queries the data set related to the resource  . It must be specified in UNIX epochtime in milliseconds. Value is   inclusive.\n  \nIf no startTime is provided, API will default to currentTime\n"
          format: int64
          example: 1705348800000
        endTime:
          type: integer
          description: "End time to which API queries the data set related to the resource. It   must be specified in UNIX epochtime in milliseconds. Value is   inclusive. \n  \nIf no endTime is provided, API will default to currentTime\n"
          format: int64
          example: 1705435200000
      description: |
        start and end time of data set to query. Data is aggregated   based on time window and timestamped with window start time. |
        For example -
          1. When data events falls in a 5 minute window from 12-13-2023 11:25 PM to   12-13-2023 11:30 PM the timestamp of the aggregated data is 12-13-2023   11:25 PM - 1702509900000 (Unix epochtime). If user needs data from 12-13  -2023 11:25 PM to 12-13-2023 11:30 PM  user must use below timestamps |
          startTime = 1702509900000 (12-13-2023 11:25 PM) |
          endTime = 1702510199000 (12-13-2023 11:29:59 PM) |
          2. When data to be queried is for 3 hours period from 12-13-2023 08:30 PM   to 12-13-2023 11:30 PM. User must use below timestamps |
          startTime = 1702528200000 (12-13-2023 08:30 PM) |
          endTime = 1702510199000 (12-13-2023 11:29:59 PM) |
          2. When data to be queried is for 24 hours period from 12-12-2023 11:30 PM   to 12-13-2023 11:30 PM. User must use below timestamps |
          startTime = 1702423800000 (12-12-2023 11:30 PM) |
          endTime = 1702510199000 (12-13-2023 11:29:59 PM) |
          3. When data to be queried is for 7 days period from 12-06-2023 11:30 PM   to 12-13-2023 11:30 PM. User must use below timestamps |
          startTime = 1701905400000 (12-06-2023 11:30 PM) |
          endTime = 1702510199000 (12-13-2023 11:29:59 PM)
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/ErrorObject'
        version:
          type: string
          description: The version of the response
          example: "1.0"
      description: Contains information explaining the error that occured   processing this request.
      example:
        response:
        - errorCode: 2600
          message: Error message
          detail: Error details
      externalDocs:
        description: Error Codes - Cisco DevNet
        url: https://developer.cisco.com/docs/dna-center/#!api-quick-start/error-codes
    ErrorObject:
      type: object
      properties:
        errorCode:
          type: integer
          description: Application specific error code returned by the server
        message:
          type: string
          description: Brief message about the error condition
        detail:
          type: string
          description: "A more detailed explanation of the error condition the   parameter and its value, that caused the condition and why it caused it."
    Operator:
      type: string
      description: Type of filter operator to use for querying data | in and out operator takes multiple values and applies the filters
      enum:
      - in
      - neq
      - lt
      - gt
      - lte
      - gte
      - eq
      - notIn
      - like
    LogicalOperator:
      type: string
      description: |
        Operator to use when attempting to apply a logical conjunction of more   than 1 filter

        Logical operations include: 'and', 'or'.
      enum:
      - and
      - or
    Pagination:
      type: object
      properties:
        limit:
          minimum: 1
          type: integer
          description: Number of records to fetch in a page
          example: 100
          default: 500
        offset:
          minimum: 1
          type: integer
          description: Starting offset of data to fetch and returned
          example: 5
          default: 1
        sortBy:
          type: array
          description: Records are sorted based on the fields specified in the   array.
          items:
            $ref: '#/components/schemas/Pagination_sortBy'
    NetworkDeviceTrendResponse_groups:
      type: object
      properties:
        id:
          type: string
          description: This the group key. Its the concatination of groupBy attributes
          example: "cpuName=Switch 1 - Core: 1"
        attributes:
          $ref: '#/components/schemas/NetworkDeviceTrendAttributeResponse'
        aggregateAttributes:
          type: array
          description: |
            Successfully returned list of aggregate Attributes
          items:
            $ref: '#/components/schemas/NetworkDeviceTrendResponseAggregate'
    NetworkDeviceTrendAttributeResponse_inner:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDeviceTrendAttribute'
        value:
          type: object
          description: Value will always be latest within the interval
          example: TestDeviceName1
    CountIntegerResponse_response:
      type: object
      properties:
        count:
          type: integer
          description: The total number of records related to the resource
          format: int64
          example: 1000
    NetworkDevicesTrendAnalyticsGroupResponse_groups:
      type: object
      properties:
        id:
          type: string
          description: "This represents the dynamic group key, formed by concatenating the attributes and their corresponding values used for grouping. In this case, 'family' and 'role' are the attributes combined with their respective values.The '=' delimiter separates the key and value within each attribute, and the '&&' delimiter separates different groupBy keys."
          example: family=Switches and Hubs&&role=ACCESS
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributesResponse'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregatesResponse'
    NetworkDevicesTopNAnalyticsGroupResponse_groups:
      type: object
      properties:
        id:
          type: string
          description: This the group key. Its the concatination of groupBy attributes
          example: family=Switches and hubs&&role=ACCESS
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributesResponse'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregatesResponse'
    NetworkDevicesAnalyticsGroupResponse_groups:
      type: object
      properties:
        id:
          type: string
          description: "This represents the dynamic group key, formed by concatenating the attributes and their corresponding values used for grouping. In this case, 'family' and 'role' are the attributes combined with their respective values.The '=' delimiter separates the key and value within each attribute, and the '&&' delimiter separates different groupBy keys."
          example: family=Switches and hubs&&role=ACCESS
        attributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAttributesResponse'
        aggregateAttributes:
          $ref: '#/components/schemas/NetworkDevicesAnalyticsAggregatesResponse'
    NetworkDevicesAnalyticsAttributesResponse_inner:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NetworkDevicesSummaryAttribute'
        value:
          type: object
          description: Value will always be latest within the interval
    Pagination_sortBy:
      type: object
      properties:
        name:
          type: string
          description: Field name by which sort is requested
          example: name
        order:
          type: string
          description: Sort order. 'asc' for ascending and 'desc' for   descending
          example: asc
          enum:
          - asc
          - desc
      description: List of field names and corresponding order used to sort   the records.
  responses:
    NetworkDevicesResponse:
      description: Collection of Network Devices Response model on success with aggregate attributes
      content:
        application/json':
          schema:
            $ref: '#/components/schemas/NetworkDevicesResponse'
    NetworkDeviceResponse:
      description: Collection of Network Devices Response model on success with aggregate attributes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkDeviceResponse'
    NetworkDeviceTrendGroupResponse:
      description: Collection of a network device Trend data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkDeviceTrendGroupResponse'
          examples:
            TrendIdAnalyticsResponseExample:
              $ref: '#/components/examples/TrendIdAnalyticsResponseExample'
            TrendIdAnalyticsPoEResponseExample:
              $ref: '#/components/examples/TrendIdAnalyticsPoEResponseExample'
    CountIntegerResponse:
      description: Reponse object containing total count of the records after applying requested filters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CountIntegerResponse'
    NetworkDevicesAnalyticsResponse:
      description: Analytics group response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkDevicesAnalyticsResponse'
    NetworkDevicesTopNAnalyticsResponse:
      description: Network Devices TopN Analytics group response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkDevicesTopNAnalyticsResponse'
    NetworkDevicesTrendResponse:
      description: Analytics group response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkDevicesTrendResponse'
    "400":
      description: "The client made a request that the server could not understand (for example, the request syntax is incorrect)."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    "500":
      description: The server could not fulfill the request due to internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    "1XX":
      description: Informational Responses - The server received the request and sent an informational response.
    "2XX":
      description: "Successful Responses - The server received the client request, understood it, and accepted it."
    "3XX":
      description: Redirection Messages - The client must take additional action to complete the request.
    "4XX":
      description: Client Error Responses - The client request caused the error.
    "5XX":
      description: Server Error Responses - The server failed to fulfill the request.
    defaultError:
      description: Unexpected Error
  parameters:
    name:
      name: name
      in: query
      description: The name of the entity (Ex. "TestName"")
      required: false
      style: form
      explode: true
      schema:
        type: string
    names:
      name: names
      in: query
      description: |
        The list of entity names

        This field supports substring matches in PCRE format. E.g. ".*TestName.*"

        Examples:

        names=TestDeviceName (single entity ame )

        names=TestName1, TestName2, TestName3 (multiple entity names with comma separatort)
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    networkDeviceIds:
      name: networkDeviceId
      in: query
      description: |
        The list of Network Device Uuids. (Ex. "6bef213c-19ca-4170-8375-b694e251101c")

        This field supports substring matches in PCRE format. E.g. ".*8375.*"

        Examples:

        networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c (single networkDeviceId requested)

        networkDeviceId=6bef213c-19ca-4170-8375-b694e251101c&networkDeviceId=32219612-819e-4b5e-a96b-cf22aca13dd9&networkDeviceId=2541e9a7-b80d-4955-8aa2-79b233318ba0 (multiple networkDeviceIds with & separatort)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
    ipAddress:
      name: ipAddresses
      in: query
      description: "The network entity IPAddress (Ex. \"10.1.1.1\"), either Ipv4 or Ipv6"
      required: false
      style: form
      explode: true
      schema:
        type: string
    maintenanceMode:
      name: maintenanceMode
      in: query
      description: The device maintenanceMode status true or false
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    NetworkDeviceViews:
      name: view
      in: query
      description: The List of Network Device model views. Please refer to ```NetworkDeviceView``` for the supported list
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    NetworkDeviceAttributes:
      name: attribute
      in: query
      description: The List of Network Device model attributes. This is helps to specificy the intrested fields in the request.
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    fabricSiteIds:
      name: fabricSiteId
      in: query
      description: |
        The fabric site Id or list to fabric site Ids to filter the data

        This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

        Examples:

        `?fabricSiteId=fabricSiteUuid)

        `?fabricSiteId=fabricSiteUuid1&fabricSiteId=fabricSiteUuid2` (multiple fabricSiteIds requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    l2Vns:
      name: l2Vn
      in: query
      description: |
        The L2 Virtual Network Id or list to Virtual Network Ids to filter the data

        This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

        Examples:

        `?l2Vn=virtualNetworkId

        `?l2Vn=virtualNetworkId1&l2Vn=virtualNetworkId2` (multiple virtualNetworkId's requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    l3Vns:
      name: l3Vn
      in: query
      description: |
        The L3 Virtual Network Id or list to Virtual Network Ids to filter the data

        This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

        Examples:

        `?l3Vn=virtualNetworkId

        `?l3Vn=virtualNetworkId1&l3Vn=virtualNetworkId2` (multiple virtualNetworkId's requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    transitNetworkIds:
      name: transitNetworkId
      in: query
      description: |
        The Transit Network Id or list to Transit Network Ids to filter the data

        This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

        Examples:

        `?transitNetworkId=transitNetworkId

        `?transitNetworkId=transitNetworkuuid1&transitNetworkId=transitNetworkuuid1` (multiple transitNetworkIds requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    fabricRole:
      name: fabricRole
      in: query
      description: |
        The list of fabric device role.
        Examples:
        fabricRole=BORDER, fabricRole=BORDER&fabricRole=EDGE (multiple fabric device roles with & separator)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - BORDER
          - EDGE
          - MAP-SERVER
          - LEAF
          - SPINE
          - TRANSIT-CP
          - EXTENDED-NODE
          - WLC
          - UNIFIED-AP
    startTime:
      name: startTime
      in: query
      description: |
        Start time from which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
      schema:
        type: integer
        format: int64
      example: 1705348800000
    endTime:
      name: endTime
      in: query
      description: |
        End time to which API queries the data set related to the resource. It must be specified in UNIX epochtime in milliseconds. Value is inclusive.
      required: false
      schema:
        type: integer
        format: int64
      example: 1705435200000
    limit_300:
      name: limit
      in: query
      description: "Maximum number of records to return. In high-scale environments, setting the limit to 500 could lead to increased latency"
      schema:
        maximum: 500
        minimum: 1
        type: integer
        default: 300
    offset:
      name: offset
      in: query
      description: Specifies the starting point within all records returned by the API. It's one based offset. The starting value is 1.
      schema:
        minimum: 1
        type: integer
        default: 1
    sortBy:
      name: sortBy
      in: query
      description: A field within the response to sort by.
      schema:
        type: string
    order:
      name: order
      in: query
      description: The sort order of the field ascending or descending.
      schema:
        type: string
        default: asc
        enum:
        - asc
        - desc
    siteHierarchies:
      name: siteHierarchy
      in: query
      description: |
        The full hierarchical breakdown of the site tree starting from Global site name and ending with the specific site name. The Root site is named "Global" (Ex. `Global/AreaName/BuildingName/FloorName`)

        This field supports wildcard asterisk (`*`) character search support. E.g. `*/San*, */San, /San*`

        Examples:

        `?siteHierarchy=Global/AreaName/BuildingName/FloorName` (single siteHierarchy requested)

        `?siteHierarchy=Global/AreaName/BuildingName/FloorName&siteHierarchy=Global/AreaName2/BuildingName2/FloorName2` (multiple siteHierarchies requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    siteHierarchyIds:
      name: siteHierarchyId
      in: query
      description: |
        The full hierarchy breakdown of the site tree in id form starting from Global site UUID and ending with the specific site UUID. (Ex. `globalUuid/areaUuid/buildingUuid/floorUuid`)

        This field supports wildcard asterisk (`*`) character search support. E.g. `*uuid*, *uuid, uuid*`

        Examples:

        `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid `(single siteHierarchyId requested)

        `?siteHierarchyId=globalUuid/areaUuid/buildingUuid/floorUuid&siteHierarchyId=globalUuid/areaUuid2/buildingUuid2/floorUuid2` (multiple siteHierarchyIds requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    siteIds:
      name: siteId
      in: query
      description: |
        The UUID of the site. (Ex. `flooruuid`)

        Examples:

        `?siteId=id1` (single id requested)

        `?siteId=id1&siteId=id2&siteId=id3` (multiple ids requested)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    ids:
      name: id
      in: query
      description: |
        The list of entity Uuids. (Ex."6bef213c-19ca-4170-8375-b694e251101c")
        Examples: id=6bef213c-19ca-4170-8375-b694e251101c (single entity uuid requested)
        id=6bef213c-19ca-4170-8375-b694e251101c&id=32219612-819e-4b5e-a96b-cf22aca13dd9&id=2541e9a7-b80d-4955-8aa2-79b233318ba0 (multiple entity uuid with '&' separator)
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    managementIpAddresses:
      name: managementIpAddress
      in: query
      description: |
        The list of entity management IP Address. It can be either Ipv4 or Ipv6 address or combination of both(Ex. "121.1.1.10")

        This field supports wildcard (`*`) character-based search.  Ex: `*1.1*` or `1.1*` or `*1.1`

        Examples:
        managementIpAddresses=121.1.1.10
        managementIpAddresses=121.1.1.10&managementIpAddresses=172.20.1.10&managementIpAddresses=200:10&=managementIpAddresses172.20.3.4 (multiple entity IP Address with & separator)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    macAddresses:
      name: macAddress
      in: query
      description: "The macAddress of the network device or client\nThis field supports wildcard (`*`) character-based search. \nEx: `*AB:AB:AB*` or `AB:AB:AB*` or `*AB:AB:AB`\nExamples:\n\n`macAddress=AB:AB:AB:CD:CD:CD` (single macAddress requested)\n\n`macAddress=AB:AB:AB:CD:CD:DC&macAddress=AB:AB:AB:CD:CD:FE` (multiple macAddress requested)\n"
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    families:
      name: family
      in: query
      description: |
        The list of network device family names

        Examples:
        family=Switches and Hubs (single network device family name )
        family=Switches and Hubs&family=Router&family=Wireless Controller (multiple Network device family names with & separator)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - Switches and Hubs
          - Routers
          - Wireless Controller
          - Unified AP
          - Wireless Sensor
          - Third Party Device
    types:
      name: type
      in: query
      description: |
        The list of network device type This field supports wildcard (`*`) character-based search. Ex: `*9407R*` or `*9407R` or `9407R*`
        Examples:
        type=SwitchesCisco Catalyst 9407R Switch (single network device types )
        type=Cisco Catalyst 38xx stack-able ethernet switch&type=Cisco 3945 Integrated Services Router G2 (multiple Network device types with & separator)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    roles:
      name: role
      in: query
      description: |
        The list of network device role.
        Examples:
        role=CORE, role=CORE&role=ACCESS&role=BORDER ROUTER (multiple Network device serial number with & separator)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - ACCESS
          - CORE
          - DISTRIBUTION
          - BORDER ROUTER
    softwareVersions:
      name: softwareVersion
      in: query
      description: |
        The list of network device software version This field supports wildcard (`*`) character-based search. Ex: `*17.8*` or `*17.8` or `17.8*`
        Examples:
        softwareVersion=2.3.4.0 (single network device software version )
        softwareVersion=17.9.3.23&softwareVersion=17.7.1.2&softwareVersion=*.17.7 (multiple Network device software versions with comma separatort)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    healthScores:
      name: healthScore
      in: query
      description: |
        The list of entity health score categoryies

        Examples:

        healthScore=good,
        healthScore=good&healthScore=fair (multiple entity healthscore values with & separator)
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - poor
          - good
          - fair
          - noHealth
  examples:
    SummaryAnalyticsWithGroupByRequestExample:
      summary: SummaryAnalyticsWithGroupByRequest
      value:
        startTime: 1705348800000
        endTime: 1705435200000
        groupBy:
        - macAddress
        attributes:
        - name
        - managementIpAddress
        filters:
        - key: siteHierarchy
          operator: eq
          value: Global/Paris
        aggregateAttributes:
        - name: memoryUtilization
          function: avg
        page:
          limit: 2
          offset: 1
          sortBy:
          - name: name
            order: asc
    SummaryAnalyticsWithGroupByResponseExample:
      summary: SummaryAnalyticsWithGroupByResponse
      value:
        response:
          attributes: []
          aggregateAttributes: []
          groups:
          - id: macAddress=00:1E:49:81:6C:FF
            attributes:
            - name: macAddress
              value: 00:1E:49:81:6C:FF
            - name: name
              value: DummyTestDevice1
            - name: ipAddress
              value: 10.11.11.12
            aggregateAttributes:
            - name: memory
              function: avg
              value: 55.12
          - id: macAddress=BE:3E:94:18:7E:BC
            attributes:
            - name: macAddress
              value: BE:3E:94:18:7E:BC
            - name: name
              value: TestDeviceName
            - name: ipAddress
              value: 172.20.33.22
            aggregateAttributes:
            - name: memory
              function: avg
              value: 75.12
        page:
        - limit: 2
          offset: 1
          count: 20
          sortBy:
          - name: name
            order: asc
    TopNDeviceAnalyticsRequestExamples:
      summary: TopN CPU Utilization per Family & Role
      value:
        startTime: 1705348800000
        endTime: 1705435200000
        topN: 10
        groupBy:
        - deviceFamily
        - deviceRole
        attributes: []
        filters:
        - key: siteHierarchy
          operator: eq
          value: Global/Paris
        aggregateAttributes:
        - name: cpuUtilization
          function: max
        - name: cpuUtilization
          function: min
        - name: memoryUtilization
          function: avg
        page:
          limit: 2
          offset: 1
          sortBy:
          - name: cpuUtilization
            order: desc
            function: max
    DeviceCountRequestExample:
      summary: DeviceCountRequestExample
      value:
        startTime: 1705348800000
        endTime: 1705435200000
        filters:
        - key: deviceFamily
          operator: eq
          value: Switches and Hubs
        - key: macAddress
          operator: in
          value:
          - 00:1E:49:81:6C:FF
          - 34:1E:49:81:6C:F0
        - logicalOperator: or
          filters:
          - key: siteHierarchy
            operator: like
            value: Global/Paris
          - key: siteHierarchy
            operator: eq
            value: Global/Eiffel Tower
    SummaryAnalyticsWithoutGroupByRequestExample:
      summary: SummaryAnalyticsWithoutGroupByRequest
      value:
        startTime: 1705348800000
        endTime: 1705435200000
        groupBy: []
        attributes: []
        filters:
        - key: siteHierarchy
          operator: eq
          value: Global/Paris
        aggregateAttributes:
        - name: overallHealthScore
          function: count
        page:
          limit: 100
          offset: 1
          sortBy: []
    SummaryAnalyticsWithoutGroupByResponseExample:
      summary: SummaryAnalyticsWithoutGroupByResponse
      value:
        response:
          attributes: []
          aggregateAttributes:
          - name: overallHealthScore
            function: count
            value: 10
          groups: []
        page:
        - limit: 100
          offset: 1
          count: 1
    TopNDeviceAnalyticsResponseExamples:
      summary: TopN CPU Utilization per Family & Role
      value:
        response:
        - id: family=Switches and Hubs&&role=ACCESS
          attributes:
          - name: family
            value: Switches and Hubs
          - name: role
            value: ACCESS
          aggregateAttributes:
          - name: cpuUtilization
            function: max
            value: 90.22
          - name: cpuUtilization
            function: min
            value: 10.65
          - name: memoryUtilzation
            function: avg
            value: 45.3
        - id: family=Wireless Controller&&role=ACCESS
          attributes:
          - name: family
            value: Wireless Controller
          - name: role
            value: ACCESS
          aggregateAttributes:
          - name: cpuUtilization
            function: max
            value: 76.34
          - name: cpuUtilization
            function: min
            value: 56.199
          - name: memoryUtilzation
            function: avg
            value: 455.31
        page:
        - limit: 2
          offset: 1
          count: 20
          sortBy:
          - name: cpuUtilization
            order: desc
            function: max
        version: "1.0"
    TopNPoEAnalyticsResponseExamples:
      summary: TopN PoE PowerConsumption per powerDeviceType & poeVersion
      value:
        response:
        - id: powerDeviceType=Unified AP&&poEVersion=2.3.7.6+
          attributes:
          - name: powerDeviceType
            value: Unified AP
          - name: poEVersion
            value: 2.3.7.6+
          aggregateAttributes:
          - name: powerConsumption
            function: max
            value: 10.64
          - name: powerConsumption
            function: min
            value: 8.75
        - id: powerDeviceType=IEEE PD&&poEVersion=2.3.7.6+
          attributes:
          - name: powerDeviceType
            value: IEEE PD
          - name: poEVersion
            value: 2.3.7.6+
          aggregateAttributes:
          - name: powerConsumption
            function: max
            value: 15.64
          - name: powerConsumption
            function: min
            value: 6.75
        page:
        - limit: 2
          offset: 1
          count: 20
          sortBy:
          - name: powerConsumption
            order: asc
            function: max
        version: "1.0"
    TrendAnalyticsWithoutGroupByRequestExample:
      summary: TrendAnalyticsWithoutGroupByRequest
      value:
        startTime: 1705348800000
        endTime: 1705348800000
        trendInterval: 5MIN
        groupBy: []
        attributes:
        - overallHealthScore
        - fairDeviceCount
        - goodDeviceCount
        - poorDeviceCount
        - noHealthDeviceCount
        filters:
        - key: siteHierarchy
          operator: eq
          value: Global/Paris
        aggregateAttributes: []
        page:
          limit: 2
          offset: 1
          timestampOrder: desc
    TrendAnalyticsWithoutGroupByResponseExample:
      summary: TrendAnalyticsWithoutGroupByResponse
      value:
        response:
        - timestamp: 1705348800000
          attributes:
          - name: healthScore
            value: 31
          - name: totalCount
            value: 13
          - name: fairCount
            value: 3
          - name: goodCount
            value: 4
          - name: badCount
            value: 3
          - name: noHealthCount
            value: 3
          aggregateAttributes: []
          groups: []
        - timestamp: 1705348500000
          attributes:
          - name: healthScore
            value: 15
          - name: totalCount
            value: 13
          - name: fairCount
            value: 3
          - name: goodCount
            value: 2
          - name: badCount
            value: 2
          - name: noHealthCount
            value: 6
          aggregateAttributes: []
          groups: []
        page:
          limit: 2
          offset: 1
          count: 250
          timestampOrder: desc
    TrendAnalyticsWithGroupByRequestExample:
      summary: TrendAnalyticsWithGroupByRequest
      value:
        startTime: 1705348800000
        endTime: 1705348800000
        trendInterval: 5MIN
        groupBy:
        - overallHealthScoreRange
        attributes: []
        filters:
        - key: siteHierarchy
          operator: eq
          value: Global/Milpitas
        - key: deviceFamily
          operator: eq
          value: Unified AP
        aggregateAttributes:
        - name: overallHealthScore
          function: count
        page:
          limit: 2
          offset: 1
          timestampOrder: desc
    TrendAnalyticsWithPoeRequestExample:
      summary: TrendAnalyticsWithPoERequestExample
      value:
        startTime: 1705348800000
        endTime: 1705348800000
        trendInterval: 5MIN
        groupBy:
        - powerAllocationLoadRange
        attributes:
        - freePorts
        filters:
        - key: siteHierarchy
          operator: eq
          value: Global/Milpitas
        aggregateAttributes: []
        page:
          limit: 2
          offset: 1
          timestampOrder: desc
    TrendAnalyticsWithPoeResponseExample:
      summary: TrendAnalyticsWithPoeResponseExample
      value:
        response:
        - timestamp: 1705348800000
          attributes: []
          aggregateAttributes: []
          groups:
          - id: powerAllocationLoadRange=<20
            attributes:
            - name: powerAllocationLoadRange
              value: <20
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 10
          - id: powerAllocationLoadRange=20-40
            attributes:
            - name: powerAllocationLoadRange
              value: 20-40
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 7
          - id: powerAllocationLoadRange=40-60
            attributes:
            - name: powerAllocationLoadRange
              value: 40-60
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 2
        - timestamp: 1705348500000
          attributes: []
          aggregateAttributes: []
          groups:
          - id: powerAllocationLoadRange=<20
            attributes:
            - name: powerAllocationLoadRange
              value: <20
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 12
          - id: powerAllocationLoadRange=20-40
            attributes:
            - name: powerAllocationLoadRange
              value: 20-40
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 5
          - id: powerAllocationLoadRange=40-60
            attributes:
            - name: powerAllocationLoadRange
              value: 40-60
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 2
    TrendAnalyticsWithGroupByResponseExample:
      summary: TrendAnalyticsWithGroupByResponse
      value:
        response:
        - timestamp: 1705348800000
          attributes: []
          aggregateAttributes: []
          groups:
          - id: overallHealthScoreRange=good
            attributes:
            - name: overallHealthScoreRange
              value: good
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 10
          - id: overallHealthScoreRange=fair
            attributes:
            - name: overallHealthScoreRange
              value: fair
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 7
          - id: overallHealthScoreRange=bad
            attributes:
            - name: overallHealthScoreRange
              value: bad
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 2
        - timestamp: 1705348500000
          attributes: []
          aggregateAttributes: []
          groups:
          - id: overallHealthScoreRange=good
            attributes:
            - name: overallHealthScoreRange
              value: good
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 12
          - id: overallHealthScoreRange=fair
            attributes:
            - name: overallHealthScoreRange
              value: fair
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 1
          - id: overallHealthScoreRange=bad
            attributes:
            - name: overallHealthScoreRange
              value: bad
            aggregateAttributes:
            - name: networkDeviceId
              function: count
              value: 1
        page:
          limit: 2
          offset: 1
          count: 250
          timestampOrder: desc
    TrendIdAnalyticsRequestExample:
      summary: TrendIdAnalyticsRequestExample
      value:
        startTime: 1705348800000
        endTime: 1705435200000
        trendIntervalInMinutes: 10
        groupBy: []
        filters:
        - key: deviceName
          operator: eq
          value: testDeviceName
        - logicalOperator: or
          filters:
          - key: siteHierarchy
            operator: in
            value:
            - Global/San Jose
            - Global/SFO
          - key: overallHealthScore
            operator: eq
            value: "10"
        attributes:
        - deviceName
        aggregateAttributes:
        - name: memoryUtilization
          function: min
        - name: memoryUtilization
          function: max
        page:
          limit: 500
          offset: 1
          timestampOrder: asc
    TrendIdAnalyticsResponseExample:
      summary: TrendAnalyticsWithoutGroupByResponse
      value:
        response:
        - timestamp: 1705348800000
          attributes:
          - name: deviceName
            value: TestDeviceName1
          aggregateAttributes:
          - name: cpuUtilization
            function: min
            value: 23.9
          groups:
          - id: "cpuName=Switch 1 - Core: 1"
            attributes:
            - name: deviceName
            - value: TestDeviceName1
            aggregateAttributes:
            - name: cpuUtilization
              function: min
              value: 23.9
        page:
          limit: 500
          offset: 1
          count: 250
          timestampOrder: desc
        version: "1.0"
    TrendIdAnalyticsPoERequestExample:
      summary: TrendIdAnalyticsRequestExample
      value:
        startTime: 1705348800000
        endTime: 1705435200000
        trendIntervalInMinutes: 10
        groupBy: []
        filters:
        - key: switchAvailablePower
          operator: eq
          value: "10.50"
        attributes:
        - freePorts
        aggregateAttributes:
        - name: totalPower
          function: min
        page:
          limit: 500
          offset: 1
          timestampOrder: asc
    TrendIdAnalyticsPoEResponseExample:
      summary: TrendAnalyticsWithoutGroupByResponse
      value:
        response:
        - timestamp: 1705348800000
          attributes:
          - name: freePorts
            value: 20
          aggregateAttributes:
          - name: totalPower
            function: min
            value: 23.9
        page:
          limit: 500
          offset: 1
          count: 250
          timestampOrder: asc
        version: "1.0"
  requestBodies:
    NetworkDevicesQueryRequest:
      description: Payload to query Network Device
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NetworkDevicesQueryRequest'
      required: true
